
package game;

option java_package = "com.orange.network.game.protocol.constants";
option java_outer_classname = "GameConstantsProtos";

enum GameCommandType {

  // client --> server

  JOIN_GAME_REQUEST = 1;            // 加入游戏
  JOIN_GAME_RESPONSE = 2;
  
  START_GAME_REQUEST = 3;           // 开始游戏
  START_GAME_RESPONSE = 4;
  
  QUIT_GAME_REQUEST = 5;            // 退出游戏
  QUIT_GAME_RESPONSE = 6;  
  
  // CHANGE_ROOM_REQUEST = 7;
  // CHANGE_ROOM_RESPONSE = 8;
  
  SEND_DRAW_DATA_REQUEST = 11;
  SEND_DRAW_DATA_RESPONSE = 12;
  
  CLEAN_DRAW_REQUEST = 13;
  CLEAN_DRAW_RESPONSE = 14;
  
  CHAT_REQUEST = 15;                        // 聊天
  CHAT_RESPONSE = 16;
  
  COMPLETE_GAME_REQUEST = 17;               // 游戏结束
  COMPLETE_GAME_RESPONSE = 18;  

  FORCE_USER_QUIT_REQUEST = 19;             // 用户强制退出
  FORCE_USER_QUIT_RESPONSE = 20;
  

  
  FACETIME_CHAT_REQUEST = 81;
  FACETIME_CHAT_RESPONSE = 82;
  FACETIME_CHAT_START = 83;
  
  KEEP_ALIVE_REQUEST = 91;
  KEEP_ALIVE_RESPONSE = 92;
  
  //　For Dahuatou: client ------> service
  
  GET_ROOMS_REQUEST = 601;                          // 获取房间列表
  GET_ROOMS_RESPONSE = 602;         
        
  CREATE_ROOM_REQUEST = 603;                        // 创建房间
  CREATE_ROOM_RESPONSE = 604;        
  
  ENTER_ROOM_REQUEST = 605;                         // 进入房间
  ENTER_ROOM_RESPONSE = 606;                 

  REGISTER_ROOMS_NOTIFICATION_REQUEST = 607;        // 注册通知
  REGISTER_ROOMS_NOTIFICATION_RESPONSE = 608;      
  
  UNREGISTER_ROOMS_NOTIFICATION_REQUEST = 609;      // 取消通知
  UNREGISTER_ROOMS_NOTIFICATION_RESPONSE = 610;

  SERACH_ROOM_REQUEST = 611;
  SEARCH_ROOM_RESPONSE = 612;
  
  CALL_DICE_REQUEST = 621;                          // 叫骰
  CALL_DICE_RESPONSE = 622;
  
  OPEN_DICE_REQUEST = 623;                          // 开骰
  OPEN_DICE_RESPONSE = 624;                   
  
  BET_DICE_REQUEST = 625;
  BET_DICE_RESPONSE = 626;
  
  USE_ITEM_REQUEST = 631;                           // 使用道具
  USE_ITEM_RESPONSE = 632;        
  
  
  // server --> client
  
  // notifications
  
  USER_JOIN_NOTIFICATION_REQUEST = 51;
  USER_JOIN_NOTIFICATION_RESPONSE = 52;
  
  USER_QUIT_NOTIFICATION_REQUEST = 53;
  USER_QUIT_NOTIFICATION_RESPONSE = 54;

  GAME_START_NOTIFICATION_REQUEST = 55;
  GAME_START_NOTIFICATION_RESPONSE = 56;
  
  HOST_CHANGE_NOTIFICATION_REQUEST = 61;
  HOST_CHANGE_NOTIFICATION_RESPONSE = 62;
   
  
  NEW_DRAW_DATA_NOTIFICATION_REQUEST = 71;
  NEW_DRAW_DATA_NOTIFICATION_RESPONSE = 72;
  
  CLEAN_DRAW_NOTIFICATION_REQUEST = 73;
  CLEAN_DRAW_NOTIFICATION_RESPONSE = 74;
  
  CHAT_NOTIFICATION_REQUEST = 75;
  CHAT_NOTIFICATION_RESPONSE = 76;  
  
  GAME_TURN_COMPLETE_NOTIFICATION_REQUEST = 77;
  GAME_TURN_COMPLETE_NOTIFICATION_RESPONSE = 78;  
  
  // local message, not for service <--> client, only for local purpose
  LOCAL_CHANNEL_DISCONNECT = 201;
  LOCAL_FINISH_GAME = 203;
  LOCAL_JOIN_GAME = 204;
  LOCAL_GAME_TURN_COMPLETE = 205;
  LOCAL_USER_TIME_OUT = 206;
  
  // For New Sever Design
  LOCAL_NEW_USER_JOIN = 301;
  LOCAL_USER_QUIT = 302;
  LOCAL_DRAW_USER_QUIT = 303;
  LOCAL_ALL_OTHER_USER_QUIT = 304;
  LOCAL_OTHER_USER_QUIT = 305;
  LOCAL_TIME_OUT = 306;
  LOCAL_START_GAME = 307;
  LOCAL_WORD_PICKED = 308;
  LOCAL_ALL_USER_GUESS = 309;
  LOCAL_DRAW_USER_CHAT = 310;
  LOCAL_PLAY_USER_QUIT = 311;
  LOCAL_CALL_DICE = 312;
  LOCAL_OPEN_DICE = 313;
  LOCAL_USER_SKIP = 314;
  
  
  // For Dahuatou: service -------> client
  ROOM_NOTIFICATION_REQUEST = 701;                      // 房间通知
  ROOM_NOTIFICATION_RESPONSE = 702; 
   
  ROLL_DICE_BEGIN_NOTIFICATION_REQUEST = 711;           // 开始摇骰
  ROLL_DICE_BEGIN_NOTIFICATION_RESPONSE = 712;
  
  ROLL_DICE_END_NOTIFICATION_REQUEST = 713;             // 摇骰结束
  ROLL_DICE_END_NOTIFICATION_RESPONSE = 714;          
  
  NEXT_PLAYER_START_NOTIFICATION_REQUEST = 715;         // 下一个玩家开始
  NEXT_PLAYER_START_NOTIFICATION_RESPONSE = 716; 
  
  USER_DICE_NOTIFICATION = 717;
  
  GAME_OVER_NOTIFICATION_REQUEST = 731;                 // 游戏结束
  GAME_OVER_NOTIFICATION_RESPONSE = 732;
}

enum GameResultCode {
  SUCCESS = 0;
  
  // business errors
  ERROR_JOIN_GAME = 1;
  
  // user errors
  ERROR_USERID_NULL = 100;
  ERROR_USER_CANNOT_START_GAME = 101;
  ERROR_USER_NOT_IN_SESSION = 102;
  ERROR_USER_NOT_CURRENT_PLAY_USER = 103;
  ERROR_CURRENT_PLAY_USER_NULL = 104;
    
  // session errors
  ERROR_NO_SESSION_ID = 200;
  ERROR_NEXT_STATE_NOT_FOUND = 201;
  ERROR_SESSIONID_NULL = 202;
  ERROR_SESSION_ALREADY_START = 203;
  ERROR_SESSION_NOT_START = 204;
  ERROR_NO_SESSION_AVAILABLE = 205;
  ERROR_SESSIONID_FULL = 206;
  ERROR_SESSION_NAME_DUPLICATED = 207;

  
  // draw errors
  ERROR_NO_DRAW_DATA = 301;

  // dice error
  ERROR_DICE_ALREADY_OPEN = 401;
  ERROR_USER_ALREADY_CALL_DICE = 402;
  ERROR_DICE_OPEN_SELF = 403;
    
  // item erros
  ERROR_UNKNOWN_ITEM = 501;
  ERROR_EXCESS_TIME_LIMIT = 502;    


  // system errors
  ERROR_SYSTEM_HANDLER_NOT_FOUND = 910;
  ERROR_SYSTEM_EXCEPTION = 911;
  ERROR_SYSTEM_SECURITY_CHECK = 912;
  
}

enum GameCompleteReason {

  REASON_NOT_COMPLETE = 0;

  REASON_ALL_USER_GUESS = 1;
  
  REASON_ALL_USER_QUIT = 11;
  REASON_DRAW_USER_QUIT = 12;
  REASON_ONLY_ONE_USER = 13;
  
  REASON_EXPIRED = 21;
  
}

enum GameChatType {
  CHAT_GROUP = 0;
  CHAT_PRIVATE = 1;
}

enum DiceGameRuleType {
    RULE_NORMAL = 0;
    RULE_HIGH = 1;
    RULE_SUPER_HIGH = 2;
}
