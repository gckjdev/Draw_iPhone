/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_GameMessage_2eproto__INCLUDED
#define PROTOBUF_C_GameMessage_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C_BEGIN_DECLS

#include "GameConstants.pb-c.h"
#include "GameBasic.pb-c.h"
#include "Draw.pb-c.h"
#include "Dice.pb-c.h"
#include "ZhaJinHua.pb-c.h"
#include "BBS.pb-c.h"
#include "Opus.pb-c.h"

typedef struct _Game__GetRoomsRequest Game__GetRoomsRequest;
typedef struct _Game__GetRoomsResponse Game__GetRoomsResponse;
typedef struct _Game__CreateRoomRequest Game__CreateRoomRequest;
typedef struct _Game__CreateRoomResponse Game__CreateRoomResponse;
typedef struct _Game__SearchRoomRequest Game__SearchRoomRequest;
typedef struct _Game__SearchRoomResponse Game__SearchRoomResponse;
typedef struct _Game__RegisterRoomsNotificationRequest Game__RegisterRoomsNotificationRequest;
typedef struct _Game__RegisterRoomsNotificationResponse Game__RegisterRoomsNotificationResponse;
typedef struct _Game__UnRegisterRoomsNotificationRequest Game__UnRegisterRoomsNotificationRequest;
typedef struct _Game__UnRegisterRoomsNotificationResponse Game__UnRegisterRoomsNotificationResponse;
typedef struct _Game__CallDiceRequest Game__CallDiceRequest;
typedef struct _Game__CallDiceResponse Game__CallDiceResponse;
typedef struct _Game__OpenDiceRequest Game__OpenDiceRequest;
typedef struct _Game__OpenDiceResponse Game__OpenDiceResponse;
typedef struct _Game__UseItemRequest Game__UseItemRequest;
typedef struct _Game__UseItemResponse Game__UseItemResponse;
typedef struct _Game__UserDiceNotification Game__UserDiceNotification;
typedef struct _Game__TimeoutSettingRequest Game__TimeoutSettingRequest;
typedef struct _Game__TimeoutSettingResponse Game__TimeoutSettingResponse;
typedef struct _Game__BetRequest Game__BetRequest;
typedef struct _Game__BetResponse Game__BetResponse;
typedef struct _Game__CheckCardRequest Game__CheckCardRequest;
typedef struct _Game__CheckCardResponse Game__CheckCardResponse;
typedef struct _Game__FoldCardRequest Game__FoldCardRequest;
typedef struct _Game__FoldCardResponse Game__FoldCardResponse;
typedef struct _Game__ShowCardRequest Game__ShowCardRequest;
typedef struct _Game__ShowCardResponse Game__ShowCardResponse;
typedef struct _Game__CompareCardRequest Game__CompareCardRequest;
typedef struct _Game__CompareCardResponse Game__CompareCardResponse;
typedef struct _Game__ChangeCardRequest Game__ChangeCardRequest;
typedef struct _Game__ChangeCardResponse Game__ChangeCardResponse;
typedef struct _Game__JoinGameRequest Game__JoinGameRequest;
typedef struct _Game__JoinGameResponse Game__JoinGameResponse;
typedef struct _Game__StartGameRequest Game__StartGameRequest;
typedef struct _Game__StartGameResponse Game__StartGameResponse;
typedef struct _Game__RoomNotificationRequest Game__RoomNotificationRequest;
typedef struct _Game__RoomNotificationResponse Game__RoomNotificationResponse;
typedef struct _Game__RollDiceBeginNotificationRequest Game__RollDiceBeginNotificationRequest;
typedef struct _Game__RollDiceBeginNotificationResponse Game__RollDiceBeginNotificationResponse;
typedef struct _Game__RollDiceEndNotificationRequest Game__RollDiceEndNotificationRequest;
typedef struct _Game__RollDiceEndNotificationResponse Game__RollDiceEndNotificationResponse;
typedef struct _Game__NextPlayerStartNotificationRequest Game__NextPlayerStartNotificationRequest;
typedef struct _Game__NextPlayerStartNotificationResponse Game__NextPlayerStartNotificationResponse;
typedef struct _Game__BetDiceRequest Game__BetDiceRequest;
typedef struct _Game__BetDiceResponse Game__BetDiceResponse;
typedef struct _Game__GameOverNotificationRequest Game__GameOverNotificationRequest;
typedef struct _Game__GameOverNotificationResponse Game__GameOverNotificationResponse;
typedef struct _Game__GameChatRequest Game__GameChatRequest;
typedef struct _Game__GameChatResponse Game__GameChatResponse;
typedef struct _Game__SendDrawDataRequest Game__SendDrawDataRequest;
typedef struct _Game__SendDrawDataResponse Game__SendDrawDataResponse;
typedef struct _Game__GameStartNotificationRequest Game__GameStartNotificationRequest;
typedef struct _Game__GameStartNotificationResponse Game__GameStartNotificationResponse;
typedef struct _Game__GeneralNotification Game__GeneralNotification;
typedef struct _Game__FacetimeChatRequest Game__FacetimeChatRequest;
typedef struct _Game__FacetimeChatResponse Game__FacetimeChatResponse;
typedef struct _Game__GameMessage Game__GameMessage;
typedef struct _Game__DataQueryResponse Game__DataQueryResponse;


/* --- enums --- */

typedef enum _Game__BetType {
  GAME__BET_TYPE__BET_TYPE_CALL = 1,
  GAME__BET_TYPE__BET_TYPE_RAISE = 2
} Game__BetType;

/* --- messages --- */

struct  _Game__GetRoomsRequest
{
  ProtobufCMessage base;
  char *gameid;
  protobuf_c_boolean has_roomtype;
  int32_t roomtype;
  char *keyword;
};
#define GAME__GET_ROOMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__get_rooms_request__descriptor) \
    , NULL, 0,0, NULL }


struct  _Game__GetRoomsResponse
{
  ProtobufCMessage base;
  size_t n_sessions;
  Game__PBGameSession **sessions;
  protobuf_c_boolean has_ruletype;
  int32_t ruletype;
};
#define GAME__GET_ROOMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__get_rooms_response__descriptor) \
    , 0,NULL, 0,0 }


struct  _Game__CreateRoomRequest
{
  ProtobufCMessage base;
  char *gameid;
  Game__PBGameUser *user;
  char *roomname;
  char *password;
  protobuf_c_boolean has_ruletype;
  int32_t ruletype;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define GAME__CREATE_ROOM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__create_room_request__descriptor) \
    , NULL, NULL, NULL, NULL, 0,0, 0,0 }


struct  _Game__CreateRoomResponse
{
  ProtobufCMessage base;
  Game__PBGameSession *gamesession;
};
#define GAME__CREATE_ROOM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__create_room_response__descriptor) \
    , NULL }


struct  _Game__SearchRoomRequest
{
  ProtobufCMessage base;
  char *keyword;
  protobuf_c_boolean has_rangetype;
  int32_t rangetype;
};
#define GAME__SEARCH_ROOM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__search_room_request__descriptor) \
    , NULL, 0,0 }


struct  _Game__SearchRoomResponse
{
  ProtobufCMessage base;
  size_t n_sessions;
  Game__PBGameSession **sessions;
};
#define GAME__SEARCH_ROOM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__search_room_response__descriptor) \
    , 0,NULL }


struct  _Game__RegisterRoomsNotificationRequest
{
  ProtobufCMessage base;
  size_t n_sessionids;
  int32_t *sessionids;
};
#define GAME__REGISTER_ROOMS_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__register_rooms_notification_request__descriptor) \
    , 0,NULL }


struct  _Game__RegisterRoomsNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__REGISTER_ROOMS_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__register_rooms_notification_response__descriptor) \
     }


struct  _Game__UnRegisterRoomsNotificationRequest
{
  ProtobufCMessage base;
  size_t n_sessionids;
  int32_t *sessionids;
};
#define GAME__UN_REGISTER_ROOMS_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__un_register_rooms_notification_request__descriptor) \
    , 0,NULL }


struct  _Game__UnRegisterRoomsNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__UN_REGISTER_ROOMS_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__un_register_rooms_notification_response__descriptor) \
     }


struct  _Game__CallDiceRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_num;
  int32_t num;
  protobuf_c_boolean has_dice;
  int32_t dice;
  protobuf_c_boolean has_wilds;
  protobuf_c_boolean wilds;
};
#define GAME__CALL_DICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__call_dice_request__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _Game__CallDiceResponse
{
  ProtobufCMessage base;
};
#define GAME__CALL_DICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__call_dice_response__descriptor) \
     }


struct  _Game__OpenDiceRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_opentype;
  int32_t opentype;
  protobuf_c_boolean has_multiple;
  int32_t multiple;
};
#define GAME__OPEN_DICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__open_dice_request__descriptor) \
    , 0,0, 0,1 }


struct  _Game__OpenDiceResponse
{
  ProtobufCMessage base;
};
#define GAME__OPEN_DICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__open_dice_response__descriptor) \
     }


struct  _Game__UseItemRequest
{
  ProtobufCMessage base;
  int32_t itemid;
  protobuf_c_boolean has_extendtime;
  int32_t extendtime;
  protobuf_c_boolean has_direction;
  int32_t direction;
  char *nextplayuserid;
  protobuf_c_boolean has_decreasetimefornextplayuser;
  protobuf_c_boolean decreasetimefornextplayuser;
};
#define GAME__USE_ITEM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__use_item_request__descriptor) \
    , 0, 0,0, 0,0, NULL, 0,0 }


struct  _Game__UseItemResponse
{
  ProtobufCMessage base;
  int32_t itemid;
  size_t n_dices;
  Game__PBDice **dices;
  Game__PBDiceAction *action;
  protobuf_c_boolean has_direction;
  int32_t direction;
  char *nextplayuserid;
  protobuf_c_boolean has_decreasetimefornextplayuser;
  protobuf_c_boolean decreasetimefornextplayuser;
};
#define GAME__USE_ITEM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__use_item_response__descriptor) \
    , 0, 0,NULL, NULL, 0,0, NULL, 0,0 }


struct  _Game__UserDiceNotification
{
  ProtobufCMessage base;
  size_t n_userdice;
  Game__PBUserDice **userdice;
  protobuf_c_boolean has_cleanall;
  protobuf_c_boolean cleanall;
  protobuf_c_boolean has_iswild;
  protobuf_c_boolean iswild;
};
#define GAME__USER_DICE_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__user_dice_notification__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _Game__TimeoutSettingRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_action;
  Game__PBZJHUserAction action;
};
#define GAME__TIMEOUT_SETTING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__timeout_setting_request__descriptor) \
    , 0,GAME__PBZJHUSER_ACTION__FOLD_CARD }


struct  _Game__TimeoutSettingResponse
{
  ProtobufCMessage base;
};
#define GAME__TIMEOUT_SETTING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__timeout_setting_response__descriptor) \
     }


struct  _Game__BetRequest
{
  ProtobufCMessage base;
  int32_t singlebet;
  int32_t count;
  protobuf_c_boolean has_isautobet;
  protobuf_c_boolean isautobet;
};
#define GAME__BET_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__bet_request__descriptor) \
    , 0, 1, 0,0 }


struct  _Game__BetResponse
{
  ProtobufCMessage base;
};
#define GAME__BET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__bet_response__descriptor) \
     }


struct  _Game__CheckCardRequest
{
  ProtobufCMessage base;
};
#define GAME__CHECK_CARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__check_card_request__descriptor) \
     }


struct  _Game__CheckCardResponse
{
  ProtobufCMessage base;
};
#define GAME__CHECK_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__check_card_response__descriptor) \
     }


struct  _Game__FoldCardRequest
{
  ProtobufCMessage base;
};
#define GAME__FOLD_CARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__fold_card_request__descriptor) \
     }


struct  _Game__FoldCardResponse
{
  ProtobufCMessage base;
};
#define GAME__FOLD_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__fold_card_response__descriptor) \
     }


struct  _Game__ShowCardRequest
{
  ProtobufCMessage base;
  size_t n_cardids;
  int32_t *cardids;
};
#define GAME__SHOW_CARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__show_card_request__descriptor) \
    , 0,NULL }


struct  _Game__ShowCardResponse
{
  ProtobufCMessage base;
};
#define GAME__SHOW_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__show_card_response__descriptor) \
     }


struct  _Game__CompareCardRequest
{
  ProtobufCMessage base;
  char *touserid;
};
#define GAME__COMPARE_CARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__compare_card_request__descriptor) \
    , NULL }


struct  _Game__CompareCardResponse
{
  ProtobufCMessage base;
  size_t n_userresult;
  Game__PBUserResult **userresult;
};
#define GAME__COMPARE_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__compare_card_response__descriptor) \
    , 0,NULL }


struct  _Game__ChangeCardRequest
{
  ProtobufCMessage base;
  int32_t cardid;
};
#define GAME__CHANGE_CARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__change_card_request__descriptor) \
    , 0 }


struct  _Game__ChangeCardResponse
{
  ProtobufCMessage base;
  int32_t oldcardid;
  Game__PBPoker *newpoker;
  protobuf_c_boolean has_cardtype;
  Game__PBZJHCardType cardtype;
};
#define GAME__CHANGE_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__change_card_response__descriptor) \
    , 0, NULL, 0,GAME__PBZJHCARD_TYPE__UNKNOW }


struct  _Game__JoinGameRequest
{
  ProtobufCMessage base;
  char *userid;
  char *gameid;
  protobuf_c_boolean has_autonew;
  int32_t autonew;
  char *nickname;
  char *avatar;
  size_t n_excludesessionid;
  int64_t *excludesessionid;
  protobuf_c_boolean has_sessiontobechange;
  int64_t sessiontobechange;
  protobuf_c_boolean has_gender;
  protobuf_c_boolean gender;
  protobuf_c_boolean has_isrobot;
  protobuf_c_boolean isrobot;
  protobuf_c_boolean has_targetsessionid;
  int32_t targetsessionid;
  protobuf_c_boolean has_guessdifficultlevel;
  int32_t guessdifficultlevel;
  char *roomid;
  char *roomname;
  size_t n_snsusers;
  Game__PBSNSUser **snsusers;
  char *location;
  protobuf_c_boolean has_userlevel;
  int32_t userlevel;
  Game__PBGameUser *user;
  protobuf_c_boolean has_ruletype;
  int32_t ruletype;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define GAME__JOIN_GAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__join_game_request__descriptor) \
    , NULL, NULL, 0,0, NULL, NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,NULL, NULL, 0,0, NULL, 0,0, 0,0 }


struct  _Game__JoinGameResponse
{
  ProtobufCMessage base;
  Game__PBGameSession *gamesession;
  Game__PBZJHGameState *zjhgamestate;
};
#define GAME__JOIN_GAME_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__join_game_response__descriptor) \
    , NULL, NULL }


struct  _Game__StartGameRequest
{
  ProtobufCMessage base;
};
#define GAME__START_GAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__start_game_request__descriptor) \
     }


struct  _Game__StartGameResponse
{
  ProtobufCMessage base;
  char *currentplayuserid;
  char *nextplayuserid;
};
#define GAME__START_GAME_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__start_game_response__descriptor) \
    , NULL, NULL }


struct  _Game__RoomNotificationRequest
{
  ProtobufCMessage base;
  size_t n_sessionschanged;
  Game__PBGameSessionChanged **sessionschanged;
  size_t n_sessionsadded;
  Game__PBGameSession **sessionsadded;
  size_t n_sessionidsdeleted;
  int32_t *sessionidsdeleted;
};
#define GAME__ROOM_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__room_notification_request__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL }


struct  _Game__RoomNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__ROOM_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__room_notification_response__descriptor) \
     }


struct  _Game__RollDiceBeginNotificationRequest
{
  ProtobufCMessage base;
};
#define GAME__ROLL_DICE_BEGIN_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__roll_dice_begin_notification_request__descriptor) \
     }


struct  _Game__RollDiceBeginNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__ROLL_DICE_BEGIN_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__roll_dice_begin_notification_response__descriptor) \
     }


struct  _Game__RollDiceEndNotificationRequest
{
  ProtobufCMessage base;
  size_t n_userdice;
  Game__PBUserDice **userdice;
};
#define GAME__ROLL_DICE_END_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__roll_dice_end_notification_request__descriptor) \
    , 0,NULL }


struct  _Game__RollDiceEndNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__ROLL_DICE_END_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__roll_dice_end_notification_response__descriptor) \
     }


struct  _Game__NextPlayerStartNotificationRequest
{
  ProtobufCMessage base;
  char *currentplayuserid;
  char *nextplayuserid;
  protobuf_c_boolean has_expiredtime;
  int32_t expiredtime;
  protobuf_c_boolean has_direction;
  int32_t direction;
};
#define GAME__NEXT_PLAYER_START_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__next_player_start_notification_request__descriptor) \
    , NULL, NULL, 0,0, 0,0 }


struct  _Game__NextPlayerStartNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__NEXT_PLAYER_START_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__next_player_start_notification_response__descriptor) \
     }


struct  _Game__BetDiceRequest
{
  ProtobufCMessage base;
  int32_t option;
  int32_t ante;
  float odds;
};
#define GAME__BET_DICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__bet_dice_request__descriptor) \
    , 0, 0, 0 }


struct  _Game__BetDiceResponse
{
  ProtobufCMessage base;
};
#define GAME__BET_DICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__bet_dice_response__descriptor) \
     }


struct  _Game__GameOverNotificationRequest
{
  ProtobufCMessage base;
  Game__PBDiceGameResult *gameresult;
  Game__PBZJHGameResult *zjhgameresult;
};
#define GAME__GAME_OVER_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_over_notification_request__descriptor) \
    , NULL, NULL }


struct  _Game__GameOverNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__GAME_OVER_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_over_notification_response__descriptor) \
     }


struct  _Game__GameChatRequest
{
  ProtobufCMessage base;
  size_t n_touserid;
  char **touserid;
  char *content;
  protobuf_c_boolean has_chattype;
  int32_t chattype;
  protobuf_c_boolean has_contenttype;
  int32_t contenttype;
  char *expressionid;
  char *contentvoiceid;
};
#define GAME__GAME_CHAT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_chat_request__descriptor) \
    , 0,NULL, NULL, 0,0, 0,1, NULL, NULL }


struct  _Game__GameChatResponse
{
  ProtobufCMessage base;
};
#define GAME__GAME_CHAT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_chat_response__descriptor) \
     }


struct  _Game__SendDrawDataRequest
{
  ProtobufCMessage base;
  char *word;
  protobuf_c_boolean has_level;
  int32_t level;
  protobuf_c_boolean has_language;
  int32_t language;
  size_t n_points;
  int32_t *points;
  protobuf_c_boolean has_width;
  float width;
  protobuf_c_boolean has_color;
  int32_t color;
  protobuf_c_boolean has_pentype;
  int32_t pentype;
  char *guessword;
  char *guessuserid;
  protobuf_c_boolean has_guesscorrect;
  protobuf_c_boolean guesscorrect;
  Game__PBDrawAction *drawaction;
  Game__PBSize *canvassize;
};
#define GAME__SEND_DRAW_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__send_draw_data_request__descriptor) \
    , NULL, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, NULL, NULL, 0,0, NULL, NULL }


struct  _Game__SendDrawDataResponse
{
  ProtobufCMessage base;
};
#define GAME__SEND_DRAW_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__send_draw_data_response__descriptor) \
     }


struct  _Game__GameStartNotificationRequest
{
  ProtobufCMessage base;
  Game__PBZJHGameState *zjhgamestate;
};
#define GAME__GAME_START_NOTIFICATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_start_notification_request__descriptor) \
    , NULL }


struct  _Game__GameStartNotificationResponse
{
  ProtobufCMessage base;
};
#define GAME__GAME_START_NOTIFICATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_start_notification_response__descriptor) \
     }


struct  _Game__GeneralNotification
{
  ProtobufCMessage base;
  char *sessionhost;
  protobuf_c_boolean has_sessionstatus;
  int32_t sessionstatus;
  char *currentplayuserid;
  char *nextplayuserid;
  char *newuserid;
  char *quituserid;
  char *nickname;
  char *useravatar;
  protobuf_c_boolean has_usergender;
  protobuf_c_boolean usergender;
  size_t n_snsusers;
  Game__PBSNSUser **snsusers;
  char *location;
  protobuf_c_boolean has_userlevel;
  int32_t userlevel;
  size_t n_points;
  int32_t *points;
  protobuf_c_boolean has_width;
  float width;
  protobuf_c_boolean has_color;
  int32_t color;
  protobuf_c_boolean has_pentype;
  int32_t pentype;
  char *word;
  protobuf_c_boolean has_level;
  int32_t level;
  protobuf_c_boolean has_round;
  int32_t round;
  protobuf_c_boolean has_language;
  int32_t language;
  char *guessword;
  char *guessuserid;
  protobuf_c_boolean has_guesscorrect;
  protobuf_c_boolean guesscorrect;
  protobuf_c_boolean has_guessgaincoins;
  int32_t guessgaincoins;
  size_t n_chattouserid;
  char **chattouserid;
  char *chatcontent;
  protobuf_c_boolean has_chattype;
  int32_t chattype;
  protobuf_c_boolean has_turngaincoins;
  int32_t turngaincoins;
};
#define GAME__GENERAL_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__general_notification__descriptor) \
    , NULL, 0,0, NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,NULL, NULL, 0,0, 0,NULL, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,NULL, NULL, 0,0, 0,0 }


struct  _Game__FacetimeChatRequest
{
  ProtobufCMessage base;
  Game__PBGameUser *user;
  protobuf_c_boolean has_chatgender;
  protobuf_c_boolean chatgender;
};
#define GAME__FACETIME_CHAT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__facetime_chat_request__descriptor) \
    , NULL, 0,0 }


struct  _Game__FacetimeChatResponse
{
  ProtobufCMessage base;
  size_t n_user;
  Game__PBGameUser **user;
  protobuf_c_boolean chosentoinitiate;
};
#define GAME__FACETIME_CHAT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__facetime_chat_response__descriptor) \
    , 0,NULL, 0 }


struct  _Game__GameMessage
{
  ProtobufCMessage base;
  Game__GameCommandType command;
  int32_t messageid;
  protobuf_c_boolean has_resultcode;
  Game__GameResultCode resultcode;
  char *userid;
  protobuf_c_boolean has_sessionid;
  int64_t sessionid;
  protobuf_c_boolean has_round;
  int32_t round;
  protobuf_c_boolean has_completereason;
  Game__GameCompleteReason completereason;
  protobuf_c_boolean has_onlineusercount;
  int32_t onlineusercount;
  char *touserid;
  char *currentplayuserid;
  Game__JoinGameRequest *joingamerequest;
  Game__JoinGameResponse *joingameresponse;
  Game__StartGameRequest *startgamerequest;
  Game__StartGameResponse *startgameresponse;
  Game__GameStartNotificationRequest *gamestartnotificationrequest;
  Game__GameStartNotificationResponse *gamestartnotificationresponse;
  Game__SendDrawDataRequest *senddrawdatarequest;
  Game__SendDrawDataResponse *senddrawdataresponse;
  Game__GameChatRequest *chatrequest;
  Game__GameChatResponse *chatresponse;
  Game__FacetimeChatRequest *facetimechatrequest;
  Game__FacetimeChatResponse *facetimechatresponse;
  Game__GeneralNotification *notification;
  Game__GetRoomsRequest *getroomsrequest;
  Game__GetRoomsResponse *getroomsresponse;
  Game__CreateRoomRequest *createroomrequest;
  Game__CreateRoomResponse *createroomresponse;
  Game__SearchRoomRequest *searchroomrequest;
  Game__SearchRoomResponse *searchroomresponse;
  Game__RoomNotificationRequest *roomnotificationrequest;
  Game__RollDiceEndNotificationRequest *rolldiceendnotificationrequest;
  Game__CallDiceRequest *calldicerequest;
  Game__CallDiceResponse *calldiceresponse;
  Game__OpenDiceRequest *opendicerequest;
  Game__OpenDiceResponse *opendiceresponse;
  Game__GameOverNotificationRequest *gameovernotificationrequest;
  Game__GameOverNotificationResponse *gameovernotificationresponse;
  Game__RegisterRoomsNotificationRequest *registerroomsnotificationrequest;
  Game__RegisterRoomsNotificationResponse *registerroomsnotificationresponse;
  Game__UnRegisterRoomsNotificationRequest *unregisterroomsnotificationrequest;
  Game__UnRegisterRoomsNotificationResponse *unregisterroomsnotificationresponse;
  Game__UserDiceNotification *userdicenotification;
  Game__BetDiceRequest *betdicerequest;
  Game__BetDiceResponse *betdiceresponse;
  Game__UseItemRequest *useitemrequest;
  Game__UseItemResponse *useitemresponse;
  Game__BetRequest *betrequest;
  Game__BetResponse *betresponse;
  Game__CheckCardRequest *checkcardrequest;
  Game__CheckCardResponse *checkcardresponse;
  Game__FoldCardRequest *foldcardrequest;
  Game__FoldCardResponse *foldcardresponse;
  Game__ShowCardRequest *showcardrequest;
  Game__ShowCardResponse *showcardresponse;
  Game__CompareCardRequest *comparecardrequest;
  Game__CompareCardResponse *comparecardresponse;
  Game__ChangeCardRequest *changecardrequest;
  Game__ChangeCardResponse *changecardresponse;
  Game__TimeoutSettingRequest *timeoutsettingrequest;
  Game__TimeoutSettingResponse *timeoutsettingresponse;
  protobuf_c_boolean has_startoffset;
  int32_t startoffset;
  protobuf_c_boolean has_maxcount;
  int32_t maxcount;
  protobuf_c_boolean has_timestamp;
  int32_t timestamp;
  char *mac;
};
#define GAME__GAME_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__game_message__descriptor) \
    , 0, 0, 0,GAME__GAME_RESULT_CODE__SUCCESS, NULL, 0,0, 0,0, 0,0, 0,0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, NULL }


struct  _Game__DataQueryResponse
{
  ProtobufCMessage base;
  int32_t resultcode;
  protobuf_c_boolean has_totalcount;
  int32_t totalcount;
  protobuf_c_boolean has_version;
  int32_t version;
  size_t n_drawdata;
  Game__PBDraw **drawdata;
  size_t n_message;
  Game__PBMessage **message;
  size_t n_messagestat;
  Game__PBMessageStat **messagestat;
  size_t n_feed;
  Game__PBFeed **feed;
  size_t n_bbsboard;
  Game__PBBBSBoard **bbsboard;
  size_t n_bbspost;
  Game__PBBBSPost **bbspost;
  size_t n_bbsaction;
  Game__PBBBSAction **bbsaction;
  Game__PBBBSDraw *bbsdrawdata;
  size_t n_bbsprivilegelist;
  Game__PBBBSPrivilege **bbsprivilegelist;
  size_t n_bbsuserlist;
  Game__PBBBSUser **bbsuserlist;
  size_t n_walllist;
  Game__PBWall **walllist;
  Game__PBWall *wall;
  Game__PBGameUser *user;
  protobuf_c_boolean has_userrelation;
  int32_t userrelation;
  size_t n_idlist;
  char **idlist;
  Game__PBOpus *opus;
};
#define GAME__DATA_QUERY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__data_query_response__descriptor) \
    , 0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, 0,NULL, 0,NULL, 0,NULL, NULL, NULL, 0,0, 0,NULL, NULL }


/* Game__GetRoomsRequest methods */
void   game__get_rooms_request__init
                     (Game__GetRoomsRequest         *message);
size_t game__get_rooms_request__get_packed_size
                     (const Game__GetRoomsRequest   *message);
size_t game__get_rooms_request__pack
                     (const Game__GetRoomsRequest   *message,
                      uint8_t             *out);
size_t game__get_rooms_request__pack_to_buffer
                     (const Game__GetRoomsRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__GetRoomsRequest *
       game__get_rooms_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__get_rooms_request__free_unpacked
                     (Game__GetRoomsRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__GetRoomsResponse methods */
void   game__get_rooms_response__init
                     (Game__GetRoomsResponse         *message);
size_t game__get_rooms_response__get_packed_size
                     (const Game__GetRoomsResponse   *message);
size_t game__get_rooms_response__pack
                     (const Game__GetRoomsResponse   *message,
                      uint8_t             *out);
size_t game__get_rooms_response__pack_to_buffer
                     (const Game__GetRoomsResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__GetRoomsResponse *
       game__get_rooms_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__get_rooms_response__free_unpacked
                     (Game__GetRoomsResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__CreateRoomRequest methods */
void   game__create_room_request__init
                     (Game__CreateRoomRequest         *message);
size_t game__create_room_request__get_packed_size
                     (const Game__CreateRoomRequest   *message);
size_t game__create_room_request__pack
                     (const Game__CreateRoomRequest   *message,
                      uint8_t             *out);
size_t game__create_room_request__pack_to_buffer
                     (const Game__CreateRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__CreateRoomRequest *
       game__create_room_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__create_room_request__free_unpacked
                     (Game__CreateRoomRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__CreateRoomResponse methods */
void   game__create_room_response__init
                     (Game__CreateRoomResponse         *message);
size_t game__create_room_response__get_packed_size
                     (const Game__CreateRoomResponse   *message);
size_t game__create_room_response__pack
                     (const Game__CreateRoomResponse   *message,
                      uint8_t             *out);
size_t game__create_room_response__pack_to_buffer
                     (const Game__CreateRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__CreateRoomResponse *
       game__create_room_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__create_room_response__free_unpacked
                     (Game__CreateRoomResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__SearchRoomRequest methods */
void   game__search_room_request__init
                     (Game__SearchRoomRequest         *message);
size_t game__search_room_request__get_packed_size
                     (const Game__SearchRoomRequest   *message);
size_t game__search_room_request__pack
                     (const Game__SearchRoomRequest   *message,
                      uint8_t             *out);
size_t game__search_room_request__pack_to_buffer
                     (const Game__SearchRoomRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__SearchRoomRequest *
       game__search_room_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__search_room_request__free_unpacked
                     (Game__SearchRoomRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__SearchRoomResponse methods */
void   game__search_room_response__init
                     (Game__SearchRoomResponse         *message);
size_t game__search_room_response__get_packed_size
                     (const Game__SearchRoomResponse   *message);
size_t game__search_room_response__pack
                     (const Game__SearchRoomResponse   *message,
                      uint8_t             *out);
size_t game__search_room_response__pack_to_buffer
                     (const Game__SearchRoomResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__SearchRoomResponse *
       game__search_room_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__search_room_response__free_unpacked
                     (Game__SearchRoomResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__RegisterRoomsNotificationRequest methods */
void   game__register_rooms_notification_request__init
                     (Game__RegisterRoomsNotificationRequest         *message);
size_t game__register_rooms_notification_request__get_packed_size
                     (const Game__RegisterRoomsNotificationRequest   *message);
size_t game__register_rooms_notification_request__pack
                     (const Game__RegisterRoomsNotificationRequest   *message,
                      uint8_t             *out);
size_t game__register_rooms_notification_request__pack_to_buffer
                     (const Game__RegisterRoomsNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__RegisterRoomsNotificationRequest *
       game__register_rooms_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__register_rooms_notification_request__free_unpacked
                     (Game__RegisterRoomsNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__RegisterRoomsNotificationResponse methods */
void   game__register_rooms_notification_response__init
                     (Game__RegisterRoomsNotificationResponse         *message);
size_t game__register_rooms_notification_response__get_packed_size
                     (const Game__RegisterRoomsNotificationResponse   *message);
size_t game__register_rooms_notification_response__pack
                     (const Game__RegisterRoomsNotificationResponse   *message,
                      uint8_t             *out);
size_t game__register_rooms_notification_response__pack_to_buffer
                     (const Game__RegisterRoomsNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__RegisterRoomsNotificationResponse *
       game__register_rooms_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__register_rooms_notification_response__free_unpacked
                     (Game__RegisterRoomsNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__UnRegisterRoomsNotificationRequest methods */
void   game__un_register_rooms_notification_request__init
                     (Game__UnRegisterRoomsNotificationRequest         *message);
size_t game__un_register_rooms_notification_request__get_packed_size
                     (const Game__UnRegisterRoomsNotificationRequest   *message);
size_t game__un_register_rooms_notification_request__pack
                     (const Game__UnRegisterRoomsNotificationRequest   *message,
                      uint8_t             *out);
size_t game__un_register_rooms_notification_request__pack_to_buffer
                     (const Game__UnRegisterRoomsNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__UnRegisterRoomsNotificationRequest *
       game__un_register_rooms_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__un_register_rooms_notification_request__free_unpacked
                     (Game__UnRegisterRoomsNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__UnRegisterRoomsNotificationResponse methods */
void   game__un_register_rooms_notification_response__init
                     (Game__UnRegisterRoomsNotificationResponse         *message);
size_t game__un_register_rooms_notification_response__get_packed_size
                     (const Game__UnRegisterRoomsNotificationResponse   *message);
size_t game__un_register_rooms_notification_response__pack
                     (const Game__UnRegisterRoomsNotificationResponse   *message,
                      uint8_t             *out);
size_t game__un_register_rooms_notification_response__pack_to_buffer
                     (const Game__UnRegisterRoomsNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__UnRegisterRoomsNotificationResponse *
       game__un_register_rooms_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__un_register_rooms_notification_response__free_unpacked
                     (Game__UnRegisterRoomsNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__CallDiceRequest methods */
void   game__call_dice_request__init
                     (Game__CallDiceRequest         *message);
size_t game__call_dice_request__get_packed_size
                     (const Game__CallDiceRequest   *message);
size_t game__call_dice_request__pack
                     (const Game__CallDiceRequest   *message,
                      uint8_t             *out);
size_t game__call_dice_request__pack_to_buffer
                     (const Game__CallDiceRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__CallDiceRequest *
       game__call_dice_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__call_dice_request__free_unpacked
                     (Game__CallDiceRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__CallDiceResponse methods */
void   game__call_dice_response__init
                     (Game__CallDiceResponse         *message);
size_t game__call_dice_response__get_packed_size
                     (const Game__CallDiceResponse   *message);
size_t game__call_dice_response__pack
                     (const Game__CallDiceResponse   *message,
                      uint8_t             *out);
size_t game__call_dice_response__pack_to_buffer
                     (const Game__CallDiceResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__CallDiceResponse *
       game__call_dice_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__call_dice_response__free_unpacked
                     (Game__CallDiceResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__OpenDiceRequest methods */
void   game__open_dice_request__init
                     (Game__OpenDiceRequest         *message);
size_t game__open_dice_request__get_packed_size
                     (const Game__OpenDiceRequest   *message);
size_t game__open_dice_request__pack
                     (const Game__OpenDiceRequest   *message,
                      uint8_t             *out);
size_t game__open_dice_request__pack_to_buffer
                     (const Game__OpenDiceRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__OpenDiceRequest *
       game__open_dice_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__open_dice_request__free_unpacked
                     (Game__OpenDiceRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__OpenDiceResponse methods */
void   game__open_dice_response__init
                     (Game__OpenDiceResponse         *message);
size_t game__open_dice_response__get_packed_size
                     (const Game__OpenDiceResponse   *message);
size_t game__open_dice_response__pack
                     (const Game__OpenDiceResponse   *message,
                      uint8_t             *out);
size_t game__open_dice_response__pack_to_buffer
                     (const Game__OpenDiceResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__OpenDiceResponse *
       game__open_dice_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__open_dice_response__free_unpacked
                     (Game__OpenDiceResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__UseItemRequest methods */
void   game__use_item_request__init
                     (Game__UseItemRequest         *message);
size_t game__use_item_request__get_packed_size
                     (const Game__UseItemRequest   *message);
size_t game__use_item_request__pack
                     (const Game__UseItemRequest   *message,
                      uint8_t             *out);
size_t game__use_item_request__pack_to_buffer
                     (const Game__UseItemRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__UseItemRequest *
       game__use_item_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__use_item_request__free_unpacked
                     (Game__UseItemRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__UseItemResponse methods */
void   game__use_item_response__init
                     (Game__UseItemResponse         *message);
size_t game__use_item_response__get_packed_size
                     (const Game__UseItemResponse   *message);
size_t game__use_item_response__pack
                     (const Game__UseItemResponse   *message,
                      uint8_t             *out);
size_t game__use_item_response__pack_to_buffer
                     (const Game__UseItemResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__UseItemResponse *
       game__use_item_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__use_item_response__free_unpacked
                     (Game__UseItemResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__UserDiceNotification methods */
void   game__user_dice_notification__init
                     (Game__UserDiceNotification         *message);
size_t game__user_dice_notification__get_packed_size
                     (const Game__UserDiceNotification   *message);
size_t game__user_dice_notification__pack
                     (const Game__UserDiceNotification   *message,
                      uint8_t             *out);
size_t game__user_dice_notification__pack_to_buffer
                     (const Game__UserDiceNotification   *message,
                      ProtobufCBuffer     *buffer);
Game__UserDiceNotification *
       game__user_dice_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__user_dice_notification__free_unpacked
                     (Game__UserDiceNotification *message,
                      ProtobufCAllocator *allocator);
/* Game__TimeoutSettingRequest methods */
void   game__timeout_setting_request__init
                     (Game__TimeoutSettingRequest         *message);
size_t game__timeout_setting_request__get_packed_size
                     (const Game__TimeoutSettingRequest   *message);
size_t game__timeout_setting_request__pack
                     (const Game__TimeoutSettingRequest   *message,
                      uint8_t             *out);
size_t game__timeout_setting_request__pack_to_buffer
                     (const Game__TimeoutSettingRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__TimeoutSettingRequest *
       game__timeout_setting_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__timeout_setting_request__free_unpacked
                     (Game__TimeoutSettingRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__TimeoutSettingResponse methods */
void   game__timeout_setting_response__init
                     (Game__TimeoutSettingResponse         *message);
size_t game__timeout_setting_response__get_packed_size
                     (const Game__TimeoutSettingResponse   *message);
size_t game__timeout_setting_response__pack
                     (const Game__TimeoutSettingResponse   *message,
                      uint8_t             *out);
size_t game__timeout_setting_response__pack_to_buffer
                     (const Game__TimeoutSettingResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__TimeoutSettingResponse *
       game__timeout_setting_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__timeout_setting_response__free_unpacked
                     (Game__TimeoutSettingResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__BetRequest methods */
void   game__bet_request__init
                     (Game__BetRequest         *message);
size_t game__bet_request__get_packed_size
                     (const Game__BetRequest   *message);
size_t game__bet_request__pack
                     (const Game__BetRequest   *message,
                      uint8_t             *out);
size_t game__bet_request__pack_to_buffer
                     (const Game__BetRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__BetRequest *
       game__bet_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__bet_request__free_unpacked
                     (Game__BetRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__BetResponse methods */
void   game__bet_response__init
                     (Game__BetResponse         *message);
size_t game__bet_response__get_packed_size
                     (const Game__BetResponse   *message);
size_t game__bet_response__pack
                     (const Game__BetResponse   *message,
                      uint8_t             *out);
size_t game__bet_response__pack_to_buffer
                     (const Game__BetResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__BetResponse *
       game__bet_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__bet_response__free_unpacked
                     (Game__BetResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__CheckCardRequest methods */
void   game__check_card_request__init
                     (Game__CheckCardRequest         *message);
size_t game__check_card_request__get_packed_size
                     (const Game__CheckCardRequest   *message);
size_t game__check_card_request__pack
                     (const Game__CheckCardRequest   *message,
                      uint8_t             *out);
size_t game__check_card_request__pack_to_buffer
                     (const Game__CheckCardRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__CheckCardRequest *
       game__check_card_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__check_card_request__free_unpacked
                     (Game__CheckCardRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__CheckCardResponse methods */
void   game__check_card_response__init
                     (Game__CheckCardResponse         *message);
size_t game__check_card_response__get_packed_size
                     (const Game__CheckCardResponse   *message);
size_t game__check_card_response__pack
                     (const Game__CheckCardResponse   *message,
                      uint8_t             *out);
size_t game__check_card_response__pack_to_buffer
                     (const Game__CheckCardResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__CheckCardResponse *
       game__check_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__check_card_response__free_unpacked
                     (Game__CheckCardResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__FoldCardRequest methods */
void   game__fold_card_request__init
                     (Game__FoldCardRequest         *message);
size_t game__fold_card_request__get_packed_size
                     (const Game__FoldCardRequest   *message);
size_t game__fold_card_request__pack
                     (const Game__FoldCardRequest   *message,
                      uint8_t             *out);
size_t game__fold_card_request__pack_to_buffer
                     (const Game__FoldCardRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__FoldCardRequest *
       game__fold_card_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__fold_card_request__free_unpacked
                     (Game__FoldCardRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__FoldCardResponse methods */
void   game__fold_card_response__init
                     (Game__FoldCardResponse         *message);
size_t game__fold_card_response__get_packed_size
                     (const Game__FoldCardResponse   *message);
size_t game__fold_card_response__pack
                     (const Game__FoldCardResponse   *message,
                      uint8_t             *out);
size_t game__fold_card_response__pack_to_buffer
                     (const Game__FoldCardResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__FoldCardResponse *
       game__fold_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__fold_card_response__free_unpacked
                     (Game__FoldCardResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__ShowCardRequest methods */
void   game__show_card_request__init
                     (Game__ShowCardRequest         *message);
size_t game__show_card_request__get_packed_size
                     (const Game__ShowCardRequest   *message);
size_t game__show_card_request__pack
                     (const Game__ShowCardRequest   *message,
                      uint8_t             *out);
size_t game__show_card_request__pack_to_buffer
                     (const Game__ShowCardRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__ShowCardRequest *
       game__show_card_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__show_card_request__free_unpacked
                     (Game__ShowCardRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__ShowCardResponse methods */
void   game__show_card_response__init
                     (Game__ShowCardResponse         *message);
size_t game__show_card_response__get_packed_size
                     (const Game__ShowCardResponse   *message);
size_t game__show_card_response__pack
                     (const Game__ShowCardResponse   *message,
                      uint8_t             *out);
size_t game__show_card_response__pack_to_buffer
                     (const Game__ShowCardResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__ShowCardResponse *
       game__show_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__show_card_response__free_unpacked
                     (Game__ShowCardResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__CompareCardRequest methods */
void   game__compare_card_request__init
                     (Game__CompareCardRequest         *message);
size_t game__compare_card_request__get_packed_size
                     (const Game__CompareCardRequest   *message);
size_t game__compare_card_request__pack
                     (const Game__CompareCardRequest   *message,
                      uint8_t             *out);
size_t game__compare_card_request__pack_to_buffer
                     (const Game__CompareCardRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__CompareCardRequest *
       game__compare_card_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__compare_card_request__free_unpacked
                     (Game__CompareCardRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__CompareCardResponse methods */
void   game__compare_card_response__init
                     (Game__CompareCardResponse         *message);
size_t game__compare_card_response__get_packed_size
                     (const Game__CompareCardResponse   *message);
size_t game__compare_card_response__pack
                     (const Game__CompareCardResponse   *message,
                      uint8_t             *out);
size_t game__compare_card_response__pack_to_buffer
                     (const Game__CompareCardResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__CompareCardResponse *
       game__compare_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__compare_card_response__free_unpacked
                     (Game__CompareCardResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__ChangeCardRequest methods */
void   game__change_card_request__init
                     (Game__ChangeCardRequest         *message);
size_t game__change_card_request__get_packed_size
                     (const Game__ChangeCardRequest   *message);
size_t game__change_card_request__pack
                     (const Game__ChangeCardRequest   *message,
                      uint8_t             *out);
size_t game__change_card_request__pack_to_buffer
                     (const Game__ChangeCardRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__ChangeCardRequest *
       game__change_card_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__change_card_request__free_unpacked
                     (Game__ChangeCardRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__ChangeCardResponse methods */
void   game__change_card_response__init
                     (Game__ChangeCardResponse         *message);
size_t game__change_card_response__get_packed_size
                     (const Game__ChangeCardResponse   *message);
size_t game__change_card_response__pack
                     (const Game__ChangeCardResponse   *message,
                      uint8_t             *out);
size_t game__change_card_response__pack_to_buffer
                     (const Game__ChangeCardResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__ChangeCardResponse *
       game__change_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__change_card_response__free_unpacked
                     (Game__ChangeCardResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__JoinGameRequest methods */
void   game__join_game_request__init
                     (Game__JoinGameRequest         *message);
size_t game__join_game_request__get_packed_size
                     (const Game__JoinGameRequest   *message);
size_t game__join_game_request__pack
                     (const Game__JoinGameRequest   *message,
                      uint8_t             *out);
size_t game__join_game_request__pack_to_buffer
                     (const Game__JoinGameRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__JoinGameRequest *
       game__join_game_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__join_game_request__free_unpacked
                     (Game__JoinGameRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__JoinGameResponse methods */
void   game__join_game_response__init
                     (Game__JoinGameResponse         *message);
size_t game__join_game_response__get_packed_size
                     (const Game__JoinGameResponse   *message);
size_t game__join_game_response__pack
                     (const Game__JoinGameResponse   *message,
                      uint8_t             *out);
size_t game__join_game_response__pack_to_buffer
                     (const Game__JoinGameResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__JoinGameResponse *
       game__join_game_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__join_game_response__free_unpacked
                     (Game__JoinGameResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__StartGameRequest methods */
void   game__start_game_request__init
                     (Game__StartGameRequest         *message);
size_t game__start_game_request__get_packed_size
                     (const Game__StartGameRequest   *message);
size_t game__start_game_request__pack
                     (const Game__StartGameRequest   *message,
                      uint8_t             *out);
size_t game__start_game_request__pack_to_buffer
                     (const Game__StartGameRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__StartGameRequest *
       game__start_game_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__start_game_request__free_unpacked
                     (Game__StartGameRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__StartGameResponse methods */
void   game__start_game_response__init
                     (Game__StartGameResponse         *message);
size_t game__start_game_response__get_packed_size
                     (const Game__StartGameResponse   *message);
size_t game__start_game_response__pack
                     (const Game__StartGameResponse   *message,
                      uint8_t             *out);
size_t game__start_game_response__pack_to_buffer
                     (const Game__StartGameResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__StartGameResponse *
       game__start_game_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__start_game_response__free_unpacked
                     (Game__StartGameResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__RoomNotificationRequest methods */
void   game__room_notification_request__init
                     (Game__RoomNotificationRequest         *message);
size_t game__room_notification_request__get_packed_size
                     (const Game__RoomNotificationRequest   *message);
size_t game__room_notification_request__pack
                     (const Game__RoomNotificationRequest   *message,
                      uint8_t             *out);
size_t game__room_notification_request__pack_to_buffer
                     (const Game__RoomNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__RoomNotificationRequest *
       game__room_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__room_notification_request__free_unpacked
                     (Game__RoomNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__RoomNotificationResponse methods */
void   game__room_notification_response__init
                     (Game__RoomNotificationResponse         *message);
size_t game__room_notification_response__get_packed_size
                     (const Game__RoomNotificationResponse   *message);
size_t game__room_notification_response__pack
                     (const Game__RoomNotificationResponse   *message,
                      uint8_t             *out);
size_t game__room_notification_response__pack_to_buffer
                     (const Game__RoomNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__RoomNotificationResponse *
       game__room_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__room_notification_response__free_unpacked
                     (Game__RoomNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__RollDiceBeginNotificationRequest methods */
void   game__roll_dice_begin_notification_request__init
                     (Game__RollDiceBeginNotificationRequest         *message);
size_t game__roll_dice_begin_notification_request__get_packed_size
                     (const Game__RollDiceBeginNotificationRequest   *message);
size_t game__roll_dice_begin_notification_request__pack
                     (const Game__RollDiceBeginNotificationRequest   *message,
                      uint8_t             *out);
size_t game__roll_dice_begin_notification_request__pack_to_buffer
                     (const Game__RollDiceBeginNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__RollDiceBeginNotificationRequest *
       game__roll_dice_begin_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__roll_dice_begin_notification_request__free_unpacked
                     (Game__RollDiceBeginNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__RollDiceBeginNotificationResponse methods */
void   game__roll_dice_begin_notification_response__init
                     (Game__RollDiceBeginNotificationResponse         *message);
size_t game__roll_dice_begin_notification_response__get_packed_size
                     (const Game__RollDiceBeginNotificationResponse   *message);
size_t game__roll_dice_begin_notification_response__pack
                     (const Game__RollDiceBeginNotificationResponse   *message,
                      uint8_t             *out);
size_t game__roll_dice_begin_notification_response__pack_to_buffer
                     (const Game__RollDiceBeginNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__RollDiceBeginNotificationResponse *
       game__roll_dice_begin_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__roll_dice_begin_notification_response__free_unpacked
                     (Game__RollDiceBeginNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__RollDiceEndNotificationRequest methods */
void   game__roll_dice_end_notification_request__init
                     (Game__RollDiceEndNotificationRequest         *message);
size_t game__roll_dice_end_notification_request__get_packed_size
                     (const Game__RollDiceEndNotificationRequest   *message);
size_t game__roll_dice_end_notification_request__pack
                     (const Game__RollDiceEndNotificationRequest   *message,
                      uint8_t             *out);
size_t game__roll_dice_end_notification_request__pack_to_buffer
                     (const Game__RollDiceEndNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__RollDiceEndNotificationRequest *
       game__roll_dice_end_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__roll_dice_end_notification_request__free_unpacked
                     (Game__RollDiceEndNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__RollDiceEndNotificationResponse methods */
void   game__roll_dice_end_notification_response__init
                     (Game__RollDiceEndNotificationResponse         *message);
size_t game__roll_dice_end_notification_response__get_packed_size
                     (const Game__RollDiceEndNotificationResponse   *message);
size_t game__roll_dice_end_notification_response__pack
                     (const Game__RollDiceEndNotificationResponse   *message,
                      uint8_t             *out);
size_t game__roll_dice_end_notification_response__pack_to_buffer
                     (const Game__RollDiceEndNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__RollDiceEndNotificationResponse *
       game__roll_dice_end_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__roll_dice_end_notification_response__free_unpacked
                     (Game__RollDiceEndNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__NextPlayerStartNotificationRequest methods */
void   game__next_player_start_notification_request__init
                     (Game__NextPlayerStartNotificationRequest         *message);
size_t game__next_player_start_notification_request__get_packed_size
                     (const Game__NextPlayerStartNotificationRequest   *message);
size_t game__next_player_start_notification_request__pack
                     (const Game__NextPlayerStartNotificationRequest   *message,
                      uint8_t             *out);
size_t game__next_player_start_notification_request__pack_to_buffer
                     (const Game__NextPlayerStartNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__NextPlayerStartNotificationRequest *
       game__next_player_start_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__next_player_start_notification_request__free_unpacked
                     (Game__NextPlayerStartNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__NextPlayerStartNotificationResponse methods */
void   game__next_player_start_notification_response__init
                     (Game__NextPlayerStartNotificationResponse         *message);
size_t game__next_player_start_notification_response__get_packed_size
                     (const Game__NextPlayerStartNotificationResponse   *message);
size_t game__next_player_start_notification_response__pack
                     (const Game__NextPlayerStartNotificationResponse   *message,
                      uint8_t             *out);
size_t game__next_player_start_notification_response__pack_to_buffer
                     (const Game__NextPlayerStartNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__NextPlayerStartNotificationResponse *
       game__next_player_start_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__next_player_start_notification_response__free_unpacked
                     (Game__NextPlayerStartNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__BetDiceRequest methods */
void   game__bet_dice_request__init
                     (Game__BetDiceRequest         *message);
size_t game__bet_dice_request__get_packed_size
                     (const Game__BetDiceRequest   *message);
size_t game__bet_dice_request__pack
                     (const Game__BetDiceRequest   *message,
                      uint8_t             *out);
size_t game__bet_dice_request__pack_to_buffer
                     (const Game__BetDiceRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__BetDiceRequest *
       game__bet_dice_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__bet_dice_request__free_unpacked
                     (Game__BetDiceRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__BetDiceResponse methods */
void   game__bet_dice_response__init
                     (Game__BetDiceResponse         *message);
size_t game__bet_dice_response__get_packed_size
                     (const Game__BetDiceResponse   *message);
size_t game__bet_dice_response__pack
                     (const Game__BetDiceResponse   *message,
                      uint8_t             *out);
size_t game__bet_dice_response__pack_to_buffer
                     (const Game__BetDiceResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__BetDiceResponse *
       game__bet_dice_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__bet_dice_response__free_unpacked
                     (Game__BetDiceResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__GameOverNotificationRequest methods */
void   game__game_over_notification_request__init
                     (Game__GameOverNotificationRequest         *message);
size_t game__game_over_notification_request__get_packed_size
                     (const Game__GameOverNotificationRequest   *message);
size_t game__game_over_notification_request__pack
                     (const Game__GameOverNotificationRequest   *message,
                      uint8_t             *out);
size_t game__game_over_notification_request__pack_to_buffer
                     (const Game__GameOverNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__GameOverNotificationRequest *
       game__game_over_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_over_notification_request__free_unpacked
                     (Game__GameOverNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__GameOverNotificationResponse methods */
void   game__game_over_notification_response__init
                     (Game__GameOverNotificationResponse         *message);
size_t game__game_over_notification_response__get_packed_size
                     (const Game__GameOverNotificationResponse   *message);
size_t game__game_over_notification_response__pack
                     (const Game__GameOverNotificationResponse   *message,
                      uint8_t             *out);
size_t game__game_over_notification_response__pack_to_buffer
                     (const Game__GameOverNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__GameOverNotificationResponse *
       game__game_over_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_over_notification_response__free_unpacked
                     (Game__GameOverNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__GameChatRequest methods */
void   game__game_chat_request__init
                     (Game__GameChatRequest         *message);
size_t game__game_chat_request__get_packed_size
                     (const Game__GameChatRequest   *message);
size_t game__game_chat_request__pack
                     (const Game__GameChatRequest   *message,
                      uint8_t             *out);
size_t game__game_chat_request__pack_to_buffer
                     (const Game__GameChatRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__GameChatRequest *
       game__game_chat_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_chat_request__free_unpacked
                     (Game__GameChatRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__GameChatResponse methods */
void   game__game_chat_response__init
                     (Game__GameChatResponse         *message);
size_t game__game_chat_response__get_packed_size
                     (const Game__GameChatResponse   *message);
size_t game__game_chat_response__pack
                     (const Game__GameChatResponse   *message,
                      uint8_t             *out);
size_t game__game_chat_response__pack_to_buffer
                     (const Game__GameChatResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__GameChatResponse *
       game__game_chat_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_chat_response__free_unpacked
                     (Game__GameChatResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__SendDrawDataRequest methods */
void   game__send_draw_data_request__init
                     (Game__SendDrawDataRequest         *message);
size_t game__send_draw_data_request__get_packed_size
                     (const Game__SendDrawDataRequest   *message);
size_t game__send_draw_data_request__pack
                     (const Game__SendDrawDataRequest   *message,
                      uint8_t             *out);
size_t game__send_draw_data_request__pack_to_buffer
                     (const Game__SendDrawDataRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__SendDrawDataRequest *
       game__send_draw_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__send_draw_data_request__free_unpacked
                     (Game__SendDrawDataRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__SendDrawDataResponse methods */
void   game__send_draw_data_response__init
                     (Game__SendDrawDataResponse         *message);
size_t game__send_draw_data_response__get_packed_size
                     (const Game__SendDrawDataResponse   *message);
size_t game__send_draw_data_response__pack
                     (const Game__SendDrawDataResponse   *message,
                      uint8_t             *out);
size_t game__send_draw_data_response__pack_to_buffer
                     (const Game__SendDrawDataResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__SendDrawDataResponse *
       game__send_draw_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__send_draw_data_response__free_unpacked
                     (Game__SendDrawDataResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__GameStartNotificationRequest methods */
void   game__game_start_notification_request__init
                     (Game__GameStartNotificationRequest         *message);
size_t game__game_start_notification_request__get_packed_size
                     (const Game__GameStartNotificationRequest   *message);
size_t game__game_start_notification_request__pack
                     (const Game__GameStartNotificationRequest   *message,
                      uint8_t             *out);
size_t game__game_start_notification_request__pack_to_buffer
                     (const Game__GameStartNotificationRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__GameStartNotificationRequest *
       game__game_start_notification_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_start_notification_request__free_unpacked
                     (Game__GameStartNotificationRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__GameStartNotificationResponse methods */
void   game__game_start_notification_response__init
                     (Game__GameStartNotificationResponse         *message);
size_t game__game_start_notification_response__get_packed_size
                     (const Game__GameStartNotificationResponse   *message);
size_t game__game_start_notification_response__pack
                     (const Game__GameStartNotificationResponse   *message,
                      uint8_t             *out);
size_t game__game_start_notification_response__pack_to_buffer
                     (const Game__GameStartNotificationResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__GameStartNotificationResponse *
       game__game_start_notification_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_start_notification_response__free_unpacked
                     (Game__GameStartNotificationResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__GeneralNotification methods */
void   game__general_notification__init
                     (Game__GeneralNotification         *message);
size_t game__general_notification__get_packed_size
                     (const Game__GeneralNotification   *message);
size_t game__general_notification__pack
                     (const Game__GeneralNotification   *message,
                      uint8_t             *out);
size_t game__general_notification__pack_to_buffer
                     (const Game__GeneralNotification   *message,
                      ProtobufCBuffer     *buffer);
Game__GeneralNotification *
       game__general_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__general_notification__free_unpacked
                     (Game__GeneralNotification *message,
                      ProtobufCAllocator *allocator);
/* Game__FacetimeChatRequest methods */
void   game__facetime_chat_request__init
                     (Game__FacetimeChatRequest         *message);
size_t game__facetime_chat_request__get_packed_size
                     (const Game__FacetimeChatRequest   *message);
size_t game__facetime_chat_request__pack
                     (const Game__FacetimeChatRequest   *message,
                      uint8_t             *out);
size_t game__facetime_chat_request__pack_to_buffer
                     (const Game__FacetimeChatRequest   *message,
                      ProtobufCBuffer     *buffer);
Game__FacetimeChatRequest *
       game__facetime_chat_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__facetime_chat_request__free_unpacked
                     (Game__FacetimeChatRequest *message,
                      ProtobufCAllocator *allocator);
/* Game__FacetimeChatResponse methods */
void   game__facetime_chat_response__init
                     (Game__FacetimeChatResponse         *message);
size_t game__facetime_chat_response__get_packed_size
                     (const Game__FacetimeChatResponse   *message);
size_t game__facetime_chat_response__pack
                     (const Game__FacetimeChatResponse   *message,
                      uint8_t             *out);
size_t game__facetime_chat_response__pack_to_buffer
                     (const Game__FacetimeChatResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__FacetimeChatResponse *
       game__facetime_chat_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__facetime_chat_response__free_unpacked
                     (Game__FacetimeChatResponse *message,
                      ProtobufCAllocator *allocator);
/* Game__GameMessage methods */
void   game__game_message__init
                     (Game__GameMessage         *message);
size_t game__game_message__get_packed_size
                     (const Game__GameMessage   *message);
size_t game__game_message__pack
                     (const Game__GameMessage   *message,
                      uint8_t             *out);
size_t game__game_message__pack_to_buffer
                     (const Game__GameMessage   *message,
                      ProtobufCBuffer     *buffer);
Game__GameMessage *
       game__game_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__game_message__free_unpacked
                     (Game__GameMessage *message,
                      ProtobufCAllocator *allocator);
/* Game__DataQueryResponse methods */
void   game__data_query_response__init
                     (Game__DataQueryResponse         *message);
size_t game__data_query_response__get_packed_size
                     (const Game__DataQueryResponse   *message);
size_t game__data_query_response__pack
                     (const Game__DataQueryResponse   *message,
                      uint8_t             *out);
size_t game__data_query_response__pack_to_buffer
                     (const Game__DataQueryResponse   *message,
                      ProtobufCBuffer     *buffer);
Game__DataQueryResponse *
       game__data_query_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__data_query_response__free_unpacked
                     (Game__DataQueryResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__GetRoomsRequest_Closure)
                 (const Game__GetRoomsRequest *message,
                  void *closure_data);
typedef void (*Game__GetRoomsResponse_Closure)
                 (const Game__GetRoomsResponse *message,
                  void *closure_data);
typedef void (*Game__CreateRoomRequest_Closure)
                 (const Game__CreateRoomRequest *message,
                  void *closure_data);
typedef void (*Game__CreateRoomResponse_Closure)
                 (const Game__CreateRoomResponse *message,
                  void *closure_data);
typedef void (*Game__SearchRoomRequest_Closure)
                 (const Game__SearchRoomRequest *message,
                  void *closure_data);
typedef void (*Game__SearchRoomResponse_Closure)
                 (const Game__SearchRoomResponse *message,
                  void *closure_data);
typedef void (*Game__RegisterRoomsNotificationRequest_Closure)
                 (const Game__RegisterRoomsNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__RegisterRoomsNotificationResponse_Closure)
                 (const Game__RegisterRoomsNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__UnRegisterRoomsNotificationRequest_Closure)
                 (const Game__UnRegisterRoomsNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__UnRegisterRoomsNotificationResponse_Closure)
                 (const Game__UnRegisterRoomsNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__CallDiceRequest_Closure)
                 (const Game__CallDiceRequest *message,
                  void *closure_data);
typedef void (*Game__CallDiceResponse_Closure)
                 (const Game__CallDiceResponse *message,
                  void *closure_data);
typedef void (*Game__OpenDiceRequest_Closure)
                 (const Game__OpenDiceRequest *message,
                  void *closure_data);
typedef void (*Game__OpenDiceResponse_Closure)
                 (const Game__OpenDiceResponse *message,
                  void *closure_data);
typedef void (*Game__UseItemRequest_Closure)
                 (const Game__UseItemRequest *message,
                  void *closure_data);
typedef void (*Game__UseItemResponse_Closure)
                 (const Game__UseItemResponse *message,
                  void *closure_data);
typedef void (*Game__UserDiceNotification_Closure)
                 (const Game__UserDiceNotification *message,
                  void *closure_data);
typedef void (*Game__TimeoutSettingRequest_Closure)
                 (const Game__TimeoutSettingRequest *message,
                  void *closure_data);
typedef void (*Game__TimeoutSettingResponse_Closure)
                 (const Game__TimeoutSettingResponse *message,
                  void *closure_data);
typedef void (*Game__BetRequest_Closure)
                 (const Game__BetRequest *message,
                  void *closure_data);
typedef void (*Game__BetResponse_Closure)
                 (const Game__BetResponse *message,
                  void *closure_data);
typedef void (*Game__CheckCardRequest_Closure)
                 (const Game__CheckCardRequest *message,
                  void *closure_data);
typedef void (*Game__CheckCardResponse_Closure)
                 (const Game__CheckCardResponse *message,
                  void *closure_data);
typedef void (*Game__FoldCardRequest_Closure)
                 (const Game__FoldCardRequest *message,
                  void *closure_data);
typedef void (*Game__FoldCardResponse_Closure)
                 (const Game__FoldCardResponse *message,
                  void *closure_data);
typedef void (*Game__ShowCardRequest_Closure)
                 (const Game__ShowCardRequest *message,
                  void *closure_data);
typedef void (*Game__ShowCardResponse_Closure)
                 (const Game__ShowCardResponse *message,
                  void *closure_data);
typedef void (*Game__CompareCardRequest_Closure)
                 (const Game__CompareCardRequest *message,
                  void *closure_data);
typedef void (*Game__CompareCardResponse_Closure)
                 (const Game__CompareCardResponse *message,
                  void *closure_data);
typedef void (*Game__ChangeCardRequest_Closure)
                 (const Game__ChangeCardRequest *message,
                  void *closure_data);
typedef void (*Game__ChangeCardResponse_Closure)
                 (const Game__ChangeCardResponse *message,
                  void *closure_data);
typedef void (*Game__JoinGameRequest_Closure)
                 (const Game__JoinGameRequest *message,
                  void *closure_data);
typedef void (*Game__JoinGameResponse_Closure)
                 (const Game__JoinGameResponse *message,
                  void *closure_data);
typedef void (*Game__StartGameRequest_Closure)
                 (const Game__StartGameRequest *message,
                  void *closure_data);
typedef void (*Game__StartGameResponse_Closure)
                 (const Game__StartGameResponse *message,
                  void *closure_data);
typedef void (*Game__RoomNotificationRequest_Closure)
                 (const Game__RoomNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__RoomNotificationResponse_Closure)
                 (const Game__RoomNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__RollDiceBeginNotificationRequest_Closure)
                 (const Game__RollDiceBeginNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__RollDiceBeginNotificationResponse_Closure)
                 (const Game__RollDiceBeginNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__RollDiceEndNotificationRequest_Closure)
                 (const Game__RollDiceEndNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__RollDiceEndNotificationResponse_Closure)
                 (const Game__RollDiceEndNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__NextPlayerStartNotificationRequest_Closure)
                 (const Game__NextPlayerStartNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__NextPlayerStartNotificationResponse_Closure)
                 (const Game__NextPlayerStartNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__BetDiceRequest_Closure)
                 (const Game__BetDiceRequest *message,
                  void *closure_data);
typedef void (*Game__BetDiceResponse_Closure)
                 (const Game__BetDiceResponse *message,
                  void *closure_data);
typedef void (*Game__GameOverNotificationRequest_Closure)
                 (const Game__GameOverNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__GameOverNotificationResponse_Closure)
                 (const Game__GameOverNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__GameChatRequest_Closure)
                 (const Game__GameChatRequest *message,
                  void *closure_data);
typedef void (*Game__GameChatResponse_Closure)
                 (const Game__GameChatResponse *message,
                  void *closure_data);
typedef void (*Game__SendDrawDataRequest_Closure)
                 (const Game__SendDrawDataRequest *message,
                  void *closure_data);
typedef void (*Game__SendDrawDataResponse_Closure)
                 (const Game__SendDrawDataResponse *message,
                  void *closure_data);
typedef void (*Game__GameStartNotificationRequest_Closure)
                 (const Game__GameStartNotificationRequest *message,
                  void *closure_data);
typedef void (*Game__GameStartNotificationResponse_Closure)
                 (const Game__GameStartNotificationResponse *message,
                  void *closure_data);
typedef void (*Game__GeneralNotification_Closure)
                 (const Game__GeneralNotification *message,
                  void *closure_data);
typedef void (*Game__FacetimeChatRequest_Closure)
                 (const Game__FacetimeChatRequest *message,
                  void *closure_data);
typedef void (*Game__FacetimeChatResponse_Closure)
                 (const Game__FacetimeChatResponse *message,
                  void *closure_data);
typedef void (*Game__GameMessage_Closure)
                 (const Game__GameMessage *message,
                  void *closure_data);
typedef void (*Game__DataQueryResponse_Closure)
                 (const Game__DataQueryResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__bet_type__descriptor;
extern const ProtobufCMessageDescriptor game__get_rooms_request__descriptor;
extern const ProtobufCMessageDescriptor game__get_rooms_response__descriptor;
extern const ProtobufCMessageDescriptor game__create_room_request__descriptor;
extern const ProtobufCMessageDescriptor game__create_room_response__descriptor;
extern const ProtobufCMessageDescriptor game__search_room_request__descriptor;
extern const ProtobufCMessageDescriptor game__search_room_response__descriptor;
extern const ProtobufCMessageDescriptor game__register_rooms_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__register_rooms_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__un_register_rooms_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__un_register_rooms_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__call_dice_request__descriptor;
extern const ProtobufCMessageDescriptor game__call_dice_response__descriptor;
extern const ProtobufCMessageDescriptor game__open_dice_request__descriptor;
extern const ProtobufCMessageDescriptor game__open_dice_response__descriptor;
extern const ProtobufCMessageDescriptor game__use_item_request__descriptor;
extern const ProtobufCMessageDescriptor game__use_item_response__descriptor;
extern const ProtobufCMessageDescriptor game__user_dice_notification__descriptor;
extern const ProtobufCMessageDescriptor game__timeout_setting_request__descriptor;
extern const ProtobufCMessageDescriptor game__timeout_setting_response__descriptor;
extern const ProtobufCMessageDescriptor game__bet_request__descriptor;
extern const ProtobufCMessageDescriptor game__bet_response__descriptor;
extern const ProtobufCMessageDescriptor game__check_card_request__descriptor;
extern const ProtobufCMessageDescriptor game__check_card_response__descriptor;
extern const ProtobufCMessageDescriptor game__fold_card_request__descriptor;
extern const ProtobufCMessageDescriptor game__fold_card_response__descriptor;
extern const ProtobufCMessageDescriptor game__show_card_request__descriptor;
extern const ProtobufCMessageDescriptor game__show_card_response__descriptor;
extern const ProtobufCMessageDescriptor game__compare_card_request__descriptor;
extern const ProtobufCMessageDescriptor game__compare_card_response__descriptor;
extern const ProtobufCMessageDescriptor game__change_card_request__descriptor;
extern const ProtobufCMessageDescriptor game__change_card_response__descriptor;
extern const ProtobufCMessageDescriptor game__join_game_request__descriptor;
extern const ProtobufCMessageDescriptor game__join_game_response__descriptor;
extern const ProtobufCMessageDescriptor game__start_game_request__descriptor;
extern const ProtobufCMessageDescriptor game__start_game_response__descriptor;
extern const ProtobufCMessageDescriptor game__room_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__room_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__roll_dice_begin_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__roll_dice_begin_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__roll_dice_end_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__roll_dice_end_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__next_player_start_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__next_player_start_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__bet_dice_request__descriptor;
extern const ProtobufCMessageDescriptor game__bet_dice_response__descriptor;
extern const ProtobufCMessageDescriptor game__game_over_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__game_over_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__game_chat_request__descriptor;
extern const ProtobufCMessageDescriptor game__game_chat_response__descriptor;
extern const ProtobufCMessageDescriptor game__send_draw_data_request__descriptor;
extern const ProtobufCMessageDescriptor game__send_draw_data_response__descriptor;
extern const ProtobufCMessageDescriptor game__game_start_notification_request__descriptor;
extern const ProtobufCMessageDescriptor game__game_start_notification_response__descriptor;
extern const ProtobufCMessageDescriptor game__general_notification__descriptor;
extern const ProtobufCMessageDescriptor game__facetime_chat_request__descriptor;
extern const ProtobufCMessageDescriptor game__facetime_chat_response__descriptor;
extern const ProtobufCMessageDescriptor game__game_message__descriptor;
extern const ProtobufCMessageDescriptor game__data_query_response__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_GameMessage_2eproto__INCLUDED */
