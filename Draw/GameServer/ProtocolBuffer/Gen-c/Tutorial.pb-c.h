/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_Tutorial_2eproto__INCLUDED
#define PROTOBUF_C_Tutorial_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "GameConstants.pb-c.h"
#include "GameBasic.pb-c.h"
#include "BBS.pb-c.h"

typedef struct _Game__PBTip Game__PBTip;
typedef struct _Game__PBChapter Game__PBChapter;
typedef struct _Game__PBStage Game__PBStage;
typedef struct _Game__PBTutorial Game__PBTutorial;
typedef struct _Game__PBTutorialCore Game__PBTutorialCore;
typedef struct _Game__PBUserStageOpus Game__PBUserStageOpus;
typedef struct _Game__PBUserStage Game__PBUserStage;
typedef struct _Game__PBUserTutorial Game__PBUserTutorial;


/* --- enums --- */

typedef enum _Game__PBTutorialLevel {
  GAME__PBTUTORIAL_LEVEL__TUTORIAL_LEVEL_ENTRY = 0,
  GAME__PBTUTORIAL_LEVEL__TUTORIAL_LEVEL_EASY = 1,
  GAME__PBTUTORIAL_LEVEL__TUTORIAL_LEVEL_NORMAL = 2,
  GAME__PBTUTORIAL_LEVEL__TUTORIAL_LEVEL_HARD = 3
} Game__PBTutorialLevel;
typedef enum _Game__PBTutorialCategory {
  GAME__PBTUTORIAL_CATEGORY__TUTORIAL_CATEGORY_NEW = 0,
  GAME__PBTUTORIAL_CATEGORY__TUTORIAL_CATEGORY_MEDIUM = 1,
  GAME__PBTUTORIAL_CATEGORY__TUTORIAL_CATEGORY_ADVANCE = 2
} Game__PBTutorialCategory;
typedef enum _Game__PBTutorialImageStyle {
  GAME__PBTUTORIAL_IMAGE_STYLE__TUTORIAL_IMAGE_COLOR = 0,
  GAME__PBTUTORIAL_IMAGE_STYLE__TUTORIAL_IMAGE_BLACK_WHITE = 1
} Game__PBTutorialImageStyle;
typedef enum _Game__PBScoreEngineType {
  GAME__PBSCORE_ENGINE_TYPE__SCORE_ENGINE_AUTO = 0,
  GAME__PBSCORE_ENGINE_TYPE__SCORE_ENGINE_AVG_HASH = 1,
  GAME__PBSCORE_ENGINE_TYPE__SCORE_ENGINE_AVG_HASH_COLOR_HIST = 2,
  GAME__PBSCORE_ENGINE_TYPE__SCORE_ENGINE_AVG_HASH_COLOR_HIST_HU = 3
} Game__PBScoreEngineType;
typedef enum _Game__PBUserTutorialStatus {
  GAME__PBUSER_TUTORIAL_STATUS__UT_STATUS_NOT_START = 0,
  GAME__PBUSER_TUTORIAL_STATUS__UT_STATUS_START = 1,
  GAME__PBUSER_TUTORIAL_STATUS__UT_STATUS_COMPLETE = 2
} Game__PBUserTutorialStatus;

/* --- messages --- */

struct  _Game__PBTip
{
  ProtobufCMessage base;
  int32_t index;
  char *cnname;
  char *enname;
  char *tcnname;
  char *cndesc;
  char *endesc;
  char *tcndesc;
  char *image;
  char *imagename;
};
#define GAME__PBTIP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbtip__descriptor) \
    , 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _Game__PBChapter
{
  ProtobufCMessage base;
  int32_t index;
  char *cnname;
  char *enname;
  char *tcnname;
  char *cndesc;
  char *endesc;
  char *tcndesc;
  char *opusid;
  char *opusdata;
  char *image;
  char *background;
  char *opusname;
  char *imagename;
  char *backgroundname;
  size_t n_tips;
  Game__PBTip **tips;
  protobuf_c_boolean has_startindex;
  int32_t startindex;
  protobuf_c_boolean has_endindex;
  int32_t endindex;
};
#define GAME__PBCHAPTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbchapter__descriptor) \
    , 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,0, 0,0 }


struct  _Game__PBStage
{
  ProtobufCMessage base;
  char *stageid;
  char *cnname;
  char *enname;
  char *tcnname;
  char *cndesc;
  char *endesc;
  char *tcndesc;
  char *opusid;
  char *image;
  char *thumbimage;
  char *opusdata;
  char *bgimage;
  char *dataurl;
  char *imagename;
  char *opusname;
  char *bgimagename;
  size_t n_chapter;
  Game__PBChapter **chapter;
  protobuf_c_boolean has_imagestyle;
  int32_t imagestyle;
  protobuf_c_boolean has_scoreengine;
  int32_t scoreengine;
  protobuf_c_boolean has_difficulty;
  double difficulty;
};
#define GAME__PBSTAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbstage__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,0, 0,0, 0,1 }


struct  _Game__PBTutorial
{
  ProtobufCMessage base;
  char *tutorialid;
  char *cnname;
  char *enname;
  char *tcnname;
  char *cndesc;
  char *endesc;
  char *tcndesc;
  protobuf_c_boolean has_level;
  int32_t level;
  size_t n_categories;
  int32_t *categories;
  protobuf_c_boolean has_isfeature;
  protobuf_c_boolean isfeature;
  char *image;
  char *thumbimage;
  char *dataurl;
  size_t n_stages;
  Game__PBStage **stages;
  protobuf_c_boolean has_isfree;
  protobuf_c_boolean isfree;
  protobuf_c_boolean has_price;
  int32_t price;
  protobuf_c_boolean has_priceunit;
  int32_t priceunit;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_modifydate;
  int32_t modifydate;
  protobuf_c_boolean has_isnew;
  protobuf_c_boolean isnew;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define GAME__PBTUTORIAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbtutorial__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,NULL, 0,0, NULL, NULL, NULL, 0,NULL, 0,1, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _Game__PBTutorialCore
{
  ProtobufCMessage base;
  size_t n_tutorials;
  Game__PBTutorial **tutorials;
  protobuf_c_boolean has_version;
  int32_t version;
  size_t n_stepbysteptutorialid;
  char **stepbysteptutorialid;
};
#define GAME__PBTUTORIAL_CORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbtutorial_core__descriptor) \
    , 0,NULL, 0,0, 0,NULL }


struct  _Game__PBUserStageOpus
{
  ProtobufCMessage base;
  char *localopusid;
  char *remoteopusid;
  protobuf_c_boolean has_score;
  int32_t score;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  char *localurl;
  char *remoteurl;
};
#define GAME__PBUSER_STAGE_OPUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_stage_opus__descriptor) \
    , NULL, NULL, 0,0, 0,0, NULL, NULL }


struct  _Game__PBUserStage
{
  ProtobufCMessage base;
  char *userid;
  char *tutorialid;
  char *stageid;
  protobuf_c_boolean has_stageindex;
  int32_t stageindex;
  size_t n_opus;
  Game__PBUserStageOpus **opus;
  protobuf_c_boolean has_currentchapterindex;
  int32_t currentchapterindex;
  char *practicelocalopusid;
  char *conquerlocalopusid;
  char *bestopusid;
  protobuf_c_boolean has_bestscore;
  int32_t bestscore;
  protobuf_c_boolean has_bestscoredate;
  int32_t bestscoredate;
  char *lastopusid;
  protobuf_c_boolean has_lastscore;
  int32_t lastscore;
  protobuf_c_boolean has_lastscoredate;
  int32_t lastscoredate;
  protobuf_c_boolean has_totalcount;
  int32_t totalcount;
  protobuf_c_boolean has_defeatcount;
  int32_t defeatcount;
};
#define GAME__PBUSER_STAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_stage__descriptor) \
    , NULL, NULL, NULL, 0,0, 0,NULL, 0,0, NULL, NULL, NULL, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _Game__PBUserTutorial
{
  ProtobufCMessage base;
  char *userid;
  Game__PBTutorial *tutorial;
  protobuf_c_boolean has_status;
  int32_t status;
  protobuf_c_boolean has_isdownload;
  protobuf_c_boolean isdownload;
  protobuf_c_boolean has_ispurchase;
  protobuf_c_boolean ispurchase;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_lastplaydate;
  int32_t lastplaydate;
  protobuf_c_boolean has_modifydate;
  int32_t modifydate;
  protobuf_c_boolean has_currentstageindex;
  int32_t currentstageindex;
  char *currentstageid;
  size_t n_userstages;
  Game__PBUserStage **userstages;
  protobuf_c_boolean has_syncserver;
  protobuf_c_boolean syncserver;
  char *localid;
  char *remoteid;
};
#define GAME__PBUSER_TUTORIAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_tutorial__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,NULL, 0,0, NULL, NULL }


/* Game__PBTip methods */
void   game__pbtip__init
                     (Game__PBTip         *message);
size_t game__pbtip__get_packed_size
                     (const Game__PBTip   *message);
size_t game__pbtip__pack
                     (const Game__PBTip   *message,
                      uint8_t             *out);
size_t game__pbtip__pack_to_buffer
                     (const Game__PBTip   *message,
                      ProtobufCBuffer     *buffer);
Game__PBTip *
       game__pbtip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbtip__free_unpacked
                     (Game__PBTip *message,
                      ProtobufCAllocator *allocator);
/* Game__PBChapter methods */
void   game__pbchapter__init
                     (Game__PBChapter         *message);
size_t game__pbchapter__get_packed_size
                     (const Game__PBChapter   *message);
size_t game__pbchapter__pack
                     (const Game__PBChapter   *message,
                      uint8_t             *out);
size_t game__pbchapter__pack_to_buffer
                     (const Game__PBChapter   *message,
                      ProtobufCBuffer     *buffer);
Game__PBChapter *
       game__pbchapter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbchapter__free_unpacked
                     (Game__PBChapter *message,
                      ProtobufCAllocator *allocator);
/* Game__PBStage methods */
void   game__pbstage__init
                     (Game__PBStage         *message);
size_t game__pbstage__get_packed_size
                     (const Game__PBStage   *message);
size_t game__pbstage__pack
                     (const Game__PBStage   *message,
                      uint8_t             *out);
size_t game__pbstage__pack_to_buffer
                     (const Game__PBStage   *message,
                      ProtobufCBuffer     *buffer);
Game__PBStage *
       game__pbstage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbstage__free_unpacked
                     (Game__PBStage *message,
                      ProtobufCAllocator *allocator);
/* Game__PBTutorial methods */
void   game__pbtutorial__init
                     (Game__PBTutorial         *message);
size_t game__pbtutorial__get_packed_size
                     (const Game__PBTutorial   *message);
size_t game__pbtutorial__pack
                     (const Game__PBTutorial   *message,
                      uint8_t             *out);
size_t game__pbtutorial__pack_to_buffer
                     (const Game__PBTutorial   *message,
                      ProtobufCBuffer     *buffer);
Game__PBTutorial *
       game__pbtutorial__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbtutorial__free_unpacked
                     (Game__PBTutorial *message,
                      ProtobufCAllocator *allocator);
/* Game__PBTutorialCore methods */
void   game__pbtutorial_core__init
                     (Game__PBTutorialCore         *message);
size_t game__pbtutorial_core__get_packed_size
                     (const Game__PBTutorialCore   *message);
size_t game__pbtutorial_core__pack
                     (const Game__PBTutorialCore   *message,
                      uint8_t             *out);
size_t game__pbtutorial_core__pack_to_buffer
                     (const Game__PBTutorialCore   *message,
                      ProtobufCBuffer     *buffer);
Game__PBTutorialCore *
       game__pbtutorial_core__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbtutorial_core__free_unpacked
                     (Game__PBTutorialCore *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserStageOpus methods */
void   game__pbuser_stage_opus__init
                     (Game__PBUserStageOpus         *message);
size_t game__pbuser_stage_opus__get_packed_size
                     (const Game__PBUserStageOpus   *message);
size_t game__pbuser_stage_opus__pack
                     (const Game__PBUserStageOpus   *message,
                      uint8_t             *out);
size_t game__pbuser_stage_opus__pack_to_buffer
                     (const Game__PBUserStageOpus   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserStageOpus *
       game__pbuser_stage_opus__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_stage_opus__free_unpacked
                     (Game__PBUserStageOpus *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserStage methods */
void   game__pbuser_stage__init
                     (Game__PBUserStage         *message);
size_t game__pbuser_stage__get_packed_size
                     (const Game__PBUserStage   *message);
size_t game__pbuser_stage__pack
                     (const Game__PBUserStage   *message,
                      uint8_t             *out);
size_t game__pbuser_stage__pack_to_buffer
                     (const Game__PBUserStage   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserStage *
       game__pbuser_stage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_stage__free_unpacked
                     (Game__PBUserStage *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserTutorial methods */
void   game__pbuser_tutorial__init
                     (Game__PBUserTutorial         *message);
size_t game__pbuser_tutorial__get_packed_size
                     (const Game__PBUserTutorial   *message);
size_t game__pbuser_tutorial__pack
                     (const Game__PBUserTutorial   *message,
                      uint8_t             *out);
size_t game__pbuser_tutorial__pack_to_buffer
                     (const Game__PBUserTutorial   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserTutorial *
       game__pbuser_tutorial__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_tutorial__free_unpacked
                     (Game__PBUserTutorial *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__PBTip_Closure)
                 (const Game__PBTip *message,
                  void *closure_data);
typedef void (*Game__PBChapter_Closure)
                 (const Game__PBChapter *message,
                  void *closure_data);
typedef void (*Game__PBStage_Closure)
                 (const Game__PBStage *message,
                  void *closure_data);
typedef void (*Game__PBTutorial_Closure)
                 (const Game__PBTutorial *message,
                  void *closure_data);
typedef void (*Game__PBTutorialCore_Closure)
                 (const Game__PBTutorialCore *message,
                  void *closure_data);
typedef void (*Game__PBUserStageOpus_Closure)
                 (const Game__PBUserStageOpus *message,
                  void *closure_data);
typedef void (*Game__PBUserStage_Closure)
                 (const Game__PBUserStage *message,
                  void *closure_data);
typedef void (*Game__PBUserTutorial_Closure)
                 (const Game__PBUserTutorial *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__pbtutorial_level__descriptor;
extern const ProtobufCEnumDescriptor    game__pbtutorial_category__descriptor;
extern const ProtobufCEnumDescriptor    game__pbtutorial_image_style__descriptor;
extern const ProtobufCEnumDescriptor    game__pbscore_engine_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbuser_tutorial_status__descriptor;
extern const ProtobufCMessageDescriptor game__pbtip__descriptor;
extern const ProtobufCMessageDescriptor game__pbchapter__descriptor;
extern const ProtobufCMessageDescriptor game__pbstage__descriptor;
extern const ProtobufCMessageDescriptor game__pbtutorial__descriptor;
extern const ProtobufCMessageDescriptor game__pbtutorial_core__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_stage_opus__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_stage__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_tutorial__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_Tutorial_2eproto__INCLUDED */
