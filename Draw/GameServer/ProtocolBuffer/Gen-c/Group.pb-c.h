/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Group.proto */

#ifndef PROTOBUF_C_Group_2eproto__INCLUDED
#define PROTOBUF_C_Group_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1001000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "GameConstants.pb-c.h"
#include "GameBasic.pb-c.h"
#include "BBS.pb-c.h"

typedef struct _Game__PBGroupUser Game__PBGroupUser;
typedef struct _Game__PBGroupTitle Game__PBGroupTitle;
typedef struct _Game__PBGroupUsersByTitle Game__PBGroupUsersByTitle;
typedef struct _Game__PBGroup Game__PBGroup;
typedef struct _Game__PBGroupUserRole Game__PBGroupUserRole;
typedef struct _Game__PBGroupNotice Game__PBGroupNotice;
typedef struct _Game__PBContest Game__PBContest;
typedef struct _Game__PBContestList Game__PBContestList;


/* --- enums --- */

/*
 * 家族用户类型
 */
typedef enum _Game__PBGroupUserType {
  /*
   * 管理员
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_ADMIN = 1,
  /*
   * 成员
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_MEMBER = 2,
  /*
   * 嘉宾
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_GUEST = 3,
  /*
   *创建者 
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_CREATOR = 4,
  /*
   * 申请者
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_REQUESTER = 5,
  /*
   * 被邀请者
   */
  GAME__PBGROUP_USER_TYPE__GROUP_USER_INVITEE = 6,
  /*
   * 被邀请成为嘉宾者
   */
  GAME__PBGROUP_USER_TYPE__GROUP_GUEST_INVITEE = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GAME__PBGROUP_USER_TYPE)
} Game__PBGroupUserType;

/* --- messages --- */

/*
 * 家族用户信息
 */
struct  _Game__PBGroupUser
{
  ProtobufCMessage base;
  /*
   * 用户信息
   */
  Game__PBGameUser *user;
  /*
   * 用户自定义的title，如【守卫者】
   */
  char *custometitle;
  /*
   * 权限（如允许加用户、允许删帖等）
   */
  protobuf_c_boolean has_permission;
  int32_t permission;
  /*
   * 用户类型
   */
  protobuf_c_boolean has_type;
  Game__PBGroupUserType type;
};
#define GAME__PBGROUP_USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup_user__descriptor) \
    , NULL, NULL, 0,0, 0,0 }


/*
 * 家族职位定义
 */
struct  _Game__PBGroupTitle
{
  ProtobufCMessage base;
  /*
   * 职位ID，缺省职位取值参见PBGroupUserType，用户也可以添加自己的
   */
  int32_t titleid;
  /*
   * 职位
   */
  char *title;
};
#define GAME__PBGROUP_TITLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup_title__descriptor) \
    , 0, NULL }


/*
 * 家族职位用户
 */
struct  _Game__PBGroupUsersByTitle
{
  ProtobufCMessage base;
  /*
   * 职位
   */
  Game__PBGroupTitle *title;
  /*
   * 该职位下的用户列表
   */
  size_t n_users;
  Game__PBGameUser **users;
};
#define GAME__PBGROUP_USERS_BY_TITLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup_users_by_title__descriptor) \
    , NULL, 0,NULL }


/*
 * 家族
 */
struct  _Game__PBGroup
{
  ProtobufCMessage base;
  /*
   * ID
   */
  char *groupid;
  /*
   * 名称，唯一
   */
  char *name;
  /*
   * 等级
   */
  protobuf_c_boolean has_level;
  int32_t level;
  /*
   * 声望
   */
  protobuf_c_boolean has_fame;
  int32_t fame;
  /*
   * 财富金币
   */
  protobuf_c_boolean has_balance;
  int64_t balance;
  /*
   * 创建日期
   */
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  /*
   * 会员会费
   */
  protobuf_c_boolean has_memberfee;
  int32_t memberfee;
  /*
   * 容量
   */
  protobuf_c_boolean has_capacity;
  int32_t capacity;
  /*
   * 当前人数
   */
  protobuf_c_boolean has_size;
  int32_t size;
  /*
   * 嘉宾数目
   */
  protobuf_c_boolean has_guestsize;
  int32_t guestsize;
  /*
   * 嘉宾容量
   */
  protobuf_c_boolean has_guestcapacity;
  int32_t guestcapacity;
  /*
   *话题数目
   */
  protobuf_c_boolean has_topiccount;
  int32_t topiccount;
  /*
   *粉丝数据
   */
  protobuf_c_boolean has_fancount;
  int32_t fancount;
  /*
   *职位容量
   */
  protobuf_c_boolean has_titlecapacity;
  int32_t titlecapacity;
  /*
   * 家族说明
   */
  char *desc;
  /*
   * 动态签名
   */
  char *signature;
  /*
   *状态，欠费等
   */
  protobuf_c_boolean has_status;
  int32_t status;
  /*
   *官方对状态的说明
   */
  char *statusdesc;
  /*
   * 家族背景图
   */
  char *bgimage;
  /*
   * 家族勋章图片
   */
  char *medalimage;
  /*
   * 职位列表
   */
  size_t n_titles;
  Game__PBGroupTitle **titles;
  /*
   * 家族创建者
   */
  Game__PBGameUser *creator;
  /*
   * 管理员列表
   */
  size_t n_admins;
  Game__PBGameUser **admins;
  /*
   * 成员列表
   */
  size_t n_users;
  Game__PBGroupUsersByTitle **users;
  /*
   * 嘉宾列表
   */
  size_t n_guests;
  Game__PBGameUser **guests;
  /*
   *最新的话题
   */
  Game__PBBBSPost *topic;
};
#define GAME__PBGROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup__descriptor) \
    , NULL, NULL, 0,1, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, NULL, NULL, NULL, 0,NULL, NULL, 0,NULL, 0,NULL, 0,NULL, NULL }


struct  _Game__PBGroupUserRole
{
  ProtobufCMessage base;
  char *groupid;
  int32_t role;
  int32_t permission;
  char *groupname;
};
#define GAME__PBGROUP_USER_ROLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup_user_role__descriptor) \
    , NULL, 0, 0, NULL }


struct  _Game__PBGroupNotice
{
  ProtobufCMessage base;
  char *noticeid;
  protobuf_c_boolean has_type;
  int32_t type;
  protobuf_c_boolean has_status;
  int32_t status;
  char *groupid;
  char *groupname;
  char *message;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_amount;
  int32_t amount;
  Game__PBGameUser *publisher;
  /*
   *expel, accept
   */
  Game__PBGameUser *target;
};
#define GAME__PBGROUP_NOTICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgroup_notice__descriptor) \
    , NULL, 0,0, 0,0, NULL, NULL, NULL, 0,0, 0,0, NULL, NULL }


struct  _Game__PBContest
{
  ProtobufCMessage base;
  char *contestid;
  protobuf_c_boolean has_startdate;
  int32_t startdate;
  protobuf_c_boolean has_enddate;
  int32_t enddate;
  protobuf_c_boolean has_type;
  int32_t type;
  /*
   * 参见PBContestStatus 
   */
  protobuf_c_boolean has_status;
  int32_t status;
  protobuf_c_boolean has_participantcount;
  int32_t participantcount;
  protobuf_c_boolean has_opuscount;
  int32_t opuscount;
  char *title;
  char *contesturl;
  char *statementurl;
  protobuf_c_boolean has_votestartdate;
  int32_t votestartdate;
  protobuf_c_boolean has_voteenddate;
  int32_t voteenddate;
  protobuf_c_boolean has_isanounymous;
  protobuf_c_boolean isanounymous;
  protobuf_c_boolean has_category;
  Game__PBOpusCategoryType category;
  protobuf_c_boolean has_cansubmitcount;
  int32_t cansubmitcount;
  protobuf_c_boolean has_maxflowerpercontest;
  int32_t maxflowerpercontest;
  protobuf_c_boolean has_maxflowerperopus;
  int32_t maxflowerperopus;
  /*
   * 评委评分的权重
   */
  protobuf_c_boolean has_judgerankweight;
  int32_t judgerankweight;
  /*
   * 是否可以提交作品
   */
  protobuf_c_boolean has_cansubmit;
  protobuf_c_boolean cansubmit;
  /*
   * 是否可以投票
   */
  protobuf_c_boolean has_canvote;
  protobuf_c_boolean canvote;
  /*
   * 是否只有在contestants列表里的用户才可以参赛，默认对所有选手开放
   */
  protobuf_c_boolean has_contestantsonly;
  protobuf_c_boolean contestantsonly;
  /*
   * 指定的参赛选手列表
   */
  size_t n_contestants;
  Game__PBGameUser **contestants;
  size_t n_judges;
  Game__PBGameUser **judges;
  size_t n_reporters;
  Game__PBGameUser **reporters;
  size_t n_winnerusers;
  Game__PBUserAward **winnerusers;
  size_t n_awardusers;
  Game__PBUserAward **awardusers;
  /*
   * 奖励类型，key为类型整数值，value为类型名字，如最佳创意奖
   */
  size_t n_ranktypes;
  Game__PBIntKeyValue **ranktypes;
  /*
   * 哪个家族发起的比赛。
   */
  Game__PBGroup *group;
  /*
   * 参赛者类型：0所有人都可以参赛；1家族人员可以参赛；2家族成员和嘉宾可以参赛
   */
  protobuf_c_boolean has_joinerstype;
  int32_t joinerstype;
  /*
   * 比赛说明
   */
  char *desc;
  /*
   * 奖励规则
   */
  size_t n_awardrules;
  int32_t *awardrules;
};
#define GAME__PBCONTEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbcontest__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,1, 0,20, 0,3, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, 0,0, NULL, 0,NULL }


struct  _Game__PBContestList
{
  ProtobufCMessage base;
  size_t n_contests;
  Game__PBContest **contests;
};
#define GAME__PBCONTEST_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbcontest_list__descriptor) \
    , 0,NULL }


/* Game__PBGroupUser methods */
void   game__pbgroup_user__init
                     (Game__PBGroupUser         *message);
size_t game__pbgroup_user__get_packed_size
                     (const Game__PBGroupUser   *message);
size_t game__pbgroup_user__pack
                     (const Game__PBGroupUser   *message,
                      uint8_t             *out);
size_t game__pbgroup_user__pack_to_buffer
                     (const Game__PBGroupUser   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroupUser *
       game__pbgroup_user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup_user__free_unpacked
                     (Game__PBGroupUser *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGroupTitle methods */
void   game__pbgroup_title__init
                     (Game__PBGroupTitle         *message);
size_t game__pbgroup_title__get_packed_size
                     (const Game__PBGroupTitle   *message);
size_t game__pbgroup_title__pack
                     (const Game__PBGroupTitle   *message,
                      uint8_t             *out);
size_t game__pbgroup_title__pack_to_buffer
                     (const Game__PBGroupTitle   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroupTitle *
       game__pbgroup_title__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup_title__free_unpacked
                     (Game__PBGroupTitle *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGroupUsersByTitle methods */
void   game__pbgroup_users_by_title__init
                     (Game__PBGroupUsersByTitle         *message);
size_t game__pbgroup_users_by_title__get_packed_size
                     (const Game__PBGroupUsersByTitle   *message);
size_t game__pbgroup_users_by_title__pack
                     (const Game__PBGroupUsersByTitle   *message,
                      uint8_t             *out);
size_t game__pbgroup_users_by_title__pack_to_buffer
                     (const Game__PBGroupUsersByTitle   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroupUsersByTitle *
       game__pbgroup_users_by_title__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup_users_by_title__free_unpacked
                     (Game__PBGroupUsersByTitle *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGroup methods */
void   game__pbgroup__init
                     (Game__PBGroup         *message);
size_t game__pbgroup__get_packed_size
                     (const Game__PBGroup   *message);
size_t game__pbgroup__pack
                     (const Game__PBGroup   *message,
                      uint8_t             *out);
size_t game__pbgroup__pack_to_buffer
                     (const Game__PBGroup   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroup *
       game__pbgroup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup__free_unpacked
                     (Game__PBGroup *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGroupUserRole methods */
void   game__pbgroup_user_role__init
                     (Game__PBGroupUserRole         *message);
size_t game__pbgroup_user_role__get_packed_size
                     (const Game__PBGroupUserRole   *message);
size_t game__pbgroup_user_role__pack
                     (const Game__PBGroupUserRole   *message,
                      uint8_t             *out);
size_t game__pbgroup_user_role__pack_to_buffer
                     (const Game__PBGroupUserRole   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroupUserRole *
       game__pbgroup_user_role__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup_user_role__free_unpacked
                     (Game__PBGroupUserRole *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGroupNotice methods */
void   game__pbgroup_notice__init
                     (Game__PBGroupNotice         *message);
size_t game__pbgroup_notice__get_packed_size
                     (const Game__PBGroupNotice   *message);
size_t game__pbgroup_notice__pack
                     (const Game__PBGroupNotice   *message,
                      uint8_t             *out);
size_t game__pbgroup_notice__pack_to_buffer
                     (const Game__PBGroupNotice   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGroupNotice *
       game__pbgroup_notice__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgroup_notice__free_unpacked
                     (Game__PBGroupNotice *message,
                      ProtobufCAllocator *allocator);
/* Game__PBContest methods */
void   game__pbcontest__init
                     (Game__PBContest         *message);
size_t game__pbcontest__get_packed_size
                     (const Game__PBContest   *message);
size_t game__pbcontest__pack
                     (const Game__PBContest   *message,
                      uint8_t             *out);
size_t game__pbcontest__pack_to_buffer
                     (const Game__PBContest   *message,
                      ProtobufCBuffer     *buffer);
Game__PBContest *
       game__pbcontest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbcontest__free_unpacked
                     (Game__PBContest *message,
                      ProtobufCAllocator *allocator);
/* Game__PBContestList methods */
void   game__pbcontest_list__init
                     (Game__PBContestList         *message);
size_t game__pbcontest_list__get_packed_size
                     (const Game__PBContestList   *message);
size_t game__pbcontest_list__pack
                     (const Game__PBContestList   *message,
                      uint8_t             *out);
size_t game__pbcontest_list__pack_to_buffer
                     (const Game__PBContestList   *message,
                      ProtobufCBuffer     *buffer);
Game__PBContestList *
       game__pbcontest_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbcontest_list__free_unpacked
                     (Game__PBContestList *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__PBGroupUser_Closure)
                 (const Game__PBGroupUser *message,
                  void *closure_data);
typedef void (*Game__PBGroupTitle_Closure)
                 (const Game__PBGroupTitle *message,
                  void *closure_data);
typedef void (*Game__PBGroupUsersByTitle_Closure)
                 (const Game__PBGroupUsersByTitle *message,
                  void *closure_data);
typedef void (*Game__PBGroup_Closure)
                 (const Game__PBGroup *message,
                  void *closure_data);
typedef void (*Game__PBGroupUserRole_Closure)
                 (const Game__PBGroupUserRole *message,
                  void *closure_data);
typedef void (*Game__PBGroupNotice_Closure)
                 (const Game__PBGroupNotice *message,
                  void *closure_data);
typedef void (*Game__PBContest_Closure)
                 (const Game__PBContest *message,
                  void *closure_data);
typedef void (*Game__PBContestList_Closure)
                 (const Game__PBContestList *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__pbgroup_user_type__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup_user__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup_title__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup_users_by_title__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup_user_role__descriptor;
extern const ProtobufCMessageDescriptor game__pbgroup_notice__descriptor;
extern const ProtobufCMessageDescriptor game__pbcontest__descriptor;
extern const ProtobufCMessageDescriptor game__pbcontest_list__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Group_2eproto__INCLUDED */
