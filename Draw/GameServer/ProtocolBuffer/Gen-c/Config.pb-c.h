/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_Config_2eproto__INCLUDED
#define PROTOBUF_C_Config_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "GameBasic.pb-c.h"
#include "GameConstants.pb-c.h"

typedef struct _Game__PBPrice Game__PBPrice;
typedef struct _Game__PBZJHConfig Game__PBZJHConfig;
typedef struct _Game__PBDiceConfig Game__PBDiceConfig;
typedef struct _Game__PBDrawConfig Game__PBDrawConfig;
typedef struct _Game__PBAppReward Game__PBAppReward;
typedef struct _Game__PBRewardWall Game__PBRewardWall;
typedef struct _Game__PBConfig Game__PBConfig;


/* --- enums --- */

typedef enum _Game__PBRewardWallType {
  GAME__PBREWARD_WALL_TYPE__LIMEI = 1,
  GAME__PBREWARD_WALL_TYPE__WANPU = 2,
  GAME__PBREWARD_WALL_TYPE__ADER = 3,
  GAME__PBREWARD_WALL_TYPE__YOUMI = 4,
  GAME__PBREWARD_WALL_TYPE__TAPJOY = 5,
  GAME__PBREWARD_WALL_TYPE__DOMOD = 6
} Game__PBRewardWallType;

/* --- messages --- */

struct  _Game__PBPrice
{
  ProtobufCMessage base;
  char *amount;
  char *price;
  char *productid;
  char *savepercent;
};
#define GAME__PBPRICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbprice__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _Game__PBZJHConfig
{
  ProtobufCMessage base;
  protobuf_c_boolean has_levelexp;
  int32_t levelexp;
  protobuf_c_boolean has_runwaycoin;
  int32_t runwaycoin;
  protobuf_c_boolean has_maxautobetcount;
  int32_t maxautobetcount;
  protobuf_c_boolean has_treematuretime;
  int32_t treematuretime;
  protobuf_c_boolean has_treegaintime;
  int32_t treegaintime;
  protobuf_c_boolean has_treecoinvalue;
  int32_t treecoinvalue;
  protobuf_c_boolean has_sharereward;
  int32_t sharereward;
};
#define GAME__PBZJHCONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbzjhconfig__descriptor) \
    , 0,5, 0,200, 0,5, 0,60, 0,60, 0,25, 0,100 }


struct  _Game__PBDiceConfig
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sharereward;
  int32_t sharereward;
  protobuf_c_boolean has_followreward;
  int32_t followreward;
  protobuf_c_boolean has_levelexp;
  int32_t levelexp;
  protobuf_c_boolean has_leveluprewardcut;
  int32_t leveluprewardcut;
  protobuf_c_boolean has_runwaycoin;
  int32_t runwaycoin;
  protobuf_c_boolean has_normalroomthreshhold;
  int32_t normalroomthreshhold;
  protobuf_c_boolean has_highroomthreshhold;
  int32_t highroomthreshhold;
  protobuf_c_boolean has_superhighroomthreshhold;
  int32_t superhighroomthreshhold;
  protobuf_c_boolean has_betantenormalroom;
  int32_t betantenormalroom;
  protobuf_c_boolean has_betantehighroom;
  int32_t betantehighroom;
  protobuf_c_boolean has_betantesuperhighroom;
  int32_t betantesuperhighroom;
  protobuf_c_boolean has_dailygift;
  int32_t dailygift;
  protobuf_c_boolean has_dailygiftincreament;
  int32_t dailygiftincreament;
};
#define GAME__PBDICE_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbdice_config__descriptor) \
    , 0,100, 0,1000, 0,5, 0,2, 0,200, 0,200, 0,2000, 0,10000, 0,50, 0,100, 0,200, 0,70, 0,12 }


struct  _Game__PBDrawConfig
{
  ProtobufCMessage base;
  char *defaultonlineenserveraddress;
  protobuf_c_boolean has_defaultonlineenserverport;
  int32_t defaultonlineenserverport;
  char *defaultonlinecnserveraddress;
  protobuf_c_boolean has_defaultonlinecnserverport;
  int32_t defaultonlinecnserverport;
  protobuf_c_boolean has_guessreward;
  int32_t guessreward;
  protobuf_c_boolean has_tomatoreward;
  int32_t tomatoreward;
  protobuf_c_boolean has_tomatoexp;
  int32_t tomatoexp;
  protobuf_c_boolean has_flowerreward;
  int32_t flowerreward;
  protobuf_c_boolean has_flowerexp;
  int32_t flowerexp;
  protobuf_c_boolean has_sharereward;
  int32_t sharereward;
  protobuf_c_boolean has_followreward;
  int32_t followreward;
  protobuf_c_boolean has_levelupflower;
  int32_t levelupflower;
  protobuf_c_boolean has_onlinedrawexp;
  int32_t onlinedrawexp;
  protobuf_c_boolean has_onlineguessexp;
  int32_t onlineguessexp;
  protobuf_c_boolean has_offlinedrawexp;
  int32_t offlinedrawexp;
  protobuf_c_boolean has_offlineguessexp;
  int32_t offlineguessexp;
  protobuf_c_boolean has_maxitemtimesonnormalopus;
  int32_t maxitemtimesonnormalopus;
  protobuf_c_boolean has_maxitemtimesoncontestopus;
  int32_t maxitemtimesoncontestopus;
};
extern char game__pbdraw_config__default_online_en_server_address__default_value[];
extern char game__pbdraw_config__default_online_cn_server_address__default_value[];
#define GAME__PBDRAW_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbdraw_config__descriptor) \
    , game__pbdraw_config__default_online_en_server_address__default_value, 0,9000, game__pbdraw_config__default_online_cn_server_address__default_value, 0,9000, 0,3, 0,-3, 0,-5, 0,3, 0,5, 0,10, 0,1000, 0,2, 0,15, 0,10, 0,15, 0,2, 0,10, 0,3 }


struct  _Game__PBAppReward
{
  ProtobufCMessage base;
  Game__PBApp *app;
  int32_t rewardamount;
  Game__PBGameCurrency rewardcurrency;
};
#define GAME__PBAPP_REWARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbapp_reward__descriptor) \
    , NULL, 0, 0 }


struct  _Game__PBRewardWall
{
  ProtobufCMessage base;
  int32_t type;
  char *logo;
  size_t n_name;
  Game__PBLocalizeString **name;
};
#define GAME__PBREWARD_WALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbreward_wall__descriptor) \
    , 0, NULL, 0,NULL }


struct  _Game__PBConfig
{
  ProtobufCMessage base;
  size_t n_coinprices;
  Game__PBPrice **coinprices;
  protobuf_c_boolean has_balancedeviation;
  int32_t balancedeviation;
  char *trafficapiserverurl;
  char *userapiserverurl;
  char *musichomecnurl;
  char *musichomeenurl;
  protobuf_c_boolean has_enablereview;
  protobuf_c_boolean enablereview;
  protobuf_c_boolean has_inreview;
  protobuf_c_boolean inreview;
  char *inreviewversion;
  protobuf_c_boolean has_postponetime;
  int32_t postponetime;
  protobuf_c_boolean has_urgetime;
  int32_t urgetime;
  protobuf_c_boolean has_enablead;
  protobuf_c_boolean enablead;
  protobuf_c_boolean has_enablewall;
  protobuf_c_boolean enablewall;
  protobuf_c_boolean has_walltype;
  int32_t walltype;
  size_t n_rewardwalls;
  Game__PBRewardWall **rewardwalls;
  size_t n_apprewards;
  Game__PBAppReward **apprewards;
  Game__PBDrawConfig *drawconfig;
  Game__PBDiceConfig *diceconfig;
  Game__PBZJHConfig *zjhconfig;
};
extern char game__pbconfig__traffic_apiserver_url__default_value[];
extern char game__pbconfig__user_apiserver_url__default_value[];
extern char game__pbconfig__music_home_cn_url__default_value[];
extern char game__pbconfig__music_home_en_url__default_value[];
#define GAME__PBCONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbconfig__descriptor) \
    , 0,NULL, 0,4000, game__pbconfig__traffic_apiserver_url__default_value, game__pbconfig__user_apiserver_url__default_value, game__pbconfig__music_home_cn_url__default_value, game__pbconfig__music_home_en_url__default_value, 0,1, 0,0, NULL, 0,10, 0,5, 0,1, 0,1, 0,1, 0,NULL, 0,NULL, NULL, NULL, NULL }


/* Game__PBPrice methods */
void   game__pbprice__init
                     (Game__PBPrice         *message);
size_t game__pbprice__get_packed_size
                     (const Game__PBPrice   *message);
size_t game__pbprice__pack
                     (const Game__PBPrice   *message,
                      uint8_t             *out);
size_t game__pbprice__pack_to_buffer
                     (const Game__PBPrice   *message,
                      ProtobufCBuffer     *buffer);
Game__PBPrice *
       game__pbprice__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbprice__free_unpacked
                     (Game__PBPrice *message,
                      ProtobufCAllocator *allocator);
/* Game__PBZJHConfig methods */
void   game__pbzjhconfig__init
                     (Game__PBZJHConfig         *message);
size_t game__pbzjhconfig__get_packed_size
                     (const Game__PBZJHConfig   *message);
size_t game__pbzjhconfig__pack
                     (const Game__PBZJHConfig   *message,
                      uint8_t             *out);
size_t game__pbzjhconfig__pack_to_buffer
                     (const Game__PBZJHConfig   *message,
                      ProtobufCBuffer     *buffer);
Game__PBZJHConfig *
       game__pbzjhconfig__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbzjhconfig__free_unpacked
                     (Game__PBZJHConfig *message,
                      ProtobufCAllocator *allocator);
/* Game__PBDiceConfig methods */
void   game__pbdice_config__init
                     (Game__PBDiceConfig         *message);
size_t game__pbdice_config__get_packed_size
                     (const Game__PBDiceConfig   *message);
size_t game__pbdice_config__pack
                     (const Game__PBDiceConfig   *message,
                      uint8_t             *out);
size_t game__pbdice_config__pack_to_buffer
                     (const Game__PBDiceConfig   *message,
                      ProtobufCBuffer     *buffer);
Game__PBDiceConfig *
       game__pbdice_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbdice_config__free_unpacked
                     (Game__PBDiceConfig *message,
                      ProtobufCAllocator *allocator);
/* Game__PBDrawConfig methods */
void   game__pbdraw_config__init
                     (Game__PBDrawConfig         *message);
size_t game__pbdraw_config__get_packed_size
                     (const Game__PBDrawConfig   *message);
size_t game__pbdraw_config__pack
                     (const Game__PBDrawConfig   *message,
                      uint8_t             *out);
size_t game__pbdraw_config__pack_to_buffer
                     (const Game__PBDrawConfig   *message,
                      ProtobufCBuffer     *buffer);
Game__PBDrawConfig *
       game__pbdraw_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbdraw_config__free_unpacked
                     (Game__PBDrawConfig *message,
                      ProtobufCAllocator *allocator);
/* Game__PBAppReward methods */
void   game__pbapp_reward__init
                     (Game__PBAppReward         *message);
size_t game__pbapp_reward__get_packed_size
                     (const Game__PBAppReward   *message);
size_t game__pbapp_reward__pack
                     (const Game__PBAppReward   *message,
                      uint8_t             *out);
size_t game__pbapp_reward__pack_to_buffer
                     (const Game__PBAppReward   *message,
                      ProtobufCBuffer     *buffer);
Game__PBAppReward *
       game__pbapp_reward__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbapp_reward__free_unpacked
                     (Game__PBAppReward *message,
                      ProtobufCAllocator *allocator);
/* Game__PBRewardWall methods */
void   game__pbreward_wall__init
                     (Game__PBRewardWall         *message);
size_t game__pbreward_wall__get_packed_size
                     (const Game__PBRewardWall   *message);
size_t game__pbreward_wall__pack
                     (const Game__PBRewardWall   *message,
                      uint8_t             *out);
size_t game__pbreward_wall__pack_to_buffer
                     (const Game__PBRewardWall   *message,
                      ProtobufCBuffer     *buffer);
Game__PBRewardWall *
       game__pbreward_wall__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbreward_wall__free_unpacked
                     (Game__PBRewardWall *message,
                      ProtobufCAllocator *allocator);
/* Game__PBConfig methods */
void   game__pbconfig__init
                     (Game__PBConfig         *message);
size_t game__pbconfig__get_packed_size
                     (const Game__PBConfig   *message);
size_t game__pbconfig__pack
                     (const Game__PBConfig   *message,
                      uint8_t             *out);
size_t game__pbconfig__pack_to_buffer
                     (const Game__PBConfig   *message,
                      ProtobufCBuffer     *buffer);
Game__PBConfig *
       game__pbconfig__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbconfig__free_unpacked
                     (Game__PBConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__PBPrice_Closure)
                 (const Game__PBPrice *message,
                  void *closure_data);
typedef void (*Game__PBZJHConfig_Closure)
                 (const Game__PBZJHConfig *message,
                  void *closure_data);
typedef void (*Game__PBDiceConfig_Closure)
                 (const Game__PBDiceConfig *message,
                  void *closure_data);
typedef void (*Game__PBDrawConfig_Closure)
                 (const Game__PBDrawConfig *message,
                  void *closure_data);
typedef void (*Game__PBAppReward_Closure)
                 (const Game__PBAppReward *message,
                  void *closure_data);
typedef void (*Game__PBRewardWall_Closure)
                 (const Game__PBRewardWall *message,
                  void *closure_data);
typedef void (*Game__PBConfig_Closure)
                 (const Game__PBConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__pbreward_wall_type__descriptor;
extern const ProtobufCMessageDescriptor game__pbprice__descriptor;
extern const ProtobufCMessageDescriptor game__pbzjhconfig__descriptor;
extern const ProtobufCMessageDescriptor game__pbdice_config__descriptor;
extern const ProtobufCMessageDescriptor game__pbdraw_config__descriptor;
extern const ProtobufCMessageDescriptor game__pbapp_reward__descriptor;
extern const ProtobufCMessageDescriptor game__pbreward_wall__descriptor;
extern const ProtobufCMessageDescriptor game__pbconfig__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_Config_2eproto__INCLUDED */
