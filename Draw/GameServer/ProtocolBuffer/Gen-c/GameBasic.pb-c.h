/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_GameBasic_2eproto__INCLUDED
#define PROTOBUF_C_GameBasic_2eproto__INCLUDED

#include "google/protobuf-c/protobuf-c.h"

PROTOBUF_C_BEGIN_DECLS

#include "GameConstants.pb-c.h"

typedef struct _Game__PBKeyValue Game__PBKeyValue;
typedef struct _Game__PBIntKeyValue Game__PBIntKeyValue;
typedef struct _Game__PBIntKeyIntValue Game__PBIntKeyIntValue;
typedef struct _Game__PBSNSUser Game__PBSNSUser;
typedef struct _Game__PBSNSUserCredential Game__PBSNSUserCredential;
typedef struct _Game__PBUserLevel Game__PBUserLevel;
typedef struct _Game__PBGameUser Game__PBGameUser;
typedef struct _Game__PBSimpleGroup Game__PBSimpleGroup;
typedef struct _Game__PBGameSession Game__PBGameSession;
typedef struct _Game__PBGameSessionChanged Game__PBGameSessionChanged;
typedef struct _Game__PBDrawBg Game__PBDrawBg;
typedef struct _Game__PBGradient Game__PBGradient;
typedef struct _Game__PBDrawAction Game__PBDrawAction;
typedef struct _Game__PBMessage Game__PBMessage;
typedef struct _Game__PBMessageStat Game__PBMessageStat;
typedef struct _Game__PBUserBasicInfo Game__PBUserBasicInfo;
typedef struct _Game__PBUserResult Game__PBUserResult;
typedef struct _Game__PBItemPriceInfo Game__PBItemPriceInfo;
typedef struct _Game__PBPromotionInfo Game__PBPromotionInfo;
typedef struct _Game__PBGameItem Game__PBGameItem;
typedef struct _Game__PBGameItemList Game__PBGameItemList;
typedef struct _Game__PBIAPProduct Game__PBIAPProduct;
typedef struct _Game__PBIAPProductPrice Game__PBIAPProductPrice;
typedef struct _Game__PBIAPProductList Game__PBIAPProductList;
typedef struct _Game__PBUserItem Game__PBUserItem;
typedef struct _Game__PBUserItemList Game__PBUserItemList;
typedef struct _Game__PBLocalizeString Game__PBLocalizeString;
typedef struct _Game__PBApp Game__PBApp;
typedef struct _Game__PBSize Game__PBSize;
typedef struct _Game__PBOpusRank Game__PBOpusRank;
typedef struct _Game__PBUserAward Game__PBUserAward;
typedef struct _Game__PBTask Game__PBTask;
typedef struct _Game__PBClass Game__PBClass;


/* --- enums --- */

typedef enum _Game__PBOpenInfoType {
  GAME__PBOPEN_INFO_TYPE__OPEN_TO_FRIEND = 0,
  GAME__PBOPEN_INFO_TYPE__OPEN_NO = 1,
  GAME__PBOPEN_INFO_TYPE__OPEN_ALL = 2
} Game__PBOpenInfoType;
typedef enum _Game__PBGameCurrency {
  GAME__PBGAME_CURRENCY__Coin = 0,
  GAME__PBGAME_CURRENCY__Ingot = 1
} Game__PBGameCurrency;
typedef enum _Game__PBDrawItemType {
  GAME__PBDRAW_ITEM_TYPE__DrawNomal = 0,
  GAME__PBDRAW_ITEM_TYPE__DrawTool = 1,
  GAME__PBDRAW_ITEM_TYPE__DrawTaoBao = 9999
} Game__PBDrawItemType;
typedef enum _Game__PBDiceItemType {
  GAME__PBDICE_ITEM_TYPE__DiceNomal = 0
} Game__PBDiceItemType;
typedef enum _Game__PBGameItemConsumeType {
  GAME__PBGAME_ITEM_CONSUME_TYPE__NonConsumable = 1,
  GAME__PBGAME_ITEM_CONSUME_TYPE__AmountConsumable = 2,
  GAME__PBGAME_ITEM_CONSUME_TYPE__TimeConsumable = 3
} Game__PBGameItemConsumeType;
typedef enum _Game__PBGameTimeUnit {
  GAME__PBGAME_TIME_UNIT__Hour = 1,
  GAME__PBGAME_TIME_UNIT__Day = 2,
  GAME__PBGAME_TIME_UNIT__Month = 3,
  GAME__PBGAME_TIME_UNIT__Year = 4
} Game__PBGameTimeUnit;
typedef enum _Game__PBIAPProductType {
  GAME__PBIAPPRODUCT_TYPE__IAPCoin = 1,
  GAME__PBIAPPRODUCT_TYPE__IAPIngot = 2
} Game__PBIAPProductType;
typedef enum _Game__PBTaskStatus {
  GAME__PBTASK_STATUS__TASK_STATUS_CAN_TAKE = 0,
  GAME__PBTASK_STATUS__TASK_STATUS_DONE = 1,
  GAME__PBTASK_STATUS__TASK_STATUS_AWARD = 2,
  GAME__PBTASK_STATUS__TASK_STATUS_EXPIRED = 3,
  GAME__PBTASK_STATUS__TASK_STATUS_WAIT_FOR_START = 4,
  GAME__PBTASK_STATUS__TASK_STATUS_ALWAYS_OPEN = 5
} Game__PBTaskStatus;
typedef enum _Game__PBTaskIdType {
  GAME__PBTASK_ID_TYPE__TASK_NONE = 0,
  GAME__PBTASK_ID_TYPE__TASK_CHECK_IN = 1,
  GAME__PBTASK_ID_TYPE__TASK_BIND_SINA = 2,
  GAME__PBTASK_ID_TYPE__TASK_BIND_QQ = 3,
  GAME__PBTASK_ID_TYPE__TASK_SHARE_SINA = 4,
  GAME__PBTASK_ID_TYPE__TASK_SHARE_WEIXIN_TIMELINE = 5,
  GAME__PBTASK_ID_TYPE__TASK_SHARE_QQ_SPACE = 6,
  GAME__PBTASK_ID_TYPE__TASK_APP_REVIEW = 7,
  GAME__PBTASK_ID_TYPE__TASK_CREATE_OPUS = 8,
  GAME__PBTASK_ID_TYPE__TASK_GUESS_OPUS = 9,
  GAME__PBTASK_ID_TYPE__TASK_SHARE_OPUS = 10,
  GAME__PBTASK_ID_TYPE__TASK_SHARE_QQ_WEIBO = 11,
  GAME__PBTASK_ID_TYPE__TASK_APP_UPGRADE = 12,
  GAME__PBTASK_ID_TYPE__TASK_VIP = 13,
  GAME__PBTASK_ID_TYPE__TASK_APP_VIEW_WEB = 14,
  GAME__PBTASK_ID_TYPE__TASK_LINGQIAN = 15,
  GAME__PBTASK_ID_TYPE__TASK_APP_WALL = 100,
  GAME__PBTASK_ID_TYPE__TASK_APP_DOWNLOAD = 200
} Game__PBTaskIdType;

/* --- messages --- */

struct  _Game__PBKeyValue
{
  ProtobufCMessage base;
  char *name;
  char *value;
};
#define GAME__PBKEY_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbkey_value__descriptor) \
    , NULL, NULL }


struct  _Game__PBIntKeyValue
{
  ProtobufCMessage base;
  int32_t key;
  char *value;
};
#define GAME__PBINT_KEY_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbint_key_value__descriptor) \
    , 0, NULL }


struct  _Game__PBIntKeyIntValue
{
  ProtobufCMessage base;
  int32_t key;
  int32_t value;
};
#define GAME__PBINT_KEY_INT_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbint_key_int_value__descriptor) \
    , 0, 0 }


struct  _Game__PBSNSUser
{
  ProtobufCMessage base;
  int32_t type;
  char *userid;
  char *nickname;
  char *accesstoken;
  char *accesstokensecret;
  char *refreshtoken;
  protobuf_c_boolean has_expiretime;
  int32_t expiretime;
  char *qqopenid;
  char *credential;
};
#define GAME__PBSNSUSER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbsnsuser__descriptor) \
    , 0, NULL, NULL, NULL, NULL, NULL, 0,0, NULL, NULL }


struct  _Game__PBSNSUserCredential
{
  ProtobufCMessage base;
  int32_t type;
  char *credential;
};
#define GAME__PBSNSUSER_CREDENTIAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbsnsuser_credential__descriptor) \
    , 0, NULL }


struct  _Game__PBUserLevel
{
  ProtobufCMessage base;
  char *gameid;
  protobuf_c_boolean has_level;
  int32_t level;
  protobuf_c_boolean has_exp;
  int64_t exp;
};
#define GAME__PBUSER_LEVEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_level__descriptor) \
    , NULL, 0,1, 0,0 }


struct  _Game__PBGameUser
{
  ProtobufCMessage base;
  char *userid;
  char *nickname;
  char *avatar;
  protobuf_c_boolean has_gender;
  protobuf_c_boolean gender;
  size_t n_snsusers;
  Game__PBSNSUser **snsusers;
  char *location;
  protobuf_c_boolean has_userlevel;
  int32_t userlevel;
  char *facetimeid;
  protobuf_c_boolean has_seatid;
  int32_t seatid;
  char *xiaojinumber;
  size_t n_snscredentials;
  Game__PBSNSUserCredential **snscredentials;
  protobuf_c_boolean has_isplaying;
  protobuf_c_boolean isplaying;
  protobuf_c_boolean has_istakenover;
  protobuf_c_boolean istakenover;
  size_t n_attributes;
  Game__PBKeyValue **attributes;
  char *email;
  char *password;
  char *birthday;
  protobuf_c_boolean has_zodiac;
  int32_t zodiac;
  protobuf_c_boolean has_guesswordlanguage;
  int32_t guesswordlanguage;
  char *backgroundurl;
  char *devicetoken;
  char *countrycode;
  char *language;
  protobuf_c_boolean has_level;
  int32_t level;
  protobuf_c_boolean has_experience;
  int64_t experience;
  protobuf_c_boolean has_coinbalance;
  int32_t coinbalance;
  protobuf_c_boolean has_diamondbalance;
  int32_t diamondbalance;
  protobuf_c_boolean has_ingotbalance;
  int32_t ingotbalance;
  size_t n_items;
  Game__PBUserItem **items;
  char *devicemodel;
  char *deviceos;
  char *deviceid;
  char *devicetype;
  size_t n_blockdeviceids;
  char **blockdeviceids;
  char *bloodgroup;
  protobuf_c_boolean has_fancount;
  int32_t fancount;
  protobuf_c_boolean has_followcount;
  int32_t followcount;
  protobuf_c_boolean has_longitude;
  float longitude;
  protobuf_c_boolean has_latitude;
  float latitude;
  protobuf_c_boolean has_isjailbroken;
  protobuf_c_boolean isjailbroken;
  protobuf_c_boolean has_openinfotype;
  Game__PBOpenInfoType openinfotype;
  protobuf_c_boolean has_opuscoverflowtype;
  int32_t opuscoverflowtype;
  char *signature;
  protobuf_c_boolean has_featureopus;
  int32_t featureopus;
  char *friendmemo;
  protobuf_c_boolean has_emailverifystatus;
  int32_t emailverifystatus;
  protobuf_c_boolean has_canshakenumber;
  protobuf_c_boolean canshakenumber;
  protobuf_c_boolean has_shakenumbertimes;
  int32_t shakenumbertimes;
  protobuf_c_boolean has_takecoins;
  int32_t takecoins;
  size_t n_awardapps;
  char **awardapps;
  protobuf_c_boolean has_vip;
  int32_t vip;
  protobuf_c_boolean has_vipexpiredate;
  int32_t vipexpiredate;
  protobuf_c_boolean has_viplastpaydate;
  int32_t viplastpaydate;
  Game__PBSimpleGroup *groupinfo;
  size_t n_offgroupids;
  char **offgroupids;
  size_t n_permissions;
  char **permissions;
  protobuf_c_boolean has_singrecordlimit;
  int32_t singrecordlimit;
};
#define GAME__PBGAME_USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgame_user__descriptor) \
    , NULL, NULL, NULL, 0,0, 0,NULL, NULL, 0,0, NULL, 0,0, NULL, 0,NULL, 0,1, 0,0, 0,NULL, NULL, NULL, NULL, 0,0, 0,1, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, NULL, NULL, NULL, NULL, 0,NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,GAME__PBOPEN_INFO_TYPE__OPEN_TO_FRIEND, 0,0, NULL, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, NULL, 0,NULL, 0,NULL, 0,30 }


struct  _Game__PBSimpleGroup
{
  ProtobufCMessage base;
  char *groupid;
  char *groupname;
  char *groupmedal;
};
#define GAME__PBSIMPLE_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbsimple_group__descriptor) \
    , NULL, NULL, NULL }


struct  _Game__PBGameSession
{
  ProtobufCMessage base;
  char *gameid;
  int64_t sessionid;
  char *name;
  char *createby;
  protobuf_c_boolean has_createtime;
  int32_t createtime;
  char *host;
  protobuf_c_boolean has_status;
  int32_t status;
  char *currentplayuserid;
  char *nextplayuserid;
  char *password;
  protobuf_c_boolean has_ruletype;
  int32_t ruletype;
  size_t n_users;
  Game__PBGameUser **users;
};
#define GAME__PBGAME_SESSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgame_session__descriptor) \
    , NULL, 0, NULL, NULL, 0,0, NULL, 0,0, NULL, NULL, NULL, 0,0, 0,NULL }


struct  _Game__PBGameSessionChanged
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sessionid;
  int64_t sessionid;
  protobuf_c_boolean has_status;
  int32_t status;
  char *currentplayuserid;
  size_t n_usersadded;
  Game__PBGameUser **usersadded;
  size_t n_useridsdeleted;
  char **useridsdeleted;
  size_t n_usersupdated;
  Game__PBGameUser **usersupdated;
};
#define GAME__PBGAME_SESSION_CHANGED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgame_session_changed__descriptor) \
    , 0,0, 0,0, NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _Game__PBDrawBg
{
  ProtobufCMessage base;
  char *bgid;
  char *localurl;
  char *remoteurl;
  protobuf_c_boolean has_showstyle;
  int32_t showstyle;
};
#define GAME__PBDRAW_BG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbdraw_bg__descriptor) \
    , NULL, NULL, NULL, 0,0 }


struct  _Game__PBGradient
{
  ProtobufCMessage base;
  float division;
  size_t n_color;
  int32_t *color;
  size_t n_point;
  float *point;
};
#define GAME__PBGRADIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgradient__descriptor) \
    , 0, 0,NULL, 0,NULL }


struct  _Game__PBDrawAction
{
  ProtobufCMessage base;
  int32_t type;
  size_t n_points;
  int32_t *points;
  protobuf_c_boolean has_width;
  float width;
  protobuf_c_boolean has_color;
  int32_t color;
  protobuf_c_boolean has_pentype;
  int32_t pentype;
  protobuf_c_boolean has_shapetype;
  int32_t shapetype;
  size_t n_rectcomponent;
  float *rectcomponent;
  protobuf_c_boolean has_shapestroke;
  protobuf_c_boolean shapestroke;
  size_t n_pointsx;
  float *pointsx;
  size_t n_pointsy;
  float *pointsy;
  protobuf_c_boolean has_bettercolor;
  int32_t bettercolor;
  Game__PBDrawBg *drawbg;
  protobuf_c_boolean has_shadowoffsetx;
  float shadowoffsetx;
  protobuf_c_boolean has_shadowoffsety;
  float shadowoffsety;
  protobuf_c_boolean has_shadowcolor;
  int32_t shadowcolor;
  protobuf_c_boolean has_shadowblur;
  float shadowblur;
  protobuf_c_boolean has_cliptag;
  int32_t cliptag;
  protobuf_c_boolean has_cliptype;
  int32_t cliptype;
  protobuf_c_boolean has_layertag;
  int32_t layertag;
  protobuf_c_boolean has_layeralpha;
  float layeralpha;
  Game__PBGradient *gradient;
};
#define GAME__PBDRAW_ACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbdraw_action__descriptor) \
    , 0, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL, 0,NULL, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,1, NULL }


struct  _Game__PBMessage
{
  ProtobufCMessage base;
  char *messageid;
  char *from;
  char *to;
  protobuf_c_boolean has_status;
  int32_t status;
  protobuf_c_boolean has_type;
  int32_t type;
  protobuf_c_boolean has_isgroup;
  protobuf_c_boolean isgroup;
  Game__PBGameUser *fromuser;
  Game__PBGameUser *touser;
  char *text;
  size_t n_drawdata;
  Game__PBDrawAction **drawdata;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_drawdataversion;
  int32_t drawdataversion;
  Game__PBSize *canvassize;
  protobuf_c_boolean has_longitude;
  double longitude;
  protobuf_c_boolean has_latitude;
  double latitude;
  char *reqmessageid;
  protobuf_c_boolean has_replyresult;
  int32_t replyresult;
  char *imageurl;
  char *thumbimageurl;
};
#define GAME__PBMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbmessage__descriptor) \
    , NULL, NULL, NULL, 0,0, 0,0, 0,0, NULL, NULL, NULL, 0,NULL, 0,0, 0,0, NULL, 0,0, 0,0, NULL, 0,0, NULL, NULL }


struct  _Game__PBMessageStat
{
  ProtobufCMessage base;
  char *userid;
  char *frienduserid;
  char *friendnickname;
  char *friendavatar;
  protobuf_c_boolean has_friendgender;
  protobuf_c_boolean friendgender;
  protobuf_c_boolean has_isgroup;
  protobuf_c_boolean isgroup;
  protobuf_c_boolean has_isvip;
  int32_t isvip;
  char *messageid;
  char *from;
  char *to;
  char *text;
  size_t n_drawdata;
  Game__PBDrawAction **drawdata;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_type;
  int32_t type;
  protobuf_c_boolean has_modifieddate;
  int32_t modifieddate;
  protobuf_c_boolean has_totalmessagecount;
  int32_t totalmessagecount;
  protobuf_c_boolean has_newmessagecount;
  int32_t newmessagecount;
  protobuf_c_boolean has_newgroupmessagecount;
  int32_t newgroupmessagecount;
};
#define GAME__PBMESSAGE_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbmessage_stat__descriptor) \
    , NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, NULL, NULL, NULL, NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _Game__PBUserBasicInfo
{
  ProtobufCMessage base;
  char *userid;
  char *nickname;
  char *avatar;
  char *gender;
};
#define GAME__PBUSER_BASIC_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_basic_info__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _Game__PBUserResult
{
  ProtobufCMessage base;
  char *userid;
  protobuf_c_boolean win;
  int32_t gaincoins;
};
#define GAME__PBUSER_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_result__descriptor) \
    , NULL, 0, 0 }


struct  _Game__PBItemPriceInfo
{
  ProtobufCMessage base;
  int32_t price;
  protobuf_c_boolean has_currency;
  Game__PBGameCurrency currency;
};
#define GAME__PBITEM_PRICE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbitem_price_info__descriptor) \
    , 0, 0,0 }


struct  _Game__PBPromotionInfo
{
  ProtobufCMessage base;
  int32_t price;
  protobuf_c_boolean has_startdate;
  int32_t startdate;
  protobuf_c_boolean has_expiredate;
  int32_t expiredate;
};
#define GAME__PBPROMOTION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbpromotion_info__descriptor) \
    , 0, 0,0, 0,0 }


struct  _Game__PBGameItem
{
  ProtobufCMessage base;
  int32_t itemid;
  char *name;
  char *desc;
  char *url;
  protobuf_c_boolean has_consumetype;
  Game__PBGameItemConsumeType consumetype;
  char *image;
  char *demoimage;
  protobuf_c_boolean has_type;
  int32_t type;
  char *appleproductid;
  Game__PBItemPriceInfo *priceinfo;
  Game__PBPromotionInfo *promotioninfo;
  protobuf_c_boolean has_defaultsalecount;
  int32_t defaultsalecount;
  protobuf_c_boolean has_usagelifeunit;
  Game__PBGameTimeUnit usagelifeunit;
  protobuf_c_boolean has_usagelife;
  int32_t usagelife;
};
#define GAME__PBGAME_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgame_item__descriptor) \
    , 0, NULL, NULL, NULL, 0,0, NULL, NULL, 0,0, NULL, NULL, NULL, 0,0, 0,0, 0,0 }


struct  _Game__PBGameItemList
{
  ProtobufCMessage base;
  size_t n_items;
  Game__PBGameItem **items;
};
#define GAME__PBGAME_ITEM_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbgame_item_list__descriptor) \
    , 0,NULL }


struct  _Game__PBIAPProduct
{
  ProtobufCMessage base;
  Game__PBIAPProductType type;
  char *appleproductid;
  char *alipayproductid;
  char *name;
  char *desc;
  protobuf_c_boolean has_count;
  int32_t count;
  char *totalprice;
  char *currency;
  char *country;
  char *saving;
  char *taobaourl;
  size_t n_prices;
  Game__PBIAPProductPrice **prices;
};
#define GAME__PBIAPPRODUCT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbiapproduct__descriptor) \
    , 0, NULL, NULL, NULL, NULL, 0,1, NULL, NULL, NULL, NULL, NULL, 0,NULL }


struct  _Game__PBIAPProductPrice
{
  ProtobufCMessage base;
  char *price;
  char *currency;
  char *country;
  char *saving;
};
#define GAME__PBIAPPRODUCT_PRICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbiapproduct_price__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _Game__PBIAPProductList
{
  ProtobufCMessage base;
  size_t n_products;
  Game__PBIAPProduct **products;
};
#define GAME__PBIAPPRODUCT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbiapproduct_list__descriptor) \
    , 0,NULL }


struct  _Game__PBUserItem
{
  ProtobufCMessage base;
  int32_t itemid;
  protobuf_c_boolean has_count;
  int32_t count;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_modifydate;
  int32_t modifydate;
  protobuf_c_boolean has_expiredate;
  int32_t expiredate;
};
#define GAME__PBUSER_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_item__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0 }


struct  _Game__PBUserItemList
{
  ProtobufCMessage base;
  size_t n_useritems;
  Game__PBUserItem **useritems;
};
#define GAME__PBUSER_ITEM_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_item_list__descriptor) \
    , 0,NULL }


struct  _Game__PBLocalizeString
{
  ProtobufCMessage base;
  char *languagecode;
  char *text;
  char *localizedtext;
};
#define GAME__PBLOCALIZE_STRING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pblocalize_string__descriptor) \
    , NULL, NULL, NULL }


struct  _Game__PBApp
{
  ProtobufCMessage base;
  size_t n_name;
  Game__PBLocalizeString **name;
  char *appid;
  size_t n_desc;
  Game__PBLocalizeString **desc;
  char *downloadurl;
  char *logo;
};
#define GAME__PBAPP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbapp__descriptor) \
    , 0,NULL, NULL, 0,NULL, NULL, NULL }


struct  _Game__PBSize
{
  ProtobufCMessage base;
  protobuf_c_boolean has_width;
  float width;
  protobuf_c_boolean has_height;
  float height;
};
#define GAME__PBSIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbsize__descriptor) \
    , 0,304, 0,320 }


struct  _Game__PBOpusRank
{
  ProtobufCMessage base;
  int32_t type;
  int32_t value;
  char *userid;
};
#define GAME__PBOPUS_RANK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbopus_rank__descriptor) \
    , 1, 0, NULL }


struct  _Game__PBUserAward
{
  ProtobufCMessage base;
  Game__PBIntKeyValue *awardtype;
  Game__PBGameUser *user;
  protobuf_c_boolean has_rank;
  int32_t rank;
  protobuf_c_boolean has_score;
  float score;
  protobuf_c_boolean has_coins;
  int32_t coins;
  char *opusid;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  char *contestid;
};
#define GAME__PBUSER_AWARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbuser_award__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, NULL, 0,0, NULL }


struct  _Game__PBTask
{
  ProtobufCMessage base;
  int32_t taskid;
  char *name;
  char *desc;
  protobuf_c_boolean has_status;
  Game__PBTaskStatus status;
  protobuf_c_boolean has_badge;
  int32_t badge;
  protobuf_c_boolean has_award;
  int32_t award;
};
#define GAME__PBTASK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbtask__descriptor) \
    , 0, NULL, NULL, 0,0, 0,0, 0,0 }


struct  _Game__PBClass
{
  ProtobufCMessage base;
  char *classid;
  size_t n_subclasses;
  Game__PBClass **subclasses;
  size_t n_keywords;
  char **keywords;
  char *desc;
  protobuf_c_boolean has_istopclass;
  protobuf_c_boolean istopclass;
  Game__PBClass *parentclass;
  char *cnname;
  char *enname;
  char *tcnname;
};
#define GAME__PBCLASS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbclass__descriptor) \
    , NULL, 0,NULL, 0,NULL, NULL, 0,0, NULL, NULL, NULL, NULL }


/* Game__PBKeyValue methods */
void   game__pbkey_value__init
                     (Game__PBKeyValue         *message);
size_t game__pbkey_value__get_packed_size
                     (const Game__PBKeyValue   *message);
size_t game__pbkey_value__pack
                     (const Game__PBKeyValue   *message,
                      uint8_t             *out);
size_t game__pbkey_value__pack_to_buffer
                     (const Game__PBKeyValue   *message,
                      ProtobufCBuffer     *buffer);
Game__PBKeyValue *
       game__pbkey_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbkey_value__free_unpacked
                     (Game__PBKeyValue *message,
                      ProtobufCAllocator *allocator);
/* Game__PBIntKeyValue methods */
void   game__pbint_key_value__init
                     (Game__PBIntKeyValue         *message);
size_t game__pbint_key_value__get_packed_size
                     (const Game__PBIntKeyValue   *message);
size_t game__pbint_key_value__pack
                     (const Game__PBIntKeyValue   *message,
                      uint8_t             *out);
size_t game__pbint_key_value__pack_to_buffer
                     (const Game__PBIntKeyValue   *message,
                      ProtobufCBuffer     *buffer);
Game__PBIntKeyValue *
       game__pbint_key_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbint_key_value__free_unpacked
                     (Game__PBIntKeyValue *message,
                      ProtobufCAllocator *allocator);
/* Game__PBIntKeyIntValue methods */
void   game__pbint_key_int_value__init
                     (Game__PBIntKeyIntValue         *message);
size_t game__pbint_key_int_value__get_packed_size
                     (const Game__PBIntKeyIntValue   *message);
size_t game__pbint_key_int_value__pack
                     (const Game__PBIntKeyIntValue   *message,
                      uint8_t             *out);
size_t game__pbint_key_int_value__pack_to_buffer
                     (const Game__PBIntKeyIntValue   *message,
                      ProtobufCBuffer     *buffer);
Game__PBIntKeyIntValue *
       game__pbint_key_int_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbint_key_int_value__free_unpacked
                     (Game__PBIntKeyIntValue *message,
                      ProtobufCAllocator *allocator);
/* Game__PBSNSUser methods */
void   game__pbsnsuser__init
                     (Game__PBSNSUser         *message);
size_t game__pbsnsuser__get_packed_size
                     (const Game__PBSNSUser   *message);
size_t game__pbsnsuser__pack
                     (const Game__PBSNSUser   *message,
                      uint8_t             *out);
size_t game__pbsnsuser__pack_to_buffer
                     (const Game__PBSNSUser   *message,
                      ProtobufCBuffer     *buffer);
Game__PBSNSUser *
       game__pbsnsuser__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbsnsuser__free_unpacked
                     (Game__PBSNSUser *message,
                      ProtobufCAllocator *allocator);
/* Game__PBSNSUserCredential methods */
void   game__pbsnsuser_credential__init
                     (Game__PBSNSUserCredential         *message);
size_t game__pbsnsuser_credential__get_packed_size
                     (const Game__PBSNSUserCredential   *message);
size_t game__pbsnsuser_credential__pack
                     (const Game__PBSNSUserCredential   *message,
                      uint8_t             *out);
size_t game__pbsnsuser_credential__pack_to_buffer
                     (const Game__PBSNSUserCredential   *message,
                      ProtobufCBuffer     *buffer);
Game__PBSNSUserCredential *
       game__pbsnsuser_credential__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbsnsuser_credential__free_unpacked
                     (Game__PBSNSUserCredential *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserLevel methods */
void   game__pbuser_level__init
                     (Game__PBUserLevel         *message);
size_t game__pbuser_level__get_packed_size
                     (const Game__PBUserLevel   *message);
size_t game__pbuser_level__pack
                     (const Game__PBUserLevel   *message,
                      uint8_t             *out);
size_t game__pbuser_level__pack_to_buffer
                     (const Game__PBUserLevel   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserLevel *
       game__pbuser_level__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_level__free_unpacked
                     (Game__PBUserLevel *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGameUser methods */
void   game__pbgame_user__init
                     (Game__PBGameUser         *message);
size_t game__pbgame_user__get_packed_size
                     (const Game__PBGameUser   *message);
size_t game__pbgame_user__pack
                     (const Game__PBGameUser   *message,
                      uint8_t             *out);
size_t game__pbgame_user__pack_to_buffer
                     (const Game__PBGameUser   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGameUser *
       game__pbgame_user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgame_user__free_unpacked
                     (Game__PBGameUser *message,
                      ProtobufCAllocator *allocator);
/* Game__PBSimpleGroup methods */
void   game__pbsimple_group__init
                     (Game__PBSimpleGroup         *message);
size_t game__pbsimple_group__get_packed_size
                     (const Game__PBSimpleGroup   *message);
size_t game__pbsimple_group__pack
                     (const Game__PBSimpleGroup   *message,
                      uint8_t             *out);
size_t game__pbsimple_group__pack_to_buffer
                     (const Game__PBSimpleGroup   *message,
                      ProtobufCBuffer     *buffer);
Game__PBSimpleGroup *
       game__pbsimple_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbsimple_group__free_unpacked
                     (Game__PBSimpleGroup *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGameSession methods */
void   game__pbgame_session__init
                     (Game__PBGameSession         *message);
size_t game__pbgame_session__get_packed_size
                     (const Game__PBGameSession   *message);
size_t game__pbgame_session__pack
                     (const Game__PBGameSession   *message,
                      uint8_t             *out);
size_t game__pbgame_session__pack_to_buffer
                     (const Game__PBGameSession   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGameSession *
       game__pbgame_session__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgame_session__free_unpacked
                     (Game__PBGameSession *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGameSessionChanged methods */
void   game__pbgame_session_changed__init
                     (Game__PBGameSessionChanged         *message);
size_t game__pbgame_session_changed__get_packed_size
                     (const Game__PBGameSessionChanged   *message);
size_t game__pbgame_session_changed__pack
                     (const Game__PBGameSessionChanged   *message,
                      uint8_t             *out);
size_t game__pbgame_session_changed__pack_to_buffer
                     (const Game__PBGameSessionChanged   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGameSessionChanged *
       game__pbgame_session_changed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgame_session_changed__free_unpacked
                     (Game__PBGameSessionChanged *message,
                      ProtobufCAllocator *allocator);
/* Game__PBDrawBg methods */
void   game__pbdraw_bg__init
                     (Game__PBDrawBg         *message);
size_t game__pbdraw_bg__get_packed_size
                     (const Game__PBDrawBg   *message);
size_t game__pbdraw_bg__pack
                     (const Game__PBDrawBg   *message,
                      uint8_t             *out);
size_t game__pbdraw_bg__pack_to_buffer
                     (const Game__PBDrawBg   *message,
                      ProtobufCBuffer     *buffer);
Game__PBDrawBg *
       game__pbdraw_bg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbdraw_bg__free_unpacked
                     (Game__PBDrawBg *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGradient methods */
void   game__pbgradient__init
                     (Game__PBGradient         *message);
size_t game__pbgradient__get_packed_size
                     (const Game__PBGradient   *message);
size_t game__pbgradient__pack
                     (const Game__PBGradient   *message,
                      uint8_t             *out);
size_t game__pbgradient__pack_to_buffer
                     (const Game__PBGradient   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGradient *
       game__pbgradient__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgradient__free_unpacked
                     (Game__PBGradient *message,
                      ProtobufCAllocator *allocator);
/* Game__PBDrawAction methods */
void   game__pbdraw_action__init
                     (Game__PBDrawAction         *message);
size_t game__pbdraw_action__get_packed_size
                     (const Game__PBDrawAction   *message);
size_t game__pbdraw_action__pack
                     (const Game__PBDrawAction   *message,
                      uint8_t             *out);
size_t game__pbdraw_action__pack_to_buffer
                     (const Game__PBDrawAction   *message,
                      ProtobufCBuffer     *buffer);
Game__PBDrawAction *
       game__pbdraw_action__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbdraw_action__free_unpacked
                     (Game__PBDrawAction *message,
                      ProtobufCAllocator *allocator);
/* Game__PBMessage methods */
void   game__pbmessage__init
                     (Game__PBMessage         *message);
size_t game__pbmessage__get_packed_size
                     (const Game__PBMessage   *message);
size_t game__pbmessage__pack
                     (const Game__PBMessage   *message,
                      uint8_t             *out);
size_t game__pbmessage__pack_to_buffer
                     (const Game__PBMessage   *message,
                      ProtobufCBuffer     *buffer);
Game__PBMessage *
       game__pbmessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbmessage__free_unpacked
                     (Game__PBMessage *message,
                      ProtobufCAllocator *allocator);
/* Game__PBMessageStat methods */
void   game__pbmessage_stat__init
                     (Game__PBMessageStat         *message);
size_t game__pbmessage_stat__get_packed_size
                     (const Game__PBMessageStat   *message);
size_t game__pbmessage_stat__pack
                     (const Game__PBMessageStat   *message,
                      uint8_t             *out);
size_t game__pbmessage_stat__pack_to_buffer
                     (const Game__PBMessageStat   *message,
                      ProtobufCBuffer     *buffer);
Game__PBMessageStat *
       game__pbmessage_stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbmessage_stat__free_unpacked
                     (Game__PBMessageStat *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserBasicInfo methods */
void   game__pbuser_basic_info__init
                     (Game__PBUserBasicInfo         *message);
size_t game__pbuser_basic_info__get_packed_size
                     (const Game__PBUserBasicInfo   *message);
size_t game__pbuser_basic_info__pack
                     (const Game__PBUserBasicInfo   *message,
                      uint8_t             *out);
size_t game__pbuser_basic_info__pack_to_buffer
                     (const Game__PBUserBasicInfo   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserBasicInfo *
       game__pbuser_basic_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_basic_info__free_unpacked
                     (Game__PBUserBasicInfo *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserResult methods */
void   game__pbuser_result__init
                     (Game__PBUserResult         *message);
size_t game__pbuser_result__get_packed_size
                     (const Game__PBUserResult   *message);
size_t game__pbuser_result__pack
                     (const Game__PBUserResult   *message,
                      uint8_t             *out);
size_t game__pbuser_result__pack_to_buffer
                     (const Game__PBUserResult   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserResult *
       game__pbuser_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_result__free_unpacked
                     (Game__PBUserResult *message,
                      ProtobufCAllocator *allocator);
/* Game__PBItemPriceInfo methods */
void   game__pbitem_price_info__init
                     (Game__PBItemPriceInfo         *message);
size_t game__pbitem_price_info__get_packed_size
                     (const Game__PBItemPriceInfo   *message);
size_t game__pbitem_price_info__pack
                     (const Game__PBItemPriceInfo   *message,
                      uint8_t             *out);
size_t game__pbitem_price_info__pack_to_buffer
                     (const Game__PBItemPriceInfo   *message,
                      ProtobufCBuffer     *buffer);
Game__PBItemPriceInfo *
       game__pbitem_price_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbitem_price_info__free_unpacked
                     (Game__PBItemPriceInfo *message,
                      ProtobufCAllocator *allocator);
/* Game__PBPromotionInfo methods */
void   game__pbpromotion_info__init
                     (Game__PBPromotionInfo         *message);
size_t game__pbpromotion_info__get_packed_size
                     (const Game__PBPromotionInfo   *message);
size_t game__pbpromotion_info__pack
                     (const Game__PBPromotionInfo   *message,
                      uint8_t             *out);
size_t game__pbpromotion_info__pack_to_buffer
                     (const Game__PBPromotionInfo   *message,
                      ProtobufCBuffer     *buffer);
Game__PBPromotionInfo *
       game__pbpromotion_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbpromotion_info__free_unpacked
                     (Game__PBPromotionInfo *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGameItem methods */
void   game__pbgame_item__init
                     (Game__PBGameItem         *message);
size_t game__pbgame_item__get_packed_size
                     (const Game__PBGameItem   *message);
size_t game__pbgame_item__pack
                     (const Game__PBGameItem   *message,
                      uint8_t             *out);
size_t game__pbgame_item__pack_to_buffer
                     (const Game__PBGameItem   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGameItem *
       game__pbgame_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgame_item__free_unpacked
                     (Game__PBGameItem *message,
                      ProtobufCAllocator *allocator);
/* Game__PBGameItemList methods */
void   game__pbgame_item_list__init
                     (Game__PBGameItemList         *message);
size_t game__pbgame_item_list__get_packed_size
                     (const Game__PBGameItemList   *message);
size_t game__pbgame_item_list__pack
                     (const Game__PBGameItemList   *message,
                      uint8_t             *out);
size_t game__pbgame_item_list__pack_to_buffer
                     (const Game__PBGameItemList   *message,
                      ProtobufCBuffer     *buffer);
Game__PBGameItemList *
       game__pbgame_item_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbgame_item_list__free_unpacked
                     (Game__PBGameItemList *message,
                      ProtobufCAllocator *allocator);
/* Game__PBIAPProduct methods */
void   game__pbiapproduct__init
                     (Game__PBIAPProduct         *message);
size_t game__pbiapproduct__get_packed_size
                     (const Game__PBIAPProduct   *message);
size_t game__pbiapproduct__pack
                     (const Game__PBIAPProduct   *message,
                      uint8_t             *out);
size_t game__pbiapproduct__pack_to_buffer
                     (const Game__PBIAPProduct   *message,
                      ProtobufCBuffer     *buffer);
Game__PBIAPProduct *
       game__pbiapproduct__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbiapproduct__free_unpacked
                     (Game__PBIAPProduct *message,
                      ProtobufCAllocator *allocator);
/* Game__PBIAPProductPrice methods */
void   game__pbiapproduct_price__init
                     (Game__PBIAPProductPrice         *message);
size_t game__pbiapproduct_price__get_packed_size
                     (const Game__PBIAPProductPrice   *message);
size_t game__pbiapproduct_price__pack
                     (const Game__PBIAPProductPrice   *message,
                      uint8_t             *out);
size_t game__pbiapproduct_price__pack_to_buffer
                     (const Game__PBIAPProductPrice   *message,
                      ProtobufCBuffer     *buffer);
Game__PBIAPProductPrice *
       game__pbiapproduct_price__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbiapproduct_price__free_unpacked
                     (Game__PBIAPProductPrice *message,
                      ProtobufCAllocator *allocator);
/* Game__PBIAPProductList methods */
void   game__pbiapproduct_list__init
                     (Game__PBIAPProductList         *message);
size_t game__pbiapproduct_list__get_packed_size
                     (const Game__PBIAPProductList   *message);
size_t game__pbiapproduct_list__pack
                     (const Game__PBIAPProductList   *message,
                      uint8_t             *out);
size_t game__pbiapproduct_list__pack_to_buffer
                     (const Game__PBIAPProductList   *message,
                      ProtobufCBuffer     *buffer);
Game__PBIAPProductList *
       game__pbiapproduct_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbiapproduct_list__free_unpacked
                     (Game__PBIAPProductList *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserItem methods */
void   game__pbuser_item__init
                     (Game__PBUserItem         *message);
size_t game__pbuser_item__get_packed_size
                     (const Game__PBUserItem   *message);
size_t game__pbuser_item__pack
                     (const Game__PBUserItem   *message,
                      uint8_t             *out);
size_t game__pbuser_item__pack_to_buffer
                     (const Game__PBUserItem   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserItem *
       game__pbuser_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_item__free_unpacked
                     (Game__PBUserItem *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserItemList methods */
void   game__pbuser_item_list__init
                     (Game__PBUserItemList         *message);
size_t game__pbuser_item_list__get_packed_size
                     (const Game__PBUserItemList   *message);
size_t game__pbuser_item_list__pack
                     (const Game__PBUserItemList   *message,
                      uint8_t             *out);
size_t game__pbuser_item_list__pack_to_buffer
                     (const Game__PBUserItemList   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserItemList *
       game__pbuser_item_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_item_list__free_unpacked
                     (Game__PBUserItemList *message,
                      ProtobufCAllocator *allocator);
/* Game__PBLocalizeString methods */
void   game__pblocalize_string__init
                     (Game__PBLocalizeString         *message);
size_t game__pblocalize_string__get_packed_size
                     (const Game__PBLocalizeString   *message);
size_t game__pblocalize_string__pack
                     (const Game__PBLocalizeString   *message,
                      uint8_t             *out);
size_t game__pblocalize_string__pack_to_buffer
                     (const Game__PBLocalizeString   *message,
                      ProtobufCBuffer     *buffer);
Game__PBLocalizeString *
       game__pblocalize_string__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pblocalize_string__free_unpacked
                     (Game__PBLocalizeString *message,
                      ProtobufCAllocator *allocator);
/* Game__PBApp methods */
void   game__pbapp__init
                     (Game__PBApp         *message);
size_t game__pbapp__get_packed_size
                     (const Game__PBApp   *message);
size_t game__pbapp__pack
                     (const Game__PBApp   *message,
                      uint8_t             *out);
size_t game__pbapp__pack_to_buffer
                     (const Game__PBApp   *message,
                      ProtobufCBuffer     *buffer);
Game__PBApp *
       game__pbapp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbapp__free_unpacked
                     (Game__PBApp *message,
                      ProtobufCAllocator *allocator);
/* Game__PBSize methods */
void   game__pbsize__init
                     (Game__PBSize         *message);
size_t game__pbsize__get_packed_size
                     (const Game__PBSize   *message);
size_t game__pbsize__pack
                     (const Game__PBSize   *message,
                      uint8_t             *out);
size_t game__pbsize__pack_to_buffer
                     (const Game__PBSize   *message,
                      ProtobufCBuffer     *buffer);
Game__PBSize *
       game__pbsize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbsize__free_unpacked
                     (Game__PBSize *message,
                      ProtobufCAllocator *allocator);
/* Game__PBOpusRank methods */
void   game__pbopus_rank__init
                     (Game__PBOpusRank         *message);
size_t game__pbopus_rank__get_packed_size
                     (const Game__PBOpusRank   *message);
size_t game__pbopus_rank__pack
                     (const Game__PBOpusRank   *message,
                      uint8_t             *out);
size_t game__pbopus_rank__pack_to_buffer
                     (const Game__PBOpusRank   *message,
                      ProtobufCBuffer     *buffer);
Game__PBOpusRank *
       game__pbopus_rank__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbopus_rank__free_unpacked
                     (Game__PBOpusRank *message,
                      ProtobufCAllocator *allocator);
/* Game__PBUserAward methods */
void   game__pbuser_award__init
                     (Game__PBUserAward         *message);
size_t game__pbuser_award__get_packed_size
                     (const Game__PBUserAward   *message);
size_t game__pbuser_award__pack
                     (const Game__PBUserAward   *message,
                      uint8_t             *out);
size_t game__pbuser_award__pack_to_buffer
                     (const Game__PBUserAward   *message,
                      ProtobufCBuffer     *buffer);
Game__PBUserAward *
       game__pbuser_award__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbuser_award__free_unpacked
                     (Game__PBUserAward *message,
                      ProtobufCAllocator *allocator);
/* Game__PBTask methods */
void   game__pbtask__init
                     (Game__PBTask         *message);
size_t game__pbtask__get_packed_size
                     (const Game__PBTask   *message);
size_t game__pbtask__pack
                     (const Game__PBTask   *message,
                      uint8_t             *out);
size_t game__pbtask__pack_to_buffer
                     (const Game__PBTask   *message,
                      ProtobufCBuffer     *buffer);
Game__PBTask *
       game__pbtask__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbtask__free_unpacked
                     (Game__PBTask *message,
                      ProtobufCAllocator *allocator);
/* Game__PBClass methods */
void   game__pbclass__init
                     (Game__PBClass         *message);
size_t game__pbclass__get_packed_size
                     (const Game__PBClass   *message);
size_t game__pbclass__pack
                     (const Game__PBClass   *message,
                      uint8_t             *out);
size_t game__pbclass__pack_to_buffer
                     (const Game__PBClass   *message,
                      ProtobufCBuffer     *buffer);
Game__PBClass *
       game__pbclass__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbclass__free_unpacked
                     (Game__PBClass *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__PBKeyValue_Closure)
                 (const Game__PBKeyValue *message,
                  void *closure_data);
typedef void (*Game__PBIntKeyValue_Closure)
                 (const Game__PBIntKeyValue *message,
                  void *closure_data);
typedef void (*Game__PBIntKeyIntValue_Closure)
                 (const Game__PBIntKeyIntValue *message,
                  void *closure_data);
typedef void (*Game__PBSNSUser_Closure)
                 (const Game__PBSNSUser *message,
                  void *closure_data);
typedef void (*Game__PBSNSUserCredential_Closure)
                 (const Game__PBSNSUserCredential *message,
                  void *closure_data);
typedef void (*Game__PBUserLevel_Closure)
                 (const Game__PBUserLevel *message,
                  void *closure_data);
typedef void (*Game__PBGameUser_Closure)
                 (const Game__PBGameUser *message,
                  void *closure_data);
typedef void (*Game__PBSimpleGroup_Closure)
                 (const Game__PBSimpleGroup *message,
                  void *closure_data);
typedef void (*Game__PBGameSession_Closure)
                 (const Game__PBGameSession *message,
                  void *closure_data);
typedef void (*Game__PBGameSessionChanged_Closure)
                 (const Game__PBGameSessionChanged *message,
                  void *closure_data);
typedef void (*Game__PBDrawBg_Closure)
                 (const Game__PBDrawBg *message,
                  void *closure_data);
typedef void (*Game__PBGradient_Closure)
                 (const Game__PBGradient *message,
                  void *closure_data);
typedef void (*Game__PBDrawAction_Closure)
                 (const Game__PBDrawAction *message,
                  void *closure_data);
typedef void (*Game__PBMessage_Closure)
                 (const Game__PBMessage *message,
                  void *closure_data);
typedef void (*Game__PBMessageStat_Closure)
                 (const Game__PBMessageStat *message,
                  void *closure_data);
typedef void (*Game__PBUserBasicInfo_Closure)
                 (const Game__PBUserBasicInfo *message,
                  void *closure_data);
typedef void (*Game__PBUserResult_Closure)
                 (const Game__PBUserResult *message,
                  void *closure_data);
typedef void (*Game__PBItemPriceInfo_Closure)
                 (const Game__PBItemPriceInfo *message,
                  void *closure_data);
typedef void (*Game__PBPromotionInfo_Closure)
                 (const Game__PBPromotionInfo *message,
                  void *closure_data);
typedef void (*Game__PBGameItem_Closure)
                 (const Game__PBGameItem *message,
                  void *closure_data);
typedef void (*Game__PBGameItemList_Closure)
                 (const Game__PBGameItemList *message,
                  void *closure_data);
typedef void (*Game__PBIAPProduct_Closure)
                 (const Game__PBIAPProduct *message,
                  void *closure_data);
typedef void (*Game__PBIAPProductPrice_Closure)
                 (const Game__PBIAPProductPrice *message,
                  void *closure_data);
typedef void (*Game__PBIAPProductList_Closure)
                 (const Game__PBIAPProductList *message,
                  void *closure_data);
typedef void (*Game__PBUserItem_Closure)
                 (const Game__PBUserItem *message,
                  void *closure_data);
typedef void (*Game__PBUserItemList_Closure)
                 (const Game__PBUserItemList *message,
                  void *closure_data);
typedef void (*Game__PBLocalizeString_Closure)
                 (const Game__PBLocalizeString *message,
                  void *closure_data);
typedef void (*Game__PBApp_Closure)
                 (const Game__PBApp *message,
                  void *closure_data);
typedef void (*Game__PBSize_Closure)
                 (const Game__PBSize *message,
                  void *closure_data);
typedef void (*Game__PBOpusRank_Closure)
                 (const Game__PBOpusRank *message,
                  void *closure_data);
typedef void (*Game__PBUserAward_Closure)
                 (const Game__PBUserAward *message,
                  void *closure_data);
typedef void (*Game__PBTask_Closure)
                 (const Game__PBTask *message,
                  void *closure_data);
typedef void (*Game__PBClass_Closure)
                 (const Game__PBClass *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__pbopen_info_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbgame_currency__descriptor;
extern const ProtobufCEnumDescriptor    game__pbdraw_item_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbdice_item_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbgame_item_consume_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbgame_time_unit__descriptor;
extern const ProtobufCEnumDescriptor    game__pbiapproduct_type__descriptor;
extern const ProtobufCEnumDescriptor    game__pbtask_status__descriptor;
extern const ProtobufCEnumDescriptor    game__pbtask_id_type__descriptor;
extern const ProtobufCMessageDescriptor game__pbkey_value__descriptor;
extern const ProtobufCMessageDescriptor game__pbint_key_value__descriptor;
extern const ProtobufCMessageDescriptor game__pbint_key_int_value__descriptor;
extern const ProtobufCMessageDescriptor game__pbsnsuser__descriptor;
extern const ProtobufCMessageDescriptor game__pbsnsuser_credential__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_level__descriptor;
extern const ProtobufCMessageDescriptor game__pbgame_user__descriptor;
extern const ProtobufCMessageDescriptor game__pbsimple_group__descriptor;
extern const ProtobufCMessageDescriptor game__pbgame_session__descriptor;
extern const ProtobufCMessageDescriptor game__pbgame_session_changed__descriptor;
extern const ProtobufCMessageDescriptor game__pbdraw_bg__descriptor;
extern const ProtobufCMessageDescriptor game__pbgradient__descriptor;
extern const ProtobufCMessageDescriptor game__pbdraw_action__descriptor;
extern const ProtobufCMessageDescriptor game__pbmessage__descriptor;
extern const ProtobufCMessageDescriptor game__pbmessage_stat__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_basic_info__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_result__descriptor;
extern const ProtobufCMessageDescriptor game__pbitem_price_info__descriptor;
extern const ProtobufCMessageDescriptor game__pbpromotion_info__descriptor;
extern const ProtobufCMessageDescriptor game__pbgame_item__descriptor;
extern const ProtobufCMessageDescriptor game__pbgame_item_list__descriptor;
extern const ProtobufCMessageDescriptor game__pbiapproduct__descriptor;
extern const ProtobufCMessageDescriptor game__pbiapproduct_price__descriptor;
extern const ProtobufCMessageDescriptor game__pbiapproduct_list__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_item__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_item_list__descriptor;
extern const ProtobufCMessageDescriptor game__pblocalize_string__descriptor;
extern const ProtobufCMessageDescriptor game__pbapp__descriptor;
extern const ProtobufCMessageDescriptor game__pbsize__descriptor;
extern const ProtobufCMessageDescriptor game__pbopus_rank__descriptor;
extern const ProtobufCMessageDescriptor game__pbuser_award__descriptor;
extern const ProtobufCMessageDescriptor game__pbtask__descriptor;
extern const ProtobufCMessageDescriptor game__pbclass__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_GameBasic_2eproto__INCLUDED */
