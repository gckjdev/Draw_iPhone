/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_Opus_2eproto__INCLUDED
#define PROTOBUF_C_Opus_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C_BEGIN_DECLS

#include "GameBasic.pb-c.h"
#include "Sing.pb-c.h"

typedef struct _Game__PBOpus Game__PBOpus;
typedef struct _Game__PBOpusAction Game__PBOpusAction;
typedef struct _Game__PBActionComment Game__PBActionComment;
typedef struct _Game__PBActionFlower Game__PBActionFlower;
typedef struct _Game__PBActionGuess Game__PBActionGuess;
typedef struct _Game__PBActionTimes Game__PBActionTimes;
typedef struct _Game__PBTimeline Game__PBTimeline;


/* --- enums --- */

typedef enum _Game__PBOpusAim {
  GAME__PBOPUS_AIM__UNKNOWN = 0,
  GAME__PBOPUS_AIM__DRAW = 1,
  GAME__PBOPUS_AIM__GUESS = 2,
  GAME__PBOPUS_AIM__COMMENT = 3,
  GAME__PBOPUS_AIM__REPOST = 4,
  GAME__PBOPUS_AIM__DRAW_TO_USER = 5,
  GAME__PBOPUS_AIM__FLOWER = 6,
  GAME__PBOPUS_AIM__TOMATO = 7,
  GAME__PBOPUS_AIM__ONLY_COMMENT = 8,
  GAME__PBOPUS_AIM__DRAW_CONTEST = 9,
  GAME__PBOPUS_AIM__SING = 1000,
  GAME__PBOPUS_AIM__SING_TO_USER = 1001,
  GAME__PBOPUS_AIM__SING_CONTEST = 1002
} Game__PBOpusAim;

/* --- messages --- */

struct  _Game__PBOpus
{
  ProtobufCMessage base;
  char *opusid;
  protobuf_c_boolean has_aim;
  Game__PBOpusAim aim;
  char *name;
  char *desc;
  char *image;
  char *thumbimage;
  char *dataurl;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  protobuf_c_boolean has_status;
  int32_t status;
  protobuf_c_boolean has_devicetype;
  int32_t devicetype;
  char *devicename;
  char *appid;
  Game__PBGameUser *author;
  Game__PBGameUser *targetuser;
  char *contestid;
  size_t n_actiontimes;
  Game__PBActionTimes **actiontimes;
  Game__PBSingOpus *singopus;
};
#define GAME__PBOPUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbopus__descriptor) \
    , NULL, 0,0, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, NULL, NULL, NULL, NULL, NULL, 0,NULL, NULL }


struct  _Game__PBOpusAction
{
  ProtobufCMessage base;
  char *actionid;
  protobuf_c_boolean has_actiontype;
  int32_t actiontype;
  char *opusid;
  Game__PBUserBasicInfo *userinfo;
  protobuf_c_boolean has_createdate;
  int32_t createdate;
  Game__PBOpusAction *sourceaction;
  Game__PBActionComment *commentaction;
  Game__PBActionFlower *floweraction;
  Game__PBActionGuess *guessaction;
};
#define GAME__PBOPUS_ACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbopus_action__descriptor) \
    , NULL, 0,0, NULL, NULL, 0,0, NULL, NULL, NULL, NULL }


struct  _Game__PBActionComment
{
  ProtobufCMessage base;
  char *content;
};
#define GAME__PBACTION_COMMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbaction_comment__descriptor) \
    , NULL }


struct  _Game__PBActionFlower
{
  ProtobufCMessage base;
  int32_t type;
};
#define GAME__PBACTION_FLOWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbaction_flower__descriptor) \
    , 0 }


struct  _Game__PBActionGuess
{
  ProtobufCMessage base;
  size_t n_words;
  char **words;
  protobuf_c_boolean has_correct;
  protobuf_c_boolean correct;
};
#define GAME__PBACTION_GUESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbaction_guess__descriptor) \
    , 0,NULL, 0,0 }


struct  _Game__PBActionTimes
{
  ProtobufCMessage base;
  int32_t type;
  char *name;
  protobuf_c_boolean has_value;
  int32_t value;
};
#define GAME__PBACTION_TIMES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbaction_times__descriptor) \
    , 0, NULL, 0,0 }


struct  _Game__PBTimeline
{
  ProtobufCMessage base;
  Game__PBOpus *opus;
  Game__PBOpusAction *action;
};
#define GAME__PBTIMELINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__pbtimeline__descriptor) \
    , NULL, NULL }


/* Game__PBOpus methods */
void   game__pbopus__init
                     (Game__PBOpus         *message);
size_t game__pbopus__get_packed_size
                     (const Game__PBOpus   *message);
size_t game__pbopus__pack
                     (const Game__PBOpus   *message,
                      uint8_t             *out);
size_t game__pbopus__pack_to_buffer
                     (const Game__PBOpus   *message,
                      ProtobufCBuffer     *buffer);
Game__PBOpus *
       game__pbopus__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbopus__free_unpacked
                     (Game__PBOpus *message,
                      ProtobufCAllocator *allocator);
/* Game__PBOpusAction methods */
void   game__pbopus_action__init
                     (Game__PBOpusAction         *message);
size_t game__pbopus_action__get_packed_size
                     (const Game__PBOpusAction   *message);
size_t game__pbopus_action__pack
                     (const Game__PBOpusAction   *message,
                      uint8_t             *out);
size_t game__pbopus_action__pack_to_buffer
                     (const Game__PBOpusAction   *message,
                      ProtobufCBuffer     *buffer);
Game__PBOpusAction *
       game__pbopus_action__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbopus_action__free_unpacked
                     (Game__PBOpusAction *message,
                      ProtobufCAllocator *allocator);
/* Game__PBActionComment methods */
void   game__pbaction_comment__init
                     (Game__PBActionComment         *message);
size_t game__pbaction_comment__get_packed_size
                     (const Game__PBActionComment   *message);
size_t game__pbaction_comment__pack
                     (const Game__PBActionComment   *message,
                      uint8_t             *out);
size_t game__pbaction_comment__pack_to_buffer
                     (const Game__PBActionComment   *message,
                      ProtobufCBuffer     *buffer);
Game__PBActionComment *
       game__pbaction_comment__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbaction_comment__free_unpacked
                     (Game__PBActionComment *message,
                      ProtobufCAllocator *allocator);
/* Game__PBActionFlower methods */
void   game__pbaction_flower__init
                     (Game__PBActionFlower         *message);
size_t game__pbaction_flower__get_packed_size
                     (const Game__PBActionFlower   *message);
size_t game__pbaction_flower__pack
                     (const Game__PBActionFlower   *message,
                      uint8_t             *out);
size_t game__pbaction_flower__pack_to_buffer
                     (const Game__PBActionFlower   *message,
                      ProtobufCBuffer     *buffer);
Game__PBActionFlower *
       game__pbaction_flower__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbaction_flower__free_unpacked
                     (Game__PBActionFlower *message,
                      ProtobufCAllocator *allocator);
/* Game__PBActionGuess methods */
void   game__pbaction_guess__init
                     (Game__PBActionGuess         *message);
size_t game__pbaction_guess__get_packed_size
                     (const Game__PBActionGuess   *message);
size_t game__pbaction_guess__pack
                     (const Game__PBActionGuess   *message,
                      uint8_t             *out);
size_t game__pbaction_guess__pack_to_buffer
                     (const Game__PBActionGuess   *message,
                      ProtobufCBuffer     *buffer);
Game__PBActionGuess *
       game__pbaction_guess__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbaction_guess__free_unpacked
                     (Game__PBActionGuess *message,
                      ProtobufCAllocator *allocator);
/* Game__PBActionTimes methods */
void   game__pbaction_times__init
                     (Game__PBActionTimes         *message);
size_t game__pbaction_times__get_packed_size
                     (const Game__PBActionTimes   *message);
size_t game__pbaction_times__pack
                     (const Game__PBActionTimes   *message,
                      uint8_t             *out);
size_t game__pbaction_times__pack_to_buffer
                     (const Game__PBActionTimes   *message,
                      ProtobufCBuffer     *buffer);
Game__PBActionTimes *
       game__pbaction_times__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbaction_times__free_unpacked
                     (Game__PBActionTimes *message,
                      ProtobufCAllocator *allocator);
/* Game__PBTimeline methods */
void   game__pbtimeline__init
                     (Game__PBTimeline         *message);
size_t game__pbtimeline__get_packed_size
                     (const Game__PBTimeline   *message);
size_t game__pbtimeline__pack
                     (const Game__PBTimeline   *message,
                      uint8_t             *out);
size_t game__pbtimeline__pack_to_buffer
                     (const Game__PBTimeline   *message,
                      ProtobufCBuffer     *buffer);
Game__PBTimeline *
       game__pbtimeline__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__pbtimeline__free_unpacked
                     (Game__PBTimeline *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__PBOpus_Closure)
                 (const Game__PBOpus *message,
                  void *closure_data);
typedef void (*Game__PBOpusAction_Closure)
                 (const Game__PBOpusAction *message,
                  void *closure_data);
typedef void (*Game__PBActionComment_Closure)
                 (const Game__PBActionComment *message,
                  void *closure_data);
typedef void (*Game__PBActionFlower_Closure)
                 (const Game__PBActionFlower *message,
                  void *closure_data);
typedef void (*Game__PBActionGuess_Closure)
                 (const Game__PBActionGuess *message,
                  void *closure_data);
typedef void (*Game__PBActionTimes_Closure)
                 (const Game__PBActionTimes *message,
                  void *closure_data);
typedef void (*Game__PBTimeline_Closure)
                 (const Game__PBTimeline *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    game__pbopus_aim__descriptor;
extern const ProtobufCMessageDescriptor game__pbopus__descriptor;
extern const ProtobufCMessageDescriptor game__pbopus_action__descriptor;
extern const ProtobufCMessageDescriptor game__pbaction_comment__descriptor;
extern const ProtobufCMessageDescriptor game__pbaction_flower__descriptor;
extern const ProtobufCMessageDescriptor game__pbaction_guess__descriptor;
extern const ProtobufCMessageDescriptor game__pbaction_times__descriptor;
extern const ProtobufCMessageDescriptor game__pbtimeline__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_Opus_2eproto__INCLUDED */
