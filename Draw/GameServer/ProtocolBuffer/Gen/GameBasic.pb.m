// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "GameBasic.pb.h"

@implementation GameBasicRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GameBasicRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBGameUser ()
@property (retain) NSString* userId;
@property (retain) NSString* nickName;
@end

@implementation PBGameUser

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value {
  hasNickName_ = !!value;
}
@synthesize nickName;
- (void) dealloc {
  self.userId = nil;
  self.nickName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.nickName = @"";
  }
  return self;
}
static PBGameUser* defaultPBGameUserInstance = nil;
+ (void) initialize {
  if (self == [PBGameUser class]) {
    defaultPBGameUserInstance = [[PBGameUser alloc] init];
  }
}
+ (PBGameUser*) defaultInstance {
  return defaultPBGameUserInstance;
}
- (PBGameUser*) defaultInstance {
  return defaultPBGameUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasNickName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeStringSize(1, self.userId);
  }
  if (self.hasNickName) {
    size += computeStringSize(2, self.nickName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGameUser*) parseFromData:(NSData*) data {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromData:data] build];
}
+ (PBGameUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGameUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromInputStream:input] build];
}
+ (PBGameUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGameUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBGameUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameUser*)[[[PBGameUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGameUser_Builder*) builder {
  return [[[PBGameUser_Builder alloc] init] autorelease];
}
+ (PBGameUser_Builder*) builderWithPrototype:(PBGameUser*) prototype {
  return [[PBGameUser builder] mergeFrom:prototype];
}
- (PBGameUser_Builder*) builder {
  return [PBGameUser builder];
}
@end

@interface PBGameUser_Builder()
@property (retain) PBGameUser* result;
@end

@implementation PBGameUser_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGameUser alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGameUser_Builder*) clear {
  self.result = [[[PBGameUser alloc] init] autorelease];
  return self;
}
- (PBGameUser_Builder*) clone {
  return [PBGameUser builderWithPrototype:result];
}
- (PBGameUser*) defaultInstance {
  return [PBGameUser defaultInstance];
}
- (PBGameUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGameUser*) buildPartial {
  PBGameUser* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGameUser_Builder*) mergeFrom:(PBGameUser*) other {
  if (other == [PBGameUser defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGameUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGameUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (PBGameUser_Builder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (PBGameUser_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (PBGameUser_Builder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (PBGameUser_Builder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
@end

@interface PBGameSession ()
@property (retain) NSString* gameId;
@property int32_t sessionId;
@property (retain) NSString* name;
@property (retain) NSString* createBy;
@property int32_t createTime;
@property (retain) NSString* host;
@property (retain) NSMutableArray* mutableUsersList;
@end

@implementation PBGameSession

- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value {
  hasSessionId_ = !!value;
}
@synthesize sessionId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCreateBy {
  return !!hasCreateBy_;
}
- (void) setHasCreateBy:(BOOL) value {
  hasCreateBy_ = !!value;
}
@synthesize createBy;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (BOOL) hasHost {
  return !!hasHost_;
}
- (void) setHasHost:(BOOL) value {
  hasHost_ = !!value;
}
@synthesize host;
@synthesize mutableUsersList;
- (void) dealloc {
  self.gameId = nil;
  self.name = nil;
  self.createBy = nil;
  self.host = nil;
  self.mutableUsersList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameId = @"";
    self.sessionId = 0;
    self.name = @"";
    self.createBy = @"";
    self.createTime = 0;
    self.host = @"";
  }
  return self;
}
static PBGameSession* defaultPBGameSessionInstance = nil;
+ (void) initialize {
  if (self == [PBGameSession class]) {
    defaultPBGameSessionInstance = [[PBGameSession alloc] init];
  }
}
+ (PBGameSession*) defaultInstance {
  return defaultPBGameSessionInstance;
}
- (PBGameSession*) defaultInstance {
  return defaultPBGameSessionInstance;
}
- (NSArray*) usersList {
  return mutableUsersList;
}
- (PBGameUser*) usersAtIndex:(int32_t) index {
  id value = [mutableUsersList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasGameId) {
    return NO;
  }
  if (!self.hasSessionId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCreateBy) {
    return NO;
  }
  if (!self.hasCreateTime) {
    return NO;
  }
  for (PBGameUser* element in self.usersList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameId) {
    [output writeString:1 value:self.gameId];
  }
  if (self.hasSessionId) {
    [output writeInt32:2 value:self.sessionId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasCreateBy) {
    [output writeString:4 value:self.createBy];
  }
  if (self.hasCreateTime) {
    [output writeInt32:5 value:self.createTime];
  }
  if (self.hasHost) {
    [output writeString:6 value:self.host];
  }
  for (PBGameUser* element in self.usersList) {
    [output writeMessage:7 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGameId) {
    size += computeStringSize(1, self.gameId);
  }
  if (self.hasSessionId) {
    size += computeInt32Size(2, self.sessionId);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasCreateBy) {
    size += computeStringSize(4, self.createBy);
  }
  if (self.hasCreateTime) {
    size += computeInt32Size(5, self.createTime);
  }
  if (self.hasHost) {
    size += computeStringSize(6, self.host);
  }
  for (PBGameUser* element in self.usersList) {
    size += computeMessageSize(7, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGameSession*) parseFromData:(NSData*) data {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromData:data] build];
}
+ (PBGameSession*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGameSession*) parseFromInputStream:(NSInputStream*) input {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromInputStream:input] build];
}
+ (PBGameSession*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGameSession*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromCodedInputStream:input] build];
}
+ (PBGameSession*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGameSession*)[[[PBGameSession builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGameSession_Builder*) builder {
  return [[[PBGameSession_Builder alloc] init] autorelease];
}
+ (PBGameSession_Builder*) builderWithPrototype:(PBGameSession*) prototype {
  return [[PBGameSession builder] mergeFrom:prototype];
}
- (PBGameSession_Builder*) builder {
  return [PBGameSession builder];
}
@end

@interface PBGameSession_Builder()
@property (retain) PBGameSession* result;
@end

@implementation PBGameSession_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGameSession alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGameSession_Builder*) clear {
  self.result = [[[PBGameSession alloc] init] autorelease];
  return self;
}
- (PBGameSession_Builder*) clone {
  return [PBGameSession builderWithPrototype:result];
}
- (PBGameSession*) defaultInstance {
  return [PBGameSession defaultInstance];
}
- (PBGameSession*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGameSession*) buildPartial {
  PBGameSession* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGameSession_Builder*) mergeFrom:(PBGameSession*) other {
  if (other == [PBGameSession defaultInstance]) {
    return self;
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreateBy) {
    [self setCreateBy:other.createBy];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasHost) {
    [self setHost:other.host];
  }
  if (other.mutableUsersList.count > 0) {
    if (result.mutableUsersList == nil) {
      result.mutableUsersList = [NSMutableArray array];
    }
    [result.mutableUsersList addObjectsFromArray:other.mutableUsersList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGameSession_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGameSession_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGameId:[input readString]];
        break;
      }
      case 16: {
        [self setSessionId:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setCreateBy:[input readString]];
        break;
      }
      case 40: {
        [self setCreateTime:[input readInt32]];
        break;
      }
      case 50: {
        [self setHost:[input readString]];
        break;
      }
      case 58: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (PBGameSession_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (PBGameSession_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (int32_t) sessionId {
  return result.sessionId;
}
- (PBGameSession_Builder*) setSessionId:(int32_t) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (PBGameSession_Builder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBGameSession_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBGameSession_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCreateBy {
  return result.hasCreateBy;
}
- (NSString*) createBy {
  return result.createBy;
}
- (PBGameSession_Builder*) setCreateBy:(NSString*) value {
  result.hasCreateBy = YES;
  result.createBy = value;
  return self;
}
- (PBGameSession_Builder*) clearCreateBy {
  result.hasCreateBy = NO;
  result.createBy = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int32_t) createTime {
  return result.createTime;
}
- (PBGameSession_Builder*) setCreateTime:(int32_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (PBGameSession_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0;
  return self;
}
- (BOOL) hasHost {
  return result.hasHost;
}
- (NSString*) host {
  return result.host;
}
- (PBGameSession_Builder*) setHost:(NSString*) value {
  result.hasHost = YES;
  result.host = value;
  return self;
}
- (PBGameSession_Builder*) clearHost {
  result.hasHost = NO;
  result.host = @"";
  return self;
}
- (NSArray*) usersList {
  if (result.mutableUsersList == nil) { return [NSArray array]; }
  return result.mutableUsersList;
}
- (PBGameUser*) usersAtIndex:(int32_t) index {
  return [result usersAtIndex:index];
}
- (PBGameSession_Builder*) replaceUsersAtIndex:(int32_t) index with:(PBGameUser*) value {
  [result.mutableUsersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGameSession_Builder*) addAllUsers:(NSArray*) values {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObjectsFromArray:values];
  return self;
}
- (PBGameSession_Builder*) clearUsersList {
  result.mutableUsersList = nil;
  return self;
}
- (PBGameSession_Builder*) addUsers:(PBGameUser*) value {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObject:value];
  return self;
}
@end

