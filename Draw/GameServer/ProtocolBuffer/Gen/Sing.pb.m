// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Sing.pb.h"

@implementation SingRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SingRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GameBasicRoot registerAllExtensions:registry];
    [GameConstantsRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBSong ()
@property (retain) NSString* songId;
@property (retain) NSString* name;
@property (retain) NSString* author;
@property (retain) NSString* lyric;
@property (retain) NSMutableArray* mutableTagList;
@end

@implementation PBSong

- (BOOL) hasSongId {
  return !!hasSongId_;
}
- (void) setHasSongId:(BOOL) value {
  hasSongId_ = !!value;
}
@synthesize songId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasAuthor {
  return !!hasAuthor_;
}
- (void) setHasAuthor:(BOOL) value {
  hasAuthor_ = !!value;
}
@synthesize author;
- (BOOL) hasLyric {
  return !!hasLyric_;
}
- (void) setHasLyric:(BOOL) value {
  hasLyric_ = !!value;
}
@synthesize lyric;
@synthesize mutableTagList;
- (void) dealloc {
  self.songId = nil;
  self.name = nil;
  self.author = nil;
  self.lyric = nil;
  self.mutableTagList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.songId = @"";
    self.name = @"";
    self.author = @"";
    self.lyric = @"";
  }
  return self;
}
static PBSong* defaultPBSongInstance = nil;
+ (void) initialize {
  if (self == [PBSong class]) {
    defaultPBSongInstance = [[PBSong alloc] init];
  }
}
+ (PBSong*) defaultInstance {
  return defaultPBSongInstance;
}
- (PBSong*) defaultInstance {
  return defaultPBSongInstance;
}
- (NSArray*) tagList {
  return mutableTagList;
}
- (int32_t) tagAtIndex:(int32_t) index {
  id value = [mutableTagList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (!self.hasSongId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSongId) {
    [output writeString:1 value:self.songId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasAuthor) {
    [output writeString:3 value:self.author];
  }
  if (self.hasLyric) {
    [output writeString:4 value:self.lyric];
  }
  for (NSNumber* value in self.mutableTagList) {
    [output writeInt32:20 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSongId) {
    size += computeStringSize(1, self.songId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasAuthor) {
    size += computeStringSize(3, self.author);
  }
  if (self.hasLyric) {
    size += computeStringSize(4, self.lyric);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableTagList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 2 * self.mutableTagList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBSong*) parseFromData:(NSData*) data {
  return (PBSong*)[[[PBSong builder] mergeFromData:data] build];
}
+ (PBSong*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSong*)[[[PBSong builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBSong*) parseFromInputStream:(NSInputStream*) input {
  return (PBSong*)[[[PBSong builder] mergeFromInputStream:input] build];
}
+ (PBSong*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSong*)[[[PBSong builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSong*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBSong*)[[[PBSong builder] mergeFromCodedInputStream:input] build];
}
+ (PBSong*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSong*)[[[PBSong builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSong_Builder*) builder {
  return [[[PBSong_Builder alloc] init] autorelease];
}
+ (PBSong_Builder*) builderWithPrototype:(PBSong*) prototype {
  return [[PBSong builder] mergeFrom:prototype];
}
- (PBSong_Builder*) builder {
  return [PBSong builder];
}
@end

@interface PBSong_Builder()
@property (retain) PBSong* result;
@end

@implementation PBSong_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBSong alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBSong_Builder*) clear {
  self.result = [[[PBSong alloc] init] autorelease];
  return self;
}
- (PBSong_Builder*) clone {
  return [PBSong builderWithPrototype:result];
}
- (PBSong*) defaultInstance {
  return [PBSong defaultInstance];
}
- (PBSong*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBSong*) buildPartial {
  PBSong* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBSong_Builder*) mergeFrom:(PBSong*) other {
  if (other == [PBSong defaultInstance]) {
    return self;
  }
  if (other.hasSongId) {
    [self setSongId:other.songId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAuthor) {
    [self setAuthor:other.author];
  }
  if (other.hasLyric) {
    [self setLyric:other.lyric];
  }
  if (other.mutableTagList.count > 0) {
    if (result.mutableTagList == nil) {
      result.mutableTagList = [NSMutableArray array];
    }
    [result.mutableTagList addObjectsFromArray:other.mutableTagList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBSong_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBSong_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSongId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setAuthor:[input readString]];
        break;
      }
      case 34: {
        [self setLyric:[input readString]];
        break;
      }
      case 160: {
        [self addTag:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSongId {
  return result.hasSongId;
}
- (NSString*) songId {
  return result.songId;
}
- (PBSong_Builder*) setSongId:(NSString*) value {
  result.hasSongId = YES;
  result.songId = value;
  return self;
}
- (PBSong_Builder*) clearSongId {
  result.hasSongId = NO;
  result.songId = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBSong_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBSong_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasAuthor {
  return result.hasAuthor;
}
- (NSString*) author {
  return result.author;
}
- (PBSong_Builder*) setAuthor:(NSString*) value {
  result.hasAuthor = YES;
  result.author = value;
  return self;
}
- (PBSong_Builder*) clearAuthor {
  result.hasAuthor = NO;
  result.author = @"";
  return self;
}
- (BOOL) hasLyric {
  return result.hasLyric;
}
- (NSString*) lyric {
  return result.lyric;
}
- (PBSong_Builder*) setLyric:(NSString*) value {
  result.hasLyric = YES;
  result.lyric = value;
  return self;
}
- (PBSong_Builder*) clearLyric {
  result.hasLyric = NO;
  result.lyric = @"";
  return self;
}
- (NSArray*) tagList {
  if (result.mutableTagList == nil) {
    return [NSArray array];
  }
  return result.mutableTagList;
}
- (int32_t) tagAtIndex:(int32_t) index {
  return [result tagAtIndex:index];
}
- (PBSong_Builder*) replaceTagAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableTagList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (PBSong_Builder*) addTag:(int32_t) value {
  if (result.mutableTagList == nil) {
    result.mutableTagList = [NSMutableArray array];
  }
  [result.mutableTagList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (PBSong_Builder*) addAllTag:(NSArray*) values {
  if (result.mutableTagList == nil) {
    result.mutableTagList = [NSMutableArray array];
  }
  [result.mutableTagList addObjectsFromArray:values];
  return self;
}
- (PBSong_Builder*) clearTagList {
  result.mutableTagList = nil;
  return self;
}
@end

@interface PBActionTimes ()
@property int32_t type;
@property int32_t value;
@end

@implementation PBActionTimes

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.value = 0;
  }
  return self;
}
static PBActionTimes* defaultPBActionTimesInstance = nil;
+ (void) initialize {
  if (self == [PBActionTimes class]) {
    defaultPBActionTimesInstance = [[PBActionTimes alloc] init];
  }
}
+ (PBActionTimes*) defaultInstance {
  return defaultPBActionTimesInstance;
}
- (PBActionTimes*) defaultInstance {
  return defaultPBActionTimesInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasValue) {
    [output writeInt32:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeInt32Size(1, self.type);
  }
  if (self.hasValue) {
    size += computeInt32Size(2, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBActionTimes*) parseFromData:(NSData*) data {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromData:data] build];
}
+ (PBActionTimes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBActionTimes*) parseFromInputStream:(NSInputStream*) input {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromInputStream:input] build];
}
+ (PBActionTimes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionTimes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromCodedInputStream:input] build];
}
+ (PBActionTimes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionTimes*)[[[PBActionTimes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionTimes_Builder*) builder {
  return [[[PBActionTimes_Builder alloc] init] autorelease];
}
+ (PBActionTimes_Builder*) builderWithPrototype:(PBActionTimes*) prototype {
  return [[PBActionTimes builder] mergeFrom:prototype];
}
- (PBActionTimes_Builder*) builder {
  return [PBActionTimes builder];
}
@end

@interface PBActionTimes_Builder()
@property (retain) PBActionTimes* result;
@end

@implementation PBActionTimes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBActionTimes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBActionTimes_Builder*) clear {
  self.result = [[[PBActionTimes alloc] init] autorelease];
  return self;
}
- (PBActionTimes_Builder*) clone {
  return [PBActionTimes builderWithPrototype:result];
}
- (PBActionTimes*) defaultInstance {
  return [PBActionTimes defaultInstance];
}
- (PBActionTimes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBActionTimes*) buildPartial {
  PBActionTimes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBActionTimes_Builder*) mergeFrom:(PBActionTimes*) other {
  if (other == [PBActionTimes defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBActionTimes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBActionTimes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 16: {
        [self setValue:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBActionTimes_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBActionTimes_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (int32_t) value {
  return result.value;
}
- (PBActionTimes_Builder*) setValue:(int32_t) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (PBActionTimes_Builder*) clearValue {
  result.hasValue = NO;
  result.value = 0;
  return self;
}
@end

@interface PBSongInfo ()
@property (retain) PBSong* song;
@property (retain) NSString* image;
@property (retain) NSString* thumbImage;
@property (retain) NSString* songUrl;
@property (retain) NSString* desc;
@property Float32 duration;
@property Float32 pitch;
@property (retain) NSMutableArray* mutableTypeList;
@property (retain) NSString* targetUserId;
@property (retain) NSString* contestId;
@end

@implementation PBSongInfo

- (BOOL) hasSong {
  return !!hasSong_;
}
- (void) setHasSong:(BOOL) value {
  hasSong_ = !!value;
}
@synthesize song;
- (BOOL) hasImage {
  return !!hasImage_;
}
- (void) setHasImage:(BOOL) value {
  hasImage_ = !!value;
}
@synthesize image;
- (BOOL) hasThumbImage {
  return !!hasThumbImage_;
}
- (void) setHasThumbImage:(BOOL) value {
  hasThumbImage_ = !!value;
}
@synthesize thumbImage;
- (BOOL) hasSongUrl {
  return !!hasSongUrl_;
}
- (void) setHasSongUrl:(BOOL) value {
  hasSongUrl_ = !!value;
}
@synthesize songUrl;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasDuration {
  return !!hasDuration_;
}
- (void) setHasDuration:(BOOL) value {
  hasDuration_ = !!value;
}
@synthesize duration;
- (BOOL) hasPitch {
  return !!hasPitch_;
}
- (void) setHasPitch:(BOOL) value {
  hasPitch_ = !!value;
}
@synthesize pitch;
@synthesize mutableTypeList;
- (BOOL) hasTargetUserId {
  return !!hasTargetUserId_;
}
- (void) setHasTargetUserId:(BOOL) value {
  hasTargetUserId_ = !!value;
}
@synthesize targetUserId;
- (BOOL) hasContestId {
  return !!hasContestId_;
}
- (void) setHasContestId:(BOOL) value {
  hasContestId_ = !!value;
}
@synthesize contestId;
- (void) dealloc {
  self.song = nil;
  self.image = nil;
  self.thumbImage = nil;
  self.songUrl = nil;
  self.desc = nil;
  self.mutableTypeList = nil;
  self.targetUserId = nil;
  self.contestId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.song = [PBSong defaultInstance];
    self.image = @"";
    self.thumbImage = @"";
    self.songUrl = @"";
    self.desc = @"";
    self.duration = 1;
    self.pitch = 1;
    self.targetUserId = @"";
    self.contestId = @"";
  }
  return self;
}
static PBSongInfo* defaultPBSongInfoInstance = nil;
+ (void) initialize {
  if (self == [PBSongInfo class]) {
    defaultPBSongInfoInstance = [[PBSongInfo alloc] init];
  }
}
+ (PBSongInfo*) defaultInstance {
  return defaultPBSongInfoInstance;
}
- (PBSongInfo*) defaultInstance {
  return defaultPBSongInfoInstance;
}
- (NSArray*) typeList {
  return mutableTypeList;
}
- (int32_t) typeAtIndex:(int32_t) index {
  id value = [mutableTypeList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (self.hasSong) {
    if (!self.song.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSNumber* value in self.mutableTypeList) {
    [output writeInt32:12 value:[value intValue]];
  }
  if (self.hasTargetUserId) {
    [output writeString:13 value:self.targetUserId];
  }
  if (self.hasContestId) {
    [output writeString:14 value:self.contestId];
  }
  if (self.hasSong) {
    [output writeMessage:20 value:self.song];
  }
  if (self.hasImage) {
    [output writeString:21 value:self.image];
  }
  if (self.hasThumbImage) {
    [output writeString:22 value:self.thumbImage];
  }
  if (self.hasSongUrl) {
    [output writeString:23 value:self.songUrl];
  }
  if (self.hasDesc) {
    [output writeString:24 value:self.desc];
  }
  if (self.hasDuration) {
    [output writeFloat:25 value:self.duration];
  }
  if (self.hasPitch) {
    [output writeFloat:26 value:self.pitch];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableTypeList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableTypeList.count;
  }
  if (self.hasTargetUserId) {
    size += computeStringSize(13, self.targetUserId);
  }
  if (self.hasContestId) {
    size += computeStringSize(14, self.contestId);
  }
  if (self.hasSong) {
    size += computeMessageSize(20, self.song);
  }
  if (self.hasImage) {
    size += computeStringSize(21, self.image);
  }
  if (self.hasThumbImage) {
    size += computeStringSize(22, self.thumbImage);
  }
  if (self.hasSongUrl) {
    size += computeStringSize(23, self.songUrl);
  }
  if (self.hasDesc) {
    size += computeStringSize(24, self.desc);
  }
  if (self.hasDuration) {
    size += computeFloatSize(25, self.duration);
  }
  if (self.hasPitch) {
    size += computeFloatSize(26, self.pitch);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBSongInfo*) parseFromData:(NSData*) data {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromData:data] build];
}
+ (PBSongInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBSongInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromInputStream:input] build];
}
+ (PBSongInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSongInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PBSongInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSongInfo*)[[[PBSongInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSongInfo_Builder*) builder {
  return [[[PBSongInfo_Builder alloc] init] autorelease];
}
+ (PBSongInfo_Builder*) builderWithPrototype:(PBSongInfo*) prototype {
  return [[PBSongInfo builder] mergeFrom:prototype];
}
- (PBSongInfo_Builder*) builder {
  return [PBSongInfo builder];
}
@end

@interface PBSongInfo_Builder()
@property (retain) PBSongInfo* result;
@end

@implementation PBSongInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBSongInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBSongInfo_Builder*) clear {
  self.result = [[[PBSongInfo alloc] init] autorelease];
  return self;
}
- (PBSongInfo_Builder*) clone {
  return [PBSongInfo builderWithPrototype:result];
}
- (PBSongInfo*) defaultInstance {
  return [PBSongInfo defaultInstance];
}
- (PBSongInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBSongInfo*) buildPartial {
  PBSongInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBSongInfo_Builder*) mergeFrom:(PBSongInfo*) other {
  if (other == [PBSongInfo defaultInstance]) {
    return self;
  }
  if (other.hasSong) {
    [self mergeSong:other.song];
  }
  if (other.hasImage) {
    [self setImage:other.image];
  }
  if (other.hasThumbImage) {
    [self setThumbImage:other.thumbImage];
  }
  if (other.hasSongUrl) {
    [self setSongUrl:other.songUrl];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasDuration) {
    [self setDuration:other.duration];
  }
  if (other.hasPitch) {
    [self setPitch:other.pitch];
  }
  if (other.mutableTypeList.count > 0) {
    if (result.mutableTypeList == nil) {
      result.mutableTypeList = [NSMutableArray array];
    }
    [result.mutableTypeList addObjectsFromArray:other.mutableTypeList];
  }
  if (other.hasTargetUserId) {
    [self setTargetUserId:other.targetUserId];
  }
  if (other.hasContestId) {
    [self setContestId:other.contestId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBSongInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBSongInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 96: {
        [self addType:[input readInt32]];
        break;
      }
      case 106: {
        [self setTargetUserId:[input readString]];
        break;
      }
      case 114: {
        [self setContestId:[input readString]];
        break;
      }
      case 162: {
        PBSong_Builder* subBuilder = [PBSong builder];
        if (self.hasSong) {
          [subBuilder mergeFrom:self.song];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSong:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        [self setImage:[input readString]];
        break;
      }
      case 178: {
        [self setThumbImage:[input readString]];
        break;
      }
      case 186: {
        [self setSongUrl:[input readString]];
        break;
      }
      case 194: {
        [self setDesc:[input readString]];
        break;
      }
      case 205: {
        [self setDuration:[input readFloat]];
        break;
      }
      case 213: {
        [self setPitch:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasSong {
  return result.hasSong;
}
- (PBSong*) song {
  return result.song;
}
- (PBSongInfo_Builder*) setSong:(PBSong*) value {
  result.hasSong = YES;
  result.song = value;
  return self;
}
- (PBSongInfo_Builder*) setSongBuilder:(PBSong_Builder*) builderForValue {
  return [self setSong:[builderForValue build]];
}
- (PBSongInfo_Builder*) mergeSong:(PBSong*) value {
  if (result.hasSong &&
      result.song != [PBSong defaultInstance]) {
    result.song =
      [[[PBSong builderWithPrototype:result.song] mergeFrom:value] buildPartial];
  } else {
    result.song = value;
  }
  result.hasSong = YES;
  return self;
}
- (PBSongInfo_Builder*) clearSong {
  result.hasSong = NO;
  result.song = [PBSong defaultInstance];
  return self;
}
- (BOOL) hasImage {
  return result.hasImage;
}
- (NSString*) image {
  return result.image;
}
- (PBSongInfo_Builder*) setImage:(NSString*) value {
  result.hasImage = YES;
  result.image = value;
  return self;
}
- (PBSongInfo_Builder*) clearImage {
  result.hasImage = NO;
  result.image = @"";
  return self;
}
- (BOOL) hasThumbImage {
  return result.hasThumbImage;
}
- (NSString*) thumbImage {
  return result.thumbImage;
}
- (PBSongInfo_Builder*) setThumbImage:(NSString*) value {
  result.hasThumbImage = YES;
  result.thumbImage = value;
  return self;
}
- (PBSongInfo_Builder*) clearThumbImage {
  result.hasThumbImage = NO;
  result.thumbImage = @"";
  return self;
}
- (BOOL) hasSongUrl {
  return result.hasSongUrl;
}
- (NSString*) songUrl {
  return result.songUrl;
}
- (PBSongInfo_Builder*) setSongUrl:(NSString*) value {
  result.hasSongUrl = YES;
  result.songUrl = value;
  return self;
}
- (PBSongInfo_Builder*) clearSongUrl {
  result.hasSongUrl = NO;
  result.songUrl = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (PBSongInfo_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (PBSongInfo_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasDuration {
  return result.hasDuration;
}
- (Float32) duration {
  return result.duration;
}
- (PBSongInfo_Builder*) setDuration:(Float32) value {
  result.hasDuration = YES;
  result.duration = value;
  return self;
}
- (PBSongInfo_Builder*) clearDuration {
  result.hasDuration = NO;
  result.duration = 1;
  return self;
}
- (BOOL) hasPitch {
  return result.hasPitch;
}
- (Float32) pitch {
  return result.pitch;
}
- (PBSongInfo_Builder*) setPitch:(Float32) value {
  result.hasPitch = YES;
  result.pitch = value;
  return self;
}
- (PBSongInfo_Builder*) clearPitch {
  result.hasPitch = NO;
  result.pitch = 1;
  return self;
}
- (NSArray*) typeList {
  if (result.mutableTypeList == nil) {
    return [NSArray array];
  }
  return result.mutableTypeList;
}
- (int32_t) typeAtIndex:(int32_t) index {
  return [result typeAtIndex:index];
}
- (PBSongInfo_Builder*) replaceTypeAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableTypeList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (PBSongInfo_Builder*) addType:(int32_t) value {
  if (result.mutableTypeList == nil) {
    result.mutableTypeList = [NSMutableArray array];
  }
  [result.mutableTypeList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (PBSongInfo_Builder*) addAllType:(NSArray*) values {
  if (result.mutableTypeList == nil) {
    result.mutableTypeList = [NSMutableArray array];
  }
  [result.mutableTypeList addObjectsFromArray:values];
  return self;
}
- (PBSongInfo_Builder*) clearTypeList {
  result.mutableTypeList = nil;
  return self;
}
- (BOOL) hasTargetUserId {
  return result.hasTargetUserId;
}
- (NSString*) targetUserId {
  return result.targetUserId;
}
- (PBSongInfo_Builder*) setTargetUserId:(NSString*) value {
  result.hasTargetUserId = YES;
  result.targetUserId = value;
  return self;
}
- (PBSongInfo_Builder*) clearTargetUserId {
  result.hasTargetUserId = NO;
  result.targetUserId = @"";
  return self;
}
- (BOOL) hasContestId {
  return result.hasContestId;
}
- (NSString*) contestId {
  return result.contestId;
}
- (PBSongInfo_Builder*) setContestId:(NSString*) value {
  result.hasContestId = YES;
  result.contestId = value;
  return self;
}
- (PBSongInfo_Builder*) clearContestId {
  result.hasContestId = NO;
  result.contestId = @"";
  return self;
}
@end

@interface PBOpus ()
@property (retain) NSString* opusId;
@property (retain) PBGameUser* user;
@property int32_t createDate;
@property int32_t status;
@property (retain) NSMutableArray* mutableActionTimesList;
@property (retain) PBSongInfo* songInfo;
@end

@implementation PBOpus

- (BOOL) hasOpusId {
  return !!hasOpusId_;
}
- (void) setHasOpusId:(BOOL) value {
  hasOpusId_ = !!value;
}
@synthesize opusId;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableActionTimesList;
- (BOOL) hasSongInfo {
  return !!hasSongInfo_;
}
- (void) setHasSongInfo:(BOOL) value {
  hasSongInfo_ = !!value;
}
@synthesize songInfo;
- (void) dealloc {
  self.opusId = nil;
  self.user = nil;
  self.mutableActionTimesList = nil;
  self.songInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.opusId = @"";
    self.user = [PBGameUser defaultInstance];
    self.createDate = 0;
    self.status = 0;
    self.songInfo = [PBSongInfo defaultInstance];
  }
  return self;
}
static PBOpus* defaultPBOpusInstance = nil;
+ (void) initialize {
  if (self == [PBOpus class]) {
    defaultPBOpusInstance = [[PBOpus alloc] init];
  }
}
+ (PBOpus*) defaultInstance {
  return defaultPBOpusInstance;
}
- (PBOpus*) defaultInstance {
  return defaultPBOpusInstance;
}
- (NSArray*) actionTimesList {
  return mutableActionTimesList;
}
- (PBActionTimes*) actionTimesAtIndex:(int32_t) index {
  id value = [mutableActionTimesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasOpusId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  for (PBActionTimes* element in self.actionTimesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasSongInfo) {
    if (!self.songInfo.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOpusId) {
    [output writeString:1 value:self.opusId];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasCreateDate) {
    [output writeInt32:6 value:self.createDate];
  }
  if (self.hasStatus) {
    [output writeInt32:10 value:self.status];
  }
  for (PBActionTimes* element in self.actionTimesList) {
    [output writeMessage:25 value:element];
  }
  if (self.hasSongInfo) {
    [output writeMessage:30 value:self.songInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOpusId) {
    size += computeStringSize(1, self.opusId);
  }
  if (self.hasUser) {
    size += computeMessageSize(2, self.user);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(6, self.createDate);
  }
  if (self.hasStatus) {
    size += computeInt32Size(10, self.status);
  }
  for (PBActionTimes* element in self.actionTimesList) {
    size += computeMessageSize(25, element);
  }
  if (self.hasSongInfo) {
    size += computeMessageSize(30, self.songInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBOpus*) parseFromData:(NSData*) data {
  return (PBOpus*)[[[PBOpus builder] mergeFromData:data] build];
}
+ (PBOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input {
  return (PBOpus*)[[[PBOpus builder] mergeFromInputStream:input] build];
}
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBOpus*)[[[PBOpus builder] mergeFromCodedInputStream:input] build];
}
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpus_Builder*) builder {
  return [[[PBOpus_Builder alloc] init] autorelease];
}
+ (PBOpus_Builder*) builderWithPrototype:(PBOpus*) prototype {
  return [[PBOpus builder] mergeFrom:prototype];
}
- (PBOpus_Builder*) builder {
  return [PBOpus builder];
}
@end

@interface PBOpus_Builder()
@property (retain) PBOpus* result;
@end

@implementation PBOpus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBOpus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBOpus_Builder*) clear {
  self.result = [[[PBOpus alloc] init] autorelease];
  return self;
}
- (PBOpus_Builder*) clone {
  return [PBOpus builderWithPrototype:result];
}
- (PBOpus*) defaultInstance {
  return [PBOpus defaultInstance];
}
- (PBOpus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBOpus*) buildPartial {
  PBOpus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBOpus_Builder*) mergeFrom:(PBOpus*) other {
  if (other == [PBOpus defaultInstance]) {
    return self;
  }
  if (other.hasOpusId) {
    [self setOpusId:other.opusId];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableActionTimesList.count > 0) {
    if (result.mutableActionTimesList == nil) {
      result.mutableActionTimesList = [NSMutableArray array];
    }
    [result.mutableActionTimesList addObjectsFromArray:other.mutableActionTimesList];
  }
  if (other.hasSongInfo) {
    [self mergeSongInfo:other.songInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setOpusId:[input readString]];
        break;
      }
      case 18: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 80: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 202: {
        PBActionTimes_Builder* subBuilder = [PBActionTimes builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addActionTimes:[subBuilder buildPartial]];
        break;
      }
      case 242: {
        PBSongInfo_Builder* subBuilder = [PBSongInfo builder];
        if (self.hasSongInfo) {
          [subBuilder mergeFrom:self.songInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSongInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasOpusId {
  return result.hasOpusId;
}
- (NSString*) opusId {
  return result.opusId;
}
- (PBOpus_Builder*) setOpusId:(NSString*) value {
  result.hasOpusId = YES;
  result.opusId = value;
  return self;
}
- (PBOpus_Builder*) clearOpusId {
  result.hasOpusId = NO;
  result.opusId = @"";
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (PBGameUser*) user {
  return result.user;
}
- (PBOpus_Builder*) setUser:(PBGameUser*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PBOpus_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PBOpus_Builder*) mergeUser:(PBGameUser*) value {
  if (result.hasUser &&
      result.user != [PBGameUser defaultInstance]) {
    result.user =
      [[[PBGameUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PBOpus_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [PBGameUser defaultInstance];
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBOpus_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBOpus_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (PBOpus_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBOpus_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (NSArray*) actionTimesList {
  if (result.mutableActionTimesList == nil) { return [NSArray array]; }
  return result.mutableActionTimesList;
}
- (PBActionTimes*) actionTimesAtIndex:(int32_t) index {
  return [result actionTimesAtIndex:index];
}
- (PBOpus_Builder*) replaceActionTimesAtIndex:(int32_t) index with:(PBActionTimes*) value {
  [result.mutableActionTimesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBOpus_Builder*) addAllActionTimes:(NSArray*) values {
  if (result.mutableActionTimesList == nil) {
    result.mutableActionTimesList = [NSMutableArray array];
  }
  [result.mutableActionTimesList addObjectsFromArray:values];
  return self;
}
- (PBOpus_Builder*) clearActionTimesList {
  result.mutableActionTimesList = nil;
  return self;
}
- (PBOpus_Builder*) addActionTimes:(PBActionTimes*) value {
  if (result.mutableActionTimesList == nil) {
    result.mutableActionTimesList = [NSMutableArray array];
  }
  [result.mutableActionTimesList addObject:value];
  return self;
}
- (BOOL) hasSongInfo {
  return result.hasSongInfo;
}
- (PBSongInfo*) songInfo {
  return result.songInfo;
}
- (PBOpus_Builder*) setSongInfo:(PBSongInfo*) value {
  result.hasSongInfo = YES;
  result.songInfo = value;
  return self;
}
- (PBOpus_Builder*) setSongInfoBuilder:(PBSongInfo_Builder*) builderForValue {
  return [self setSongInfo:[builderForValue build]];
}
- (PBOpus_Builder*) mergeSongInfo:(PBSongInfo*) value {
  if (result.hasSongInfo &&
      result.songInfo != [PBSongInfo defaultInstance]) {
    result.songInfo =
      [[[PBSongInfo builderWithPrototype:result.songInfo] mergeFrom:value] buildPartial];
  } else {
    result.songInfo = value;
  }
  result.hasSongInfo = YES;
  return self;
}
- (PBOpus_Builder*) clearSongInfo {
  result.hasSongInfo = NO;
  result.songInfo = [PBSongInfo defaultInstance];
  return self;
}
@end

@interface PBSourceAction ()
@property (retain) NSString* actionId;
@property (retain) PBUserBasicInfo* userInfo;
@property int32_t type;
@property (retain) NSString* briefComment;
@end

@implementation PBSourceAction

- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value {
  hasActionId_ = !!value;
}
@synthesize actionId;
- (BOOL) hasUserInfo {
  return !!hasUserInfo_;
}
- (void) setHasUserInfo:(BOOL) value {
  hasUserInfo_ = !!value;
}
@synthesize userInfo;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasBriefComment {
  return !!hasBriefComment_;
}
- (void) setHasBriefComment:(BOOL) value {
  hasBriefComment_ = !!value;
}
@synthesize briefComment;
- (void) dealloc {
  self.actionId = nil;
  self.userInfo = nil;
  self.briefComment = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.actionId = @"";
    self.userInfo = [PBUserBasicInfo defaultInstance];
    self.type = 0;
    self.briefComment = @"";
  }
  return self;
}
static PBSourceAction* defaultPBSourceActionInstance = nil;
+ (void) initialize {
  if (self == [PBSourceAction class]) {
    defaultPBSourceActionInstance = [[PBSourceAction alloc] init];
  }
}
+ (PBSourceAction*) defaultInstance {
  return defaultPBSourceActionInstance;
}
- (PBSourceAction*) defaultInstance {
  return defaultPBSourceActionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasActionId) {
    return NO;
  }
  if (!self.hasUserInfo) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.userInfo.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasActionId) {
    [output writeString:1 value:self.actionId];
  }
  if (self.hasUserInfo) {
    [output writeMessage:2 value:self.userInfo];
  }
  if (self.hasType) {
    [output writeInt32:3 value:self.type];
  }
  if (self.hasBriefComment) {
    [output writeString:4 value:self.briefComment];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasActionId) {
    size += computeStringSize(1, self.actionId);
  }
  if (self.hasUserInfo) {
    size += computeMessageSize(2, self.userInfo);
  }
  if (self.hasType) {
    size += computeInt32Size(3, self.type);
  }
  if (self.hasBriefComment) {
    size += computeStringSize(4, self.briefComment);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBSourceAction*) parseFromData:(NSData*) data {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromData:data] build];
}
+ (PBSourceAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBSourceAction*) parseFromInputStream:(NSInputStream*) input {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromInputStream:input] build];
}
+ (PBSourceAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSourceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromCodedInputStream:input] build];
}
+ (PBSourceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSourceAction*)[[[PBSourceAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSourceAction_Builder*) builder {
  return [[[PBSourceAction_Builder alloc] init] autorelease];
}
+ (PBSourceAction_Builder*) builderWithPrototype:(PBSourceAction*) prototype {
  return [[PBSourceAction builder] mergeFrom:prototype];
}
- (PBSourceAction_Builder*) builder {
  return [PBSourceAction builder];
}
@end

@interface PBSourceAction_Builder()
@property (retain) PBSourceAction* result;
@end

@implementation PBSourceAction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBSourceAction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBSourceAction_Builder*) clear {
  self.result = [[[PBSourceAction alloc] init] autorelease];
  return self;
}
- (PBSourceAction_Builder*) clone {
  return [PBSourceAction builderWithPrototype:result];
}
- (PBSourceAction*) defaultInstance {
  return [PBSourceAction defaultInstance];
}
- (PBSourceAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBSourceAction*) buildPartial {
  PBSourceAction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBSourceAction_Builder*) mergeFrom:(PBSourceAction*) other {
  if (other == [PBSourceAction defaultInstance]) {
    return self;
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasUserInfo) {
    [self mergeUserInfo:other.userInfo];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasBriefComment) {
    [self setBriefComment:other.briefComment];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBSourceAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBSourceAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setActionId:[input readString]];
        break;
      }
      case 18: {
        PBUserBasicInfo_Builder* subBuilder = [PBUserBasicInfo builder];
        if (self.hasUserInfo) {
          [subBuilder mergeFrom:self.userInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfo:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setType:[input readInt32]];
        break;
      }
      case 34: {
        [self setBriefComment:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (NSString*) actionId {
  return result.actionId;
}
- (PBSourceAction_Builder*) setActionId:(NSString*) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PBSourceAction_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = @"";
  return self;
}
- (BOOL) hasUserInfo {
  return result.hasUserInfo;
}
- (PBUserBasicInfo*) userInfo {
  return result.userInfo;
}
- (PBSourceAction_Builder*) setUserInfo:(PBUserBasicInfo*) value {
  result.hasUserInfo = YES;
  result.userInfo = value;
  return self;
}
- (PBSourceAction_Builder*) setUserInfoBuilder:(PBUserBasicInfo_Builder*) builderForValue {
  return [self setUserInfo:[builderForValue build]];
}
- (PBSourceAction_Builder*) mergeUserInfo:(PBUserBasicInfo*) value {
  if (result.hasUserInfo &&
      result.userInfo != [PBUserBasicInfo defaultInstance]) {
    result.userInfo =
      [[[PBUserBasicInfo builderWithPrototype:result.userInfo] mergeFrom:value] buildPartial];
  } else {
    result.userInfo = value;
  }
  result.hasUserInfo = YES;
  return self;
}
- (PBSourceAction_Builder*) clearUserInfo {
  result.hasUserInfo = NO;
  result.userInfo = [PBUserBasicInfo defaultInstance];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBSourceAction_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBSourceAction_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasBriefComment {
  return result.hasBriefComment;
}
- (NSString*) briefComment {
  return result.briefComment;
}
- (PBSourceAction_Builder*) setBriefComment:(NSString*) value {
  result.hasBriefComment = YES;
  result.briefComment = value;
  return self;
}
- (PBSourceAction_Builder*) clearBriefComment {
  result.hasBriefComment = NO;
  result.briefComment = @"";
  return self;
}
@end

@interface PBOpusAction ()
@property (retain) NSString* actionId;
@property (retain) NSString* opusId;
@property (retain) PBUserBasicInfo* userInfo;
@property (retain) PBOpus* opus;
@property int32_t createDate;
@property (retain) PBSourceAction* sourceAction;
@property int32_t actionType;
@property (retain) PBActionComment* commentAction;
@property (retain) PBActionFlower* flowerAction;
@property (retain) PBActionGuess* guessAction;
@end

@implementation PBOpusAction

- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value {
  hasActionId_ = !!value;
}
@synthesize actionId;
- (BOOL) hasOpusId {
  return !!hasOpusId_;
}
- (void) setHasOpusId:(BOOL) value {
  hasOpusId_ = !!value;
}
@synthesize opusId;
- (BOOL) hasUserInfo {
  return !!hasUserInfo_;
}
- (void) setHasUserInfo:(BOOL) value {
  hasUserInfo_ = !!value;
}
@synthesize userInfo;
- (BOOL) hasOpus {
  return !!hasOpus_;
}
- (void) setHasOpus:(BOOL) value {
  hasOpus_ = !!value;
}
@synthesize opus;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasSourceAction {
  return !!hasSourceAction_;
}
- (void) setHasSourceAction:(BOOL) value {
  hasSourceAction_ = !!value;
}
@synthesize sourceAction;
- (BOOL) hasActionType {
  return !!hasActionType_;
}
- (void) setHasActionType:(BOOL) value {
  hasActionType_ = !!value;
}
@synthesize actionType;
- (BOOL) hasCommentAction {
  return !!hasCommentAction_;
}
- (void) setHasCommentAction:(BOOL) value {
  hasCommentAction_ = !!value;
}
@synthesize commentAction;
- (BOOL) hasFlowerAction {
  return !!hasFlowerAction_;
}
- (void) setHasFlowerAction:(BOOL) value {
  hasFlowerAction_ = !!value;
}
@synthesize flowerAction;
- (BOOL) hasGuessAction {
  return !!hasGuessAction_;
}
- (void) setHasGuessAction:(BOOL) value {
  hasGuessAction_ = !!value;
}
@synthesize guessAction;
- (void) dealloc {
  self.actionId = nil;
  self.opusId = nil;
  self.userInfo = nil;
  self.opus = nil;
  self.sourceAction = nil;
  self.commentAction = nil;
  self.flowerAction = nil;
  self.guessAction = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.actionId = @"";
    self.opusId = @"";
    self.userInfo = [PBUserBasicInfo defaultInstance];
    self.opus = [PBOpus defaultInstance];
    self.createDate = 0;
    self.sourceAction = [PBSourceAction defaultInstance];
    self.actionType = 0;
    self.commentAction = [PBActionComment defaultInstance];
    self.flowerAction = [PBActionFlower defaultInstance];
    self.guessAction = [PBActionGuess defaultInstance];
  }
  return self;
}
static PBOpusAction* defaultPBOpusActionInstance = nil;
+ (void) initialize {
  if (self == [PBOpusAction class]) {
    defaultPBOpusActionInstance = [[PBOpusAction alloc] init];
  }
}
+ (PBOpusAction*) defaultInstance {
  return defaultPBOpusActionInstance;
}
- (PBOpusAction*) defaultInstance {
  return defaultPBOpusActionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasActionId) {
    return NO;
  }
  if (self.hasUserInfo) {
    if (!self.userInfo.isInitialized) {
      return NO;
    }
  }
  if (self.hasOpus) {
    if (!self.opus.isInitialized) {
      return NO;
    }
  }
  if (self.hasSourceAction) {
    if (!self.sourceAction.isInitialized) {
      return NO;
    }
  }
  if (self.hasFlowerAction) {
    if (!self.flowerAction.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasActionId) {
    [output writeString:1 value:self.actionId];
  }
  if (self.hasUserInfo) {
    [output writeMessage:2 value:self.userInfo];
  }
  if (self.hasActionType) {
    [output writeInt32:3 value:self.actionType];
  }
  if (self.hasCreateDate) {
    [output writeInt32:4 value:self.createDate];
  }
  if (self.hasOpusId) {
    [output writeString:5 value:self.opusId];
  }
  if (self.hasSourceAction) {
    [output writeMessage:6 value:self.sourceAction];
  }
  if (self.hasOpus) {
    [output writeMessage:7 value:self.opus];
  }
  if (self.hasCommentAction) {
    [output writeMessage:10 value:self.commentAction];
  }
  if (self.hasFlowerAction) {
    [output writeMessage:11 value:self.flowerAction];
  }
  if (self.hasGuessAction) {
    [output writeMessage:12 value:self.guessAction];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasActionId) {
    size += computeStringSize(1, self.actionId);
  }
  if (self.hasUserInfo) {
    size += computeMessageSize(2, self.userInfo);
  }
  if (self.hasActionType) {
    size += computeInt32Size(3, self.actionType);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(4, self.createDate);
  }
  if (self.hasOpusId) {
    size += computeStringSize(5, self.opusId);
  }
  if (self.hasSourceAction) {
    size += computeMessageSize(6, self.sourceAction);
  }
  if (self.hasOpus) {
    size += computeMessageSize(7, self.opus);
  }
  if (self.hasCommentAction) {
    size += computeMessageSize(10, self.commentAction);
  }
  if (self.hasFlowerAction) {
    size += computeMessageSize(11, self.flowerAction);
  }
  if (self.hasGuessAction) {
    size += computeMessageSize(12, self.guessAction);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBOpusAction*) parseFromData:(NSData*) data {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromData:data] build];
}
+ (PBOpusAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBOpusAction*) parseFromInputStream:(NSInputStream*) input {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromInputStream:input] build];
}
+ (PBOpusAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpusAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromCodedInputStream:input] build];
}
+ (PBOpusAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpusAction*)[[[PBOpusAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpusAction_Builder*) builder {
  return [[[PBOpusAction_Builder alloc] init] autorelease];
}
+ (PBOpusAction_Builder*) builderWithPrototype:(PBOpusAction*) prototype {
  return [[PBOpusAction builder] mergeFrom:prototype];
}
- (PBOpusAction_Builder*) builder {
  return [PBOpusAction builder];
}
@end

@interface PBOpusAction_Builder()
@property (retain) PBOpusAction* result;
@end

@implementation PBOpusAction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBOpusAction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBOpusAction_Builder*) clear {
  self.result = [[[PBOpusAction alloc] init] autorelease];
  return self;
}
- (PBOpusAction_Builder*) clone {
  return [PBOpusAction builderWithPrototype:result];
}
- (PBOpusAction*) defaultInstance {
  return [PBOpusAction defaultInstance];
}
- (PBOpusAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBOpusAction*) buildPartial {
  PBOpusAction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBOpusAction_Builder*) mergeFrom:(PBOpusAction*) other {
  if (other == [PBOpusAction defaultInstance]) {
    return self;
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasOpusId) {
    [self setOpusId:other.opusId];
  }
  if (other.hasUserInfo) {
    [self mergeUserInfo:other.userInfo];
  }
  if (other.hasOpus) {
    [self mergeOpus:other.opus];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasSourceAction) {
    [self mergeSourceAction:other.sourceAction];
  }
  if (other.hasActionType) {
    [self setActionType:other.actionType];
  }
  if (other.hasCommentAction) {
    [self mergeCommentAction:other.commentAction];
  }
  if (other.hasFlowerAction) {
    [self mergeFlowerAction:other.flowerAction];
  }
  if (other.hasGuessAction) {
    [self mergeGuessAction:other.guessAction];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBOpusAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBOpusAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setActionId:[input readString]];
        break;
      }
      case 18: {
        PBUserBasicInfo_Builder* subBuilder = [PBUserBasicInfo builder];
        if (self.hasUserInfo) {
          [subBuilder mergeFrom:self.userInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfo:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setActionType:[input readInt32]];
        break;
      }
      case 32: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 42: {
        [self setOpusId:[input readString]];
        break;
      }
      case 50: {
        PBSourceAction_Builder* subBuilder = [PBSourceAction builder];
        if (self.hasSourceAction) {
          [subBuilder mergeFrom:self.sourceAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSourceAction:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PBOpus_Builder* subBuilder = [PBOpus builder];
        if (self.hasOpus) {
          [subBuilder mergeFrom:self.opus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOpus:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PBActionComment_Builder* subBuilder = [PBActionComment builder];
        if (self.hasCommentAction) {
          [subBuilder mergeFrom:self.commentAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommentAction:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PBActionFlower_Builder* subBuilder = [PBActionFlower builder];
        if (self.hasFlowerAction) {
          [subBuilder mergeFrom:self.flowerAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFlowerAction:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        PBActionGuess_Builder* subBuilder = [PBActionGuess builder];
        if (self.hasGuessAction) {
          [subBuilder mergeFrom:self.guessAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGuessAction:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (NSString*) actionId {
  return result.actionId;
}
- (PBOpusAction_Builder*) setActionId:(NSString*) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PBOpusAction_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = @"";
  return self;
}
- (BOOL) hasOpusId {
  return result.hasOpusId;
}
- (NSString*) opusId {
  return result.opusId;
}
- (PBOpusAction_Builder*) setOpusId:(NSString*) value {
  result.hasOpusId = YES;
  result.opusId = value;
  return self;
}
- (PBOpusAction_Builder*) clearOpusId {
  result.hasOpusId = NO;
  result.opusId = @"";
  return self;
}
- (BOOL) hasUserInfo {
  return result.hasUserInfo;
}
- (PBUserBasicInfo*) userInfo {
  return result.userInfo;
}
- (PBOpusAction_Builder*) setUserInfo:(PBUserBasicInfo*) value {
  result.hasUserInfo = YES;
  result.userInfo = value;
  return self;
}
- (PBOpusAction_Builder*) setUserInfoBuilder:(PBUserBasicInfo_Builder*) builderForValue {
  return [self setUserInfo:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeUserInfo:(PBUserBasicInfo*) value {
  if (result.hasUserInfo &&
      result.userInfo != [PBUserBasicInfo defaultInstance]) {
    result.userInfo =
      [[[PBUserBasicInfo builderWithPrototype:result.userInfo] mergeFrom:value] buildPartial];
  } else {
    result.userInfo = value;
  }
  result.hasUserInfo = YES;
  return self;
}
- (PBOpusAction_Builder*) clearUserInfo {
  result.hasUserInfo = NO;
  result.userInfo = [PBUserBasicInfo defaultInstance];
  return self;
}
- (BOOL) hasOpus {
  return result.hasOpus;
}
- (PBOpus*) opus {
  return result.opus;
}
- (PBOpusAction_Builder*) setOpus:(PBOpus*) value {
  result.hasOpus = YES;
  result.opus = value;
  return self;
}
- (PBOpusAction_Builder*) setOpusBuilder:(PBOpus_Builder*) builderForValue {
  return [self setOpus:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeOpus:(PBOpus*) value {
  if (result.hasOpus &&
      result.opus != [PBOpus defaultInstance]) {
    result.opus =
      [[[PBOpus builderWithPrototype:result.opus] mergeFrom:value] buildPartial];
  } else {
    result.opus = value;
  }
  result.hasOpus = YES;
  return self;
}
- (PBOpusAction_Builder*) clearOpus {
  result.hasOpus = NO;
  result.opus = [PBOpus defaultInstance];
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBOpusAction_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBOpusAction_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasSourceAction {
  return result.hasSourceAction;
}
- (PBSourceAction*) sourceAction {
  return result.sourceAction;
}
- (PBOpusAction_Builder*) setSourceAction:(PBSourceAction*) value {
  result.hasSourceAction = YES;
  result.sourceAction = value;
  return self;
}
- (PBOpusAction_Builder*) setSourceActionBuilder:(PBSourceAction_Builder*) builderForValue {
  return [self setSourceAction:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeSourceAction:(PBSourceAction*) value {
  if (result.hasSourceAction &&
      result.sourceAction != [PBSourceAction defaultInstance]) {
    result.sourceAction =
      [[[PBSourceAction builderWithPrototype:result.sourceAction] mergeFrom:value] buildPartial];
  } else {
    result.sourceAction = value;
  }
  result.hasSourceAction = YES;
  return self;
}
- (PBOpusAction_Builder*) clearSourceAction {
  result.hasSourceAction = NO;
  result.sourceAction = [PBSourceAction defaultInstance];
  return self;
}
- (BOOL) hasActionType {
  return result.hasActionType;
}
- (int32_t) actionType {
  return result.actionType;
}
- (PBOpusAction_Builder*) setActionType:(int32_t) value {
  result.hasActionType = YES;
  result.actionType = value;
  return self;
}
- (PBOpusAction_Builder*) clearActionType {
  result.hasActionType = NO;
  result.actionType = 0;
  return self;
}
- (BOOL) hasCommentAction {
  return result.hasCommentAction;
}
- (PBActionComment*) commentAction {
  return result.commentAction;
}
- (PBOpusAction_Builder*) setCommentAction:(PBActionComment*) value {
  result.hasCommentAction = YES;
  result.commentAction = value;
  return self;
}
- (PBOpusAction_Builder*) setCommentActionBuilder:(PBActionComment_Builder*) builderForValue {
  return [self setCommentAction:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeCommentAction:(PBActionComment*) value {
  if (result.hasCommentAction &&
      result.commentAction != [PBActionComment defaultInstance]) {
    result.commentAction =
      [[[PBActionComment builderWithPrototype:result.commentAction] mergeFrom:value] buildPartial];
  } else {
    result.commentAction = value;
  }
  result.hasCommentAction = YES;
  return self;
}
- (PBOpusAction_Builder*) clearCommentAction {
  result.hasCommentAction = NO;
  result.commentAction = [PBActionComment defaultInstance];
  return self;
}
- (BOOL) hasFlowerAction {
  return result.hasFlowerAction;
}
- (PBActionFlower*) flowerAction {
  return result.flowerAction;
}
- (PBOpusAction_Builder*) setFlowerAction:(PBActionFlower*) value {
  result.hasFlowerAction = YES;
  result.flowerAction = value;
  return self;
}
- (PBOpusAction_Builder*) setFlowerActionBuilder:(PBActionFlower_Builder*) builderForValue {
  return [self setFlowerAction:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeFlowerAction:(PBActionFlower*) value {
  if (result.hasFlowerAction &&
      result.flowerAction != [PBActionFlower defaultInstance]) {
    result.flowerAction =
      [[[PBActionFlower builderWithPrototype:result.flowerAction] mergeFrom:value] buildPartial];
  } else {
    result.flowerAction = value;
  }
  result.hasFlowerAction = YES;
  return self;
}
- (PBOpusAction_Builder*) clearFlowerAction {
  result.hasFlowerAction = NO;
  result.flowerAction = [PBActionFlower defaultInstance];
  return self;
}
- (BOOL) hasGuessAction {
  return result.hasGuessAction;
}
- (PBActionGuess*) guessAction {
  return result.guessAction;
}
- (PBOpusAction_Builder*) setGuessAction:(PBActionGuess*) value {
  result.hasGuessAction = YES;
  result.guessAction = value;
  return self;
}
- (PBOpusAction_Builder*) setGuessActionBuilder:(PBActionGuess_Builder*) builderForValue {
  return [self setGuessAction:[builderForValue build]];
}
- (PBOpusAction_Builder*) mergeGuessAction:(PBActionGuess*) value {
  if (result.hasGuessAction &&
      result.guessAction != [PBActionGuess defaultInstance]) {
    result.guessAction =
      [[[PBActionGuess builderWithPrototype:result.guessAction] mergeFrom:value] buildPartial];
  } else {
    result.guessAction = value;
  }
  result.hasGuessAction = YES;
  return self;
}
- (PBOpusAction_Builder*) clearGuessAction {
  result.hasGuessAction = NO;
  result.guessAction = [PBActionGuess defaultInstance];
  return self;
}
@end

@interface PBActionComment ()
@property (retain) NSString* content;
@end

@implementation PBActionComment

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.content = @"";
  }
  return self;
}
static PBActionComment* defaultPBActionCommentInstance = nil;
+ (void) initialize {
  if (self == [PBActionComment class]) {
    defaultPBActionCommentInstance = [[PBActionComment alloc] init];
  }
}
+ (PBActionComment*) defaultInstance {
  return defaultPBActionCommentInstance;
}
- (PBActionComment*) defaultInstance {
  return defaultPBActionCommentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasContent) {
    size += computeStringSize(1, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBActionComment*) parseFromData:(NSData*) data {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromData:data] build];
}
+ (PBActionComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBActionComment*) parseFromInputStream:(NSInputStream*) input {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromInputStream:input] build];
}
+ (PBActionComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromCodedInputStream:input] build];
}
+ (PBActionComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionComment*)[[[PBActionComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionComment_Builder*) builder {
  return [[[PBActionComment_Builder alloc] init] autorelease];
}
+ (PBActionComment_Builder*) builderWithPrototype:(PBActionComment*) prototype {
  return [[PBActionComment builder] mergeFrom:prototype];
}
- (PBActionComment_Builder*) builder {
  return [PBActionComment builder];
}
@end

@interface PBActionComment_Builder()
@property (retain) PBActionComment* result;
@end

@implementation PBActionComment_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBActionComment alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBActionComment_Builder*) clear {
  self.result = [[[PBActionComment alloc] init] autorelease];
  return self;
}
- (PBActionComment_Builder*) clone {
  return [PBActionComment builderWithPrototype:result];
}
- (PBActionComment*) defaultInstance {
  return [PBActionComment defaultInstance];
}
- (PBActionComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBActionComment*) buildPartial {
  PBActionComment* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBActionComment_Builder*) mergeFrom:(PBActionComment*) other {
  if (other == [PBActionComment defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBActionComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBActionComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PBActionComment_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBActionComment_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

@interface PBActionFlower ()
@property int32_t type;
@end

@implementation PBActionFlower

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
  }
  return self;
}
static PBActionFlower* defaultPBActionFlowerInstance = nil;
+ (void) initialize {
  if (self == [PBActionFlower class]) {
    defaultPBActionFlowerInstance = [[PBActionFlower alloc] init];
  }
}
+ (PBActionFlower*) defaultInstance {
  return defaultPBActionFlowerInstance;
}
- (PBActionFlower*) defaultInstance {
  return defaultPBActionFlowerInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeInt32Size(1, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBActionFlower*) parseFromData:(NSData*) data {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromData:data] build];
}
+ (PBActionFlower*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBActionFlower*) parseFromInputStream:(NSInputStream*) input {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromInputStream:input] build];
}
+ (PBActionFlower*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionFlower*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromCodedInputStream:input] build];
}
+ (PBActionFlower*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionFlower*)[[[PBActionFlower builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionFlower_Builder*) builder {
  return [[[PBActionFlower_Builder alloc] init] autorelease];
}
+ (PBActionFlower_Builder*) builderWithPrototype:(PBActionFlower*) prototype {
  return [[PBActionFlower builder] mergeFrom:prototype];
}
- (PBActionFlower_Builder*) builder {
  return [PBActionFlower builder];
}
@end

@interface PBActionFlower_Builder()
@property (retain) PBActionFlower* result;
@end

@implementation PBActionFlower_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBActionFlower alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBActionFlower_Builder*) clear {
  self.result = [[[PBActionFlower alloc] init] autorelease];
  return self;
}
- (PBActionFlower_Builder*) clone {
  return [PBActionFlower builderWithPrototype:result];
}
- (PBActionFlower*) defaultInstance {
  return [PBActionFlower defaultInstance];
}
- (PBActionFlower*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBActionFlower*) buildPartial {
  PBActionFlower* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBActionFlower_Builder*) mergeFrom:(PBActionFlower*) other {
  if (other == [PBActionFlower defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBActionFlower_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBActionFlower_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBActionFlower_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBActionFlower_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
@end

@interface PBActionGuess ()
@property (retain) NSMutableArray* mutableWordsList;
@property BOOL correct;
@end

@implementation PBActionGuess

@synthesize mutableWordsList;
- (BOOL) hasCorrect {
  return !!hasCorrect_;
}
- (void) setHasCorrect:(BOOL) value {
  hasCorrect_ = !!value;
}
- (BOOL) correct {
  return !!correct_;
}
- (void) setCorrect:(BOOL) value {
  correct_ = !!value;
}
- (void) dealloc {
  self.mutableWordsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.correct = NO;
  }
  return self;
}
static PBActionGuess* defaultPBActionGuessInstance = nil;
+ (void) initialize {
  if (self == [PBActionGuess class]) {
    defaultPBActionGuessInstance = [[PBActionGuess alloc] init];
  }
}
+ (PBActionGuess*) defaultInstance {
  return defaultPBActionGuessInstance;
}
- (PBActionGuess*) defaultInstance {
  return defaultPBActionGuessInstance;
}
- (NSArray*) wordsList {
  return mutableWordsList;
}
- (NSString*) wordsAtIndex:(int32_t) index {
  id value = [mutableWordsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSString* element in self.mutableWordsList) {
    [output writeString:1 value:element];
  }
  if (self.hasCorrect) {
    [output writeBool:2 value:self.correct];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableWordsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableWordsList.count;
  }
  if (self.hasCorrect) {
    size += computeBoolSize(2, self.correct);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBActionGuess*) parseFromData:(NSData*) data {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromData:data] build];
}
+ (PBActionGuess*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBActionGuess*) parseFromInputStream:(NSInputStream*) input {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromInputStream:input] build];
}
+ (PBActionGuess*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromCodedInputStream:input] build];
}
+ (PBActionGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActionGuess*)[[[PBActionGuess builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActionGuess_Builder*) builder {
  return [[[PBActionGuess_Builder alloc] init] autorelease];
}
+ (PBActionGuess_Builder*) builderWithPrototype:(PBActionGuess*) prototype {
  return [[PBActionGuess builder] mergeFrom:prototype];
}
- (PBActionGuess_Builder*) builder {
  return [PBActionGuess builder];
}
@end

@interface PBActionGuess_Builder()
@property (retain) PBActionGuess* result;
@end

@implementation PBActionGuess_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBActionGuess alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBActionGuess_Builder*) clear {
  self.result = [[[PBActionGuess alloc] init] autorelease];
  return self;
}
- (PBActionGuess_Builder*) clone {
  return [PBActionGuess builderWithPrototype:result];
}
- (PBActionGuess*) defaultInstance {
  return [PBActionGuess defaultInstance];
}
- (PBActionGuess*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBActionGuess*) buildPartial {
  PBActionGuess* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBActionGuess_Builder*) mergeFrom:(PBActionGuess*) other {
  if (other == [PBActionGuess defaultInstance]) {
    return self;
  }
  if (other.mutableWordsList.count > 0) {
    if (result.mutableWordsList == nil) {
      result.mutableWordsList = [NSMutableArray array];
    }
    [result.mutableWordsList addObjectsFromArray:other.mutableWordsList];
  }
  if (other.hasCorrect) {
    [self setCorrect:other.correct];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBActionGuess_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBActionGuess_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addWords:[input readString]];
        break;
      }
      case 16: {
        [self setCorrect:[input readBool]];
        break;
      }
    }
  }
}
- (NSArray*) wordsList {
  if (result.mutableWordsList == nil) {
    return [NSArray array];
  }
  return result.mutableWordsList;
}
- (NSString*) wordsAtIndex:(int32_t) index {
  return [result wordsAtIndex:index];
}
- (PBActionGuess_Builder*) replaceWordsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableWordsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBActionGuess_Builder*) addWords:(NSString*) value {
  if (result.mutableWordsList == nil) {
    result.mutableWordsList = [NSMutableArray array];
  }
  [result.mutableWordsList addObject:value];
  return self;
}
- (PBActionGuess_Builder*) addAllWords:(NSArray*) values {
  if (result.mutableWordsList == nil) {
    result.mutableWordsList = [NSMutableArray array];
  }
  [result.mutableWordsList addObjectsFromArray:values];
  return self;
}
- (PBActionGuess_Builder*) clearWordsList {
  result.mutableWordsList = nil;
  return self;
}
- (BOOL) hasCorrect {
  return result.hasCorrect;
}
- (BOOL) correct {
  return result.correct;
}
- (PBActionGuess_Builder*) setCorrect:(BOOL) value {
  result.hasCorrect = YES;
  result.correct = value;
  return self;
}
- (PBActionGuess_Builder*) clearCorrect {
  result.hasCorrect = NO;
  result.correct = NO;
  return self;
}
@end

@interface PBTimeline ()
@property (retain) PBOpus* opus;
@property (retain) PBOpusAction* action;
@end

@implementation PBTimeline

- (BOOL) hasOpus {
  return !!hasOpus_;
}
- (void) setHasOpus:(BOOL) value {
  hasOpus_ = !!value;
}
@synthesize opus;
- (BOOL) hasAction {
  return !!hasAction_;
}
- (void) setHasAction:(BOOL) value {
  hasAction_ = !!value;
}
@synthesize action;
- (void) dealloc {
  self.opus = nil;
  self.action = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.opus = [PBOpus defaultInstance];
    self.action = [PBOpusAction defaultInstance];
  }
  return self;
}
static PBTimeline* defaultPBTimelineInstance = nil;
+ (void) initialize {
  if (self == [PBTimeline class]) {
    defaultPBTimelineInstance = [[PBTimeline alloc] init];
  }
}
+ (PBTimeline*) defaultInstance {
  return defaultPBTimelineInstance;
}
- (PBTimeline*) defaultInstance {
  return defaultPBTimelineInstance;
}
- (BOOL) isInitialized {
  if (self.hasOpus) {
    if (!self.opus.isInitialized) {
      return NO;
    }
  }
  if (self.hasAction) {
    if (!self.action.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOpus) {
    [output writeMessage:1 value:self.opus];
  }
  if (self.hasAction) {
    [output writeMessage:2 value:self.action];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOpus) {
    size += computeMessageSize(1, self.opus);
  }
  if (self.hasAction) {
    size += computeMessageSize(2, self.action);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBTimeline*) parseFromData:(NSData*) data {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromData:data] build];
}
+ (PBTimeline*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBTimeline*) parseFromInputStream:(NSInputStream*) input {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromInputStream:input] build];
}
+ (PBTimeline*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBTimeline*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromCodedInputStream:input] build];
}
+ (PBTimeline*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBTimeline*)[[[PBTimeline builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBTimeline_Builder*) builder {
  return [[[PBTimeline_Builder alloc] init] autorelease];
}
+ (PBTimeline_Builder*) builderWithPrototype:(PBTimeline*) prototype {
  return [[PBTimeline builder] mergeFrom:prototype];
}
- (PBTimeline_Builder*) builder {
  return [PBTimeline builder];
}
@end

@interface PBTimeline_Builder()
@property (retain) PBTimeline* result;
@end

@implementation PBTimeline_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBTimeline alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBTimeline_Builder*) clear {
  self.result = [[[PBTimeline alloc] init] autorelease];
  return self;
}
- (PBTimeline_Builder*) clone {
  return [PBTimeline builderWithPrototype:result];
}
- (PBTimeline*) defaultInstance {
  return [PBTimeline defaultInstance];
}
- (PBTimeline*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBTimeline*) buildPartial {
  PBTimeline* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBTimeline_Builder*) mergeFrom:(PBTimeline*) other {
  if (other == [PBTimeline defaultInstance]) {
    return self;
  }
  if (other.hasOpus) {
    [self mergeOpus:other.opus];
  }
  if (other.hasAction) {
    [self mergeAction:other.action];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBTimeline_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBTimeline_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBOpus_Builder* subBuilder = [PBOpus builder];
        if (self.hasOpus) {
          [subBuilder mergeFrom:self.opus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOpus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBOpusAction_Builder* subBuilder = [PBOpusAction builder];
        if (self.hasAction) {
          [subBuilder mergeFrom:self.action];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAction:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasOpus {
  return result.hasOpus;
}
- (PBOpus*) opus {
  return result.opus;
}
- (PBTimeline_Builder*) setOpus:(PBOpus*) value {
  result.hasOpus = YES;
  result.opus = value;
  return self;
}
- (PBTimeline_Builder*) setOpusBuilder:(PBOpus_Builder*) builderForValue {
  return [self setOpus:[builderForValue build]];
}
- (PBTimeline_Builder*) mergeOpus:(PBOpus*) value {
  if (result.hasOpus &&
      result.opus != [PBOpus defaultInstance]) {
    result.opus =
      [[[PBOpus builderWithPrototype:result.opus] mergeFrom:value] buildPartial];
  } else {
    result.opus = value;
  }
  result.hasOpus = YES;
  return self;
}
- (PBTimeline_Builder*) clearOpus {
  result.hasOpus = NO;
  result.opus = [PBOpus defaultInstance];
  return self;
}
- (BOOL) hasAction {
  return result.hasAction;
}
- (PBOpusAction*) action {
  return result.action;
}
- (PBTimeline_Builder*) setAction:(PBOpusAction*) value {
  result.hasAction = YES;
  result.action = value;
  return self;
}
- (PBTimeline_Builder*) setActionBuilder:(PBOpusAction_Builder*) builderForValue {
  return [self setAction:[builderForValue build]];
}
- (PBTimeline_Builder*) mergeAction:(PBOpusAction*) value {
  if (result.hasAction &&
      result.action != [PBOpusAction defaultInstance]) {
    result.action =
      [[[PBOpusAction builderWithPrototype:result.action] mergeFrom:value] buildPartial];
  } else {
    result.action = value;
  }
  result.hasAction = YES;
  return self;
}
- (PBTimeline_Builder*) clearAction {
  result.hasAction = NO;
  result.action = [PBOpusAction defaultInstance];
  return self;
}
@end

