// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Bbs.pb.h"

@implementation BbsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BbsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GameBasicRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBBBSUser ()
@property (retain) NSString* userId;
@property (retain) NSString* nickName;
@property (retain) NSString* avatar;
@property BOOL gender;
@end

@implementation PBBBSUser

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value {
  hasNickName_ = !!value;
}
@synthesize nickName;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) value {
  hasAvatar_ = !!value;
}
@synthesize avatar;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value {
  hasGender_ = !!value;
}
- (BOOL) gender {
  return !!gender_;
}
- (void) setGender:(BOOL) value {
  gender_ = !!value;
}
- (void) dealloc {
  self.userId = nil;
  self.nickName = nil;
  self.avatar = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.nickName = @"";
    self.avatar = @"";
    self.gender = NO;
  }
  return self;
}
static PBBBSUser* defaultPBBBSUserInstance = nil;
+ (void) initialize {
  if (self == [PBBBSUser class]) {
    defaultPBBBSUserInstance = [[PBBBSUser alloc] init];
  }
}
+ (PBBBSUser*) defaultInstance {
  return defaultPBBBSUserInstance;
}
- (PBBBSUser*) defaultInstance {
  return defaultPBBBSUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  if (self.hasAvatar) {
    [output writeString:3 value:self.avatar];
  }
  if (self.hasGender) {
    [output writeBool:4 value:self.gender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeStringSize(1, self.userId);
  }
  if (self.hasNickName) {
    size += computeStringSize(2, self.nickName);
  }
  if (self.hasAvatar) {
    size += computeStringSize(3, self.avatar);
  }
  if (self.hasGender) {
    size += computeBoolSize(4, self.gender);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBBBSUser*) parseFromData:(NSData*) data {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromData:data] build];
}
+ (PBBBSUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBBBSUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromInputStream:input] build];
}
+ (PBBBSUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBBBSUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSUser*)[[[PBBBSUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSUser_Builder*) builder {
  return [[[PBBBSUser_Builder alloc] init] autorelease];
}
+ (PBBBSUser_Builder*) builderWithPrototype:(PBBBSUser*) prototype {
  return [[PBBBSUser builder] mergeFrom:prototype];
}
- (PBBBSUser_Builder*) builder {
  return [PBBBSUser builder];
}
@end

@interface PBBBSUser_Builder()
@property (retain) PBBBSUser* result;
@end

@implementation PBBBSUser_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBBBSUser alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBBBSUser_Builder*) clear {
  self.result = [[[PBBBSUser alloc] init] autorelease];
  return self;
}
- (PBBBSUser_Builder*) clone {
  return [PBBBSUser builderWithPrototype:result];
}
- (PBBBSUser*) defaultInstance {
  return [PBBBSUser defaultInstance];
}
- (PBBBSUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBBBSUser*) buildPartial {
  PBBBSUser* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBBBSUser_Builder*) mergeFrom:(PBBBSUser*) other {
  if (other == [PBBBSUser defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBBBSUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBBBSUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
      case 26: {
        [self setAvatar:[input readString]];
        break;
      }
      case 32: {
        [self setGender:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (PBBBSUser_Builder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (PBBBSUser_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (PBBBSUser_Builder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (PBBBSUser_Builder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
- (BOOL) hasAvatar {
  return result.hasAvatar;
}
- (NSString*) avatar {
  return result.avatar;
}
- (PBBBSUser_Builder*) setAvatar:(NSString*) value {
  result.hasAvatar = YES;
  result.avatar = value;
  return self;
}
- (PBBBSUser_Builder*) clearAvatar {
  result.hasAvatar = NO;
  result.avatar = @"";
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (BOOL) gender {
  return result.gender;
}
- (PBBBSUser_Builder*) setGender:(BOOL) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (PBBBSUser_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = NO;
  return self;
}
@end

@interface PBBBSContent ()
@property int32_t type;
@property (retain) NSString* text;
@property (retain) NSString* thumbImageUrl;
@property (retain) NSString* imageUrl;
@property (retain) NSString* drawThumbUrl;
@property (retain) NSString* drawImageUrl;
@property (retain) NSMutableArray* mutableDrawActionListList;
@end

@implementation PBBBSContent

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) value {
  hasText_ = !!value;
}
@synthesize text;
- (BOOL) hasThumbImageUrl {
  return !!hasThumbImageUrl_;
}
- (void) setHasThumbImageUrl:(BOOL) value {
  hasThumbImageUrl_ = !!value;
}
@synthesize thumbImageUrl;
- (BOOL) hasImageUrl {
  return !!hasImageUrl_;
}
- (void) setHasImageUrl:(BOOL) value {
  hasImageUrl_ = !!value;
}
@synthesize imageUrl;
- (BOOL) hasDrawThumbUrl {
  return !!hasDrawThumbUrl_;
}
- (void) setHasDrawThumbUrl:(BOOL) value {
  hasDrawThumbUrl_ = !!value;
}
@synthesize drawThumbUrl;
- (BOOL) hasDrawImageUrl {
  return !!hasDrawImageUrl_;
}
- (void) setHasDrawImageUrl:(BOOL) value {
  hasDrawImageUrl_ = !!value;
}
@synthesize drawImageUrl;
@synthesize mutableDrawActionListList;
- (void) dealloc {
  self.text = nil;
  self.thumbImageUrl = nil;
  self.imageUrl = nil;
  self.drawThumbUrl = nil;
  self.drawImageUrl = nil;
  self.mutableDrawActionListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.text = @"";
    self.thumbImageUrl = @"";
    self.imageUrl = @"";
    self.drawThumbUrl = @"";
    self.drawImageUrl = @"";
  }
  return self;
}
static PBBBSContent* defaultPBBBSContentInstance = nil;
+ (void) initialize {
  if (self == [PBBBSContent class]) {
    defaultPBBBSContentInstance = [[PBBBSContent alloc] init];
  }
}
+ (PBBBSContent*) defaultInstance {
  return defaultPBBBSContentInstance;
}
- (PBBBSContent*) defaultInstance {
  return defaultPBBBSContentInstance;
}
- (NSArray*) drawActionListList {
  return mutableDrawActionListList;
}
- (PBDrawAction*) drawActionListAtIndex:(int32_t) index {
  id value = [mutableDrawActionListList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  for (PBDrawAction* element in self.drawActionListList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasText) {
    [output writeString:2 value:self.text];
  }
  if (self.hasThumbImageUrl) {
    [output writeString:10 value:self.thumbImageUrl];
  }
  if (self.hasImageUrl) {
    [output writeString:11 value:self.imageUrl];
  }
  if (self.hasDrawThumbUrl) {
    [output writeString:20 value:self.drawThumbUrl];
  }
  if (self.hasDrawImageUrl) {
    [output writeString:21 value:self.drawImageUrl];
  }
  for (PBDrawAction* element in self.drawActionListList) {
    [output writeMessage:22 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeInt32Size(1, self.type);
  }
  if (self.hasText) {
    size += computeStringSize(2, self.text);
  }
  if (self.hasThumbImageUrl) {
    size += computeStringSize(10, self.thumbImageUrl);
  }
  if (self.hasImageUrl) {
    size += computeStringSize(11, self.imageUrl);
  }
  if (self.hasDrawThumbUrl) {
    size += computeStringSize(20, self.drawThumbUrl);
  }
  if (self.hasDrawImageUrl) {
    size += computeStringSize(21, self.drawImageUrl);
  }
  for (PBDrawAction* element in self.drawActionListList) {
    size += computeMessageSize(22, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBBBSContent*) parseFromData:(NSData*) data {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromData:data] build];
}
+ (PBBBSContent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBBBSContent*) parseFromInputStream:(NSInputStream*) input {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromInputStream:input] build];
}
+ (PBBBSContent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSContent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromCodedInputStream:input] build];
}
+ (PBBBSContent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSContent*)[[[PBBBSContent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSContent_Builder*) builder {
  return [[[PBBBSContent_Builder alloc] init] autorelease];
}
+ (PBBBSContent_Builder*) builderWithPrototype:(PBBBSContent*) prototype {
  return [[PBBBSContent builder] mergeFrom:prototype];
}
- (PBBBSContent_Builder*) builder {
  return [PBBBSContent builder];
}
@end

@interface PBBBSContent_Builder()
@property (retain) PBBBSContent* result;
@end

@implementation PBBBSContent_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBBBSContent alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBBBSContent_Builder*) clear {
  self.result = [[[PBBBSContent alloc] init] autorelease];
  return self;
}
- (PBBBSContent_Builder*) clone {
  return [PBBBSContent builderWithPrototype:result];
}
- (PBBBSContent*) defaultInstance {
  return [PBBBSContent defaultInstance];
}
- (PBBBSContent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBBBSContent*) buildPartial {
  PBBBSContent* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBBBSContent_Builder*) mergeFrom:(PBBBSContent*) other {
  if (other == [PBBBSContent defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  if (other.hasThumbImageUrl) {
    [self setThumbImageUrl:other.thumbImageUrl];
  }
  if (other.hasImageUrl) {
    [self setImageUrl:other.imageUrl];
  }
  if (other.hasDrawThumbUrl) {
    [self setDrawThumbUrl:other.drawThumbUrl];
  }
  if (other.hasDrawImageUrl) {
    [self setDrawImageUrl:other.drawImageUrl];
  }
  if (other.mutableDrawActionListList.count > 0) {
    if (result.mutableDrawActionListList == nil) {
      result.mutableDrawActionListList = [NSMutableArray array];
    }
    [result.mutableDrawActionListList addObjectsFromArray:other.mutableDrawActionListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBBBSContent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBBBSContent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 18: {
        [self setText:[input readString]];
        break;
      }
      case 82: {
        [self setThumbImageUrl:[input readString]];
        break;
      }
      case 90: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 162: {
        [self setDrawThumbUrl:[input readString]];
        break;
      }
      case 170: {
        [self setDrawImageUrl:[input readString]];
        break;
      }
      case 178: {
        PBDrawAction_Builder* subBuilder = [PBDrawAction builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDrawActionList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBBBSContent_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBBBSContent_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasText {
  return result.hasText;
}
- (NSString*) text {
  return result.text;
}
- (PBBBSContent_Builder*) setText:(NSString*) value {
  result.hasText = YES;
  result.text = value;
  return self;
}
- (PBBBSContent_Builder*) clearText {
  result.hasText = NO;
  result.text = @"";
  return self;
}
- (BOOL) hasThumbImageUrl {
  return result.hasThumbImageUrl;
}
- (NSString*) thumbImageUrl {
  return result.thumbImageUrl;
}
- (PBBBSContent_Builder*) setThumbImageUrl:(NSString*) value {
  result.hasThumbImageUrl = YES;
  result.thumbImageUrl = value;
  return self;
}
- (PBBBSContent_Builder*) clearThumbImageUrl {
  result.hasThumbImageUrl = NO;
  result.thumbImageUrl = @"";
  return self;
}
- (BOOL) hasImageUrl {
  return result.hasImageUrl;
}
- (NSString*) imageUrl {
  return result.imageUrl;
}
- (PBBBSContent_Builder*) setImageUrl:(NSString*) value {
  result.hasImageUrl = YES;
  result.imageUrl = value;
  return self;
}
- (PBBBSContent_Builder*) clearImageUrl {
  result.hasImageUrl = NO;
  result.imageUrl = @"";
  return self;
}
- (BOOL) hasDrawThumbUrl {
  return result.hasDrawThumbUrl;
}
- (NSString*) drawThumbUrl {
  return result.drawThumbUrl;
}
- (PBBBSContent_Builder*) setDrawThumbUrl:(NSString*) value {
  result.hasDrawThumbUrl = YES;
  result.drawThumbUrl = value;
  return self;
}
- (PBBBSContent_Builder*) clearDrawThumbUrl {
  result.hasDrawThumbUrl = NO;
  result.drawThumbUrl = @"";
  return self;
}
- (BOOL) hasDrawImageUrl {
  return result.hasDrawImageUrl;
}
- (NSString*) drawImageUrl {
  return result.drawImageUrl;
}
- (PBBBSContent_Builder*) setDrawImageUrl:(NSString*) value {
  result.hasDrawImageUrl = YES;
  result.drawImageUrl = value;
  return self;
}
- (PBBBSContent_Builder*) clearDrawImageUrl {
  result.hasDrawImageUrl = NO;
  result.drawImageUrl = @"";
  return self;
}
- (NSArray*) drawActionListList {
  if (result.mutableDrawActionListList == nil) { return [NSArray array]; }
  return result.mutableDrawActionListList;
}
- (PBDrawAction*) drawActionListAtIndex:(int32_t) index {
  return [result drawActionListAtIndex:index];
}
- (PBBBSContent_Builder*) replaceDrawActionListAtIndex:(int32_t) index with:(PBDrawAction*) value {
  [result.mutableDrawActionListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBBBSContent_Builder*) addAllDrawActionList:(NSArray*) values {
  if (result.mutableDrawActionListList == nil) {
    result.mutableDrawActionListList = [NSMutableArray array];
  }
  [result.mutableDrawActionListList addObjectsFromArray:values];
  return self;
}
- (PBBBSContent_Builder*) clearDrawActionListList {
  result.mutableDrawActionListList = nil;
  return self;
}
- (PBBBSContent_Builder*) addDrawActionList:(PBDrawAction*) value {
  if (result.mutableDrawActionListList == nil) {
    result.mutableDrawActionListList = [NSMutableArray array];
  }
  [result.mutableDrawActionListList addObject:value];
  return self;
}
@end

@interface PBBBSPost ()
@property (retain) NSString* postId;
@property (retain) NSString* boardId;
@property (retain) NSString* appId;
@property int32_t deviceType;
@property int32_t replyCount;
@property int32_t supportCount;
@property int32_t createDate;
@property int32_t modifyDate;
@property (retain) PBBBSUser* createUser;
@property (retain) PBBBSContent* content;
@end

@implementation PBBBSPost

- (BOOL) hasPostId {
  return !!hasPostId_;
}
- (void) setHasPostId:(BOOL) value {
  hasPostId_ = !!value;
}
@synthesize postId;
- (BOOL) hasBoardId {
  return !!hasBoardId_;
}
- (void) setHasBoardId:(BOOL) value {
  hasBoardId_ = !!value;
}
@synthesize boardId;
- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) value {
  hasAppId_ = !!value;
}
@synthesize appId;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) value {
  hasDeviceType_ = !!value;
}
@synthesize deviceType;
- (BOOL) hasReplyCount {
  return !!hasReplyCount_;
}
- (void) setHasReplyCount:(BOOL) value {
  hasReplyCount_ = !!value;
}
@synthesize replyCount;
- (BOOL) hasSupportCount {
  return !!hasSupportCount_;
}
- (void) setHasSupportCount:(BOOL) value {
  hasSupportCount_ = !!value;
}
@synthesize supportCount;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasModifyDate {
  return !!hasModifyDate_;
}
- (void) setHasModifyDate:(BOOL) value {
  hasModifyDate_ = !!value;
}
@synthesize modifyDate;
- (BOOL) hasCreateUser {
  return !!hasCreateUser_;
}
- (void) setHasCreateUser:(BOOL) value {
  hasCreateUser_ = !!value;
}
@synthesize createUser;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (void) dealloc {
  self.postId = nil;
  self.boardId = nil;
  self.appId = nil;
  self.createUser = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.postId = @"";
    self.boardId = @"";
    self.appId = @"";
    self.deviceType = 0;
    self.replyCount = 0;
    self.supportCount = 0;
    self.createDate = 0;
    self.modifyDate = 0;
    self.createUser = [PBBBSUser defaultInstance];
    self.content = [PBBBSContent defaultInstance];
  }
  return self;
}
static PBBBSPost* defaultPBBBSPostInstance = nil;
+ (void) initialize {
  if (self == [PBBBSPost class]) {
    defaultPBBBSPostInstance = [[PBBBSPost alloc] init];
  }
}
+ (PBBBSPost*) defaultInstance {
  return defaultPBBBSPostInstance;
}
- (PBBBSPost*) defaultInstance {
  return defaultPBBBSPostInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPostId) {
    return NO;
  }
  if (!self.hasBoardId) {
    return NO;
  }
  if (!self.hasAppId) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  if (!self.hasReplyCount) {
    return NO;
  }
  if (!self.hasSupportCount) {
    return NO;
  }
  if (!self.hasCreateDate) {
    return NO;
  }
  if (!self.hasModifyDate) {
    return NO;
  }
  if (!self.hasCreateUser) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.createUser.isInitialized) {
    return NO;
  }
  if (!self.content.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPostId) {
    [output writeString:1 value:self.postId];
  }
  if (self.hasBoardId) {
    [output writeString:2 value:self.boardId];
  }
  if (self.hasAppId) {
    [output writeString:3 value:self.appId];
  }
  if (self.hasDeviceType) {
    [output writeInt32:4 value:self.deviceType];
  }
  if (self.hasReplyCount) {
    [output writeInt32:5 value:self.replyCount];
  }
  if (self.hasSupportCount) {
    [output writeInt32:6 value:self.supportCount];
  }
  if (self.hasCreateDate) {
    [output writeInt32:7 value:self.createDate];
  }
  if (self.hasModifyDate) {
    [output writeInt32:8 value:self.modifyDate];
  }
  if (self.hasCreateUser) {
    [output writeMessage:9 value:self.createUser];
  }
  if (self.hasContent) {
    [output writeMessage:10 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPostId) {
    size += computeStringSize(1, self.postId);
  }
  if (self.hasBoardId) {
    size += computeStringSize(2, self.boardId);
  }
  if (self.hasAppId) {
    size += computeStringSize(3, self.appId);
  }
  if (self.hasDeviceType) {
    size += computeInt32Size(4, self.deviceType);
  }
  if (self.hasReplyCount) {
    size += computeInt32Size(5, self.replyCount);
  }
  if (self.hasSupportCount) {
    size += computeInt32Size(6, self.supportCount);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(7, self.createDate);
  }
  if (self.hasModifyDate) {
    size += computeInt32Size(8, self.modifyDate);
  }
  if (self.hasCreateUser) {
    size += computeMessageSize(9, self.createUser);
  }
  if (self.hasContent) {
    size += computeMessageSize(10, self.content);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBBBSPost*) parseFromData:(NSData*) data {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromData:data] build];
}
+ (PBBBSPost*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBBBSPost*) parseFromInputStream:(NSInputStream*) input {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromInputStream:input] build];
}
+ (PBBBSPost*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSPost*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromCodedInputStream:input] build];
}
+ (PBBBSPost*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSPost*)[[[PBBBSPost builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSPost_Builder*) builder {
  return [[[PBBBSPost_Builder alloc] init] autorelease];
}
+ (PBBBSPost_Builder*) builderWithPrototype:(PBBBSPost*) prototype {
  return [[PBBBSPost builder] mergeFrom:prototype];
}
- (PBBBSPost_Builder*) builder {
  return [PBBBSPost builder];
}
@end

@interface PBBBSPost_Builder()
@property (retain) PBBBSPost* result;
@end

@implementation PBBBSPost_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBBBSPost alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBBBSPost_Builder*) clear {
  self.result = [[[PBBBSPost alloc] init] autorelease];
  return self;
}
- (PBBBSPost_Builder*) clone {
  return [PBBBSPost builderWithPrototype:result];
}
- (PBBBSPost*) defaultInstance {
  return [PBBBSPost defaultInstance];
}
- (PBBBSPost*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBBBSPost*) buildPartial {
  PBBBSPost* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBBBSPost_Builder*) mergeFrom:(PBBBSPost*) other {
  if (other == [PBBBSPost defaultInstance]) {
    return self;
  }
  if (other.hasPostId) {
    [self setPostId:other.postId];
  }
  if (other.hasBoardId) {
    [self setBoardId:other.boardId];
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasReplyCount) {
    [self setReplyCount:other.replyCount];
  }
  if (other.hasSupportCount) {
    [self setSupportCount:other.supportCount];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasModifyDate) {
    [self setModifyDate:other.modifyDate];
  }
  if (other.hasCreateUser) {
    [self mergeCreateUser:other.createUser];
  }
  if (other.hasContent) {
    [self mergeContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBBBSPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBBBSPost_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPostId:[input readString]];
        break;
      }
      case 18: {
        [self setBoardId:[input readString]];
        break;
      }
      case 26: {
        [self setAppId:[input readString]];
        break;
      }
      case 32: {
        [self setDeviceType:[input readInt32]];
        break;
      }
      case 40: {
        [self setReplyCount:[input readInt32]];
        break;
      }
      case 48: {
        [self setSupportCount:[input readInt32]];
        break;
      }
      case 56: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 64: {
        [self setModifyDate:[input readInt32]];
        break;
      }
      case 74: {
        PBBBSUser_Builder* subBuilder = [PBBBSUser builder];
        if (self.hasCreateUser) {
          [subBuilder mergeFrom:self.createUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreateUser:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        PBBBSContent_Builder* subBuilder = [PBBBSContent builder];
        if (self.hasContent) {
          [subBuilder mergeFrom:self.content];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContent:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPostId {
  return result.hasPostId;
}
- (NSString*) postId {
  return result.postId;
}
- (PBBBSPost_Builder*) setPostId:(NSString*) value {
  result.hasPostId = YES;
  result.postId = value;
  return self;
}
- (PBBBSPost_Builder*) clearPostId {
  result.hasPostId = NO;
  result.postId = @"";
  return self;
}
- (BOOL) hasBoardId {
  return result.hasBoardId;
}
- (NSString*) boardId {
  return result.boardId;
}
- (PBBBSPost_Builder*) setBoardId:(NSString*) value {
  result.hasBoardId = YES;
  result.boardId = value;
  return self;
}
- (PBBBSPost_Builder*) clearBoardId {
  result.hasBoardId = NO;
  result.boardId = @"";
  return self;
}
- (BOOL) hasAppId {
  return result.hasAppId;
}
- (NSString*) appId {
  return result.appId;
}
- (PBBBSPost_Builder*) setAppId:(NSString*) value {
  result.hasAppId = YES;
  result.appId = value;
  return self;
}
- (PBBBSPost_Builder*) clearAppId {
  result.hasAppId = NO;
  result.appId = @"";
  return self;
}
- (BOOL) hasDeviceType {
  return result.hasDeviceType;
}
- (int32_t) deviceType {
  return result.deviceType;
}
- (PBBBSPost_Builder*) setDeviceType:(int32_t) value {
  result.hasDeviceType = YES;
  result.deviceType = value;
  return self;
}
- (PBBBSPost_Builder*) clearDeviceType {
  result.hasDeviceType = NO;
  result.deviceType = 0;
  return self;
}
- (BOOL) hasReplyCount {
  return result.hasReplyCount;
}
- (int32_t) replyCount {
  return result.replyCount;
}
- (PBBBSPost_Builder*) setReplyCount:(int32_t) value {
  result.hasReplyCount = YES;
  result.replyCount = value;
  return self;
}
- (PBBBSPost_Builder*) clearReplyCount {
  result.hasReplyCount = NO;
  result.replyCount = 0;
  return self;
}
- (BOOL) hasSupportCount {
  return result.hasSupportCount;
}
- (int32_t) supportCount {
  return result.supportCount;
}
- (PBBBSPost_Builder*) setSupportCount:(int32_t) value {
  result.hasSupportCount = YES;
  result.supportCount = value;
  return self;
}
- (PBBBSPost_Builder*) clearSupportCount {
  result.hasSupportCount = NO;
  result.supportCount = 0;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBBBSPost_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBBBSPost_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasModifyDate {
  return result.hasModifyDate;
}
- (int32_t) modifyDate {
  return result.modifyDate;
}
- (PBBBSPost_Builder*) setModifyDate:(int32_t) value {
  result.hasModifyDate = YES;
  result.modifyDate = value;
  return self;
}
- (PBBBSPost_Builder*) clearModifyDate {
  result.hasModifyDate = NO;
  result.modifyDate = 0;
  return self;
}
- (BOOL) hasCreateUser {
  return result.hasCreateUser;
}
- (PBBBSUser*) createUser {
  return result.createUser;
}
- (PBBBSPost_Builder*) setCreateUser:(PBBBSUser*) value {
  result.hasCreateUser = YES;
  result.createUser = value;
  return self;
}
- (PBBBSPost_Builder*) setCreateUserBuilder:(PBBBSUser_Builder*) builderForValue {
  return [self setCreateUser:[builderForValue build]];
}
- (PBBBSPost_Builder*) mergeCreateUser:(PBBBSUser*) value {
  if (result.hasCreateUser &&
      result.createUser != [PBBBSUser defaultInstance]) {
    result.createUser =
      [[[PBBBSUser builderWithPrototype:result.createUser] mergeFrom:value] buildPartial];
  } else {
    result.createUser = value;
  }
  result.hasCreateUser = YES;
  return self;
}
- (PBBBSPost_Builder*) clearCreateUser {
  result.hasCreateUser = NO;
  result.createUser = [PBBBSUser defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (PBBBSContent*) content {
  return result.content;
}
- (PBBBSPost_Builder*) setContent:(PBBBSContent*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBBBSPost_Builder*) setContentBuilder:(PBBBSContent_Builder*) builderForValue {
  return [self setContent:[builderForValue build]];
}
- (PBBBSPost_Builder*) mergeContent:(PBBBSContent*) value {
  if (result.hasContent &&
      result.content != [PBBBSContent defaultInstance]) {
    result.content =
      [[[PBBBSContent builderWithPrototype:result.content] mergeFrom:value] buildPartial];
  } else {
    result.content = value;
  }
  result.hasContent = YES;
  return self;
}
- (PBBBSPost_Builder*) clearContent {
  result.hasContent = NO;
  result.content = [PBBBSContent defaultInstance];
  return self;
}
@end

@interface PBBBSAction ()
@property (retain) NSString* actionId;
@property int32_t type;
@property (retain) NSString* postId;
@property (retain) NSString* appId;
@property int32_t deviceType;
@property int32_t createDate;
@property (retain) PBBBSUser* createUser;
@property (retain) PBBBSContent* content;
@property (retain) PBBBSUser* sourceUser;
@property (retain) PBBBSContent* sourceContent;
@end

@implementation PBBBSAction

- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value {
  hasActionId_ = !!value;
}
@synthesize actionId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasPostId {
  return !!hasPostId_;
}
- (void) setHasPostId:(BOOL) value {
  hasPostId_ = !!value;
}
@synthesize postId;
- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) value {
  hasAppId_ = !!value;
}
@synthesize appId;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) value {
  hasDeviceType_ = !!value;
}
@synthesize deviceType;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasCreateUser {
  return !!hasCreateUser_;
}
- (void) setHasCreateUser:(BOOL) value {
  hasCreateUser_ = !!value;
}
@synthesize createUser;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasSourceUser {
  return !!hasSourceUser_;
}
- (void) setHasSourceUser:(BOOL) value {
  hasSourceUser_ = !!value;
}
@synthesize sourceUser;
- (BOOL) hasSourceContent {
  return !!hasSourceContent_;
}
- (void) setHasSourceContent:(BOOL) value {
  hasSourceContent_ = !!value;
}
@synthesize sourceContent;
- (void) dealloc {
  self.actionId = nil;
  self.postId = nil;
  self.appId = nil;
  self.createUser = nil;
  self.content = nil;
  self.sourceUser = nil;
  self.sourceContent = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.actionId = @"";
    self.type = 0;
    self.postId = @"";
    self.appId = @"";
    self.deviceType = 0;
    self.createDate = 0;
    self.createUser = [PBBBSUser defaultInstance];
    self.content = [PBBBSContent defaultInstance];
    self.sourceUser = [PBBBSUser defaultInstance];
    self.sourceContent = [PBBBSContent defaultInstance];
  }
  return self;
}
static PBBBSAction* defaultPBBBSActionInstance = nil;
+ (void) initialize {
  if (self == [PBBBSAction class]) {
    defaultPBBBSActionInstance = [[PBBBSAction alloc] init];
  }
}
+ (PBBBSAction*) defaultInstance {
  return defaultPBBBSActionInstance;
}
- (PBBBSAction*) defaultInstance {
  return defaultPBBBSActionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasActionId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasPostId) {
    return NO;
  }
  if (!self.hasAppId) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  if (!self.hasCreateDate) {
    return NO;
  }
  if (!self.hasCreateUser) {
    return NO;
  }
  if (!self.createUser.isInitialized) {
    return NO;
  }
  if (self.hasContent) {
    if (!self.content.isInitialized) {
      return NO;
    }
  }
  if (self.hasSourceUser) {
    if (!self.sourceUser.isInitialized) {
      return NO;
    }
  }
  if (self.hasSourceContent) {
    if (!self.sourceContent.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasActionId) {
    [output writeString:1 value:self.actionId];
  }
  if (self.hasType) {
    [output writeInt32:2 value:self.type];
  }
  if (self.hasPostId) {
    [output writeString:3 value:self.postId];
  }
  if (self.hasAppId) {
    [output writeString:4 value:self.appId];
  }
  if (self.hasDeviceType) {
    [output writeInt32:5 value:self.deviceType];
  }
  if (self.hasCreateDate) {
    [output writeInt32:6 value:self.createDate];
  }
  if (self.hasCreateUser) {
    [output writeMessage:7 value:self.createUser];
  }
  if (self.hasContent) {
    [output writeMessage:8 value:self.content];
  }
  if (self.hasSourceUser) {
    [output writeMessage:20 value:self.sourceUser];
  }
  if (self.hasSourceContent) {
    [output writeMessage:21 value:self.sourceContent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasActionId) {
    size += computeStringSize(1, self.actionId);
  }
  if (self.hasType) {
    size += computeInt32Size(2, self.type);
  }
  if (self.hasPostId) {
    size += computeStringSize(3, self.postId);
  }
  if (self.hasAppId) {
    size += computeStringSize(4, self.appId);
  }
  if (self.hasDeviceType) {
    size += computeInt32Size(5, self.deviceType);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(6, self.createDate);
  }
  if (self.hasCreateUser) {
    size += computeMessageSize(7, self.createUser);
  }
  if (self.hasContent) {
    size += computeMessageSize(8, self.content);
  }
  if (self.hasSourceUser) {
    size += computeMessageSize(20, self.sourceUser);
  }
  if (self.hasSourceContent) {
    size += computeMessageSize(21, self.sourceContent);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBBBSAction*) parseFromData:(NSData*) data {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromData:data] build];
}
+ (PBBBSAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBBBSAction*) parseFromInputStream:(NSInputStream*) input {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromInputStream:input] build];
}
+ (PBBBSAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromCodedInputStream:input] build];
}
+ (PBBBSAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBBSAction*)[[[PBBBSAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBBSAction_Builder*) builder {
  return [[[PBBBSAction_Builder alloc] init] autorelease];
}
+ (PBBBSAction_Builder*) builderWithPrototype:(PBBBSAction*) prototype {
  return [[PBBBSAction builder] mergeFrom:prototype];
}
- (PBBBSAction_Builder*) builder {
  return [PBBBSAction builder];
}
@end

@interface PBBBSAction_Builder()
@property (retain) PBBBSAction* result;
@end

@implementation PBBBSAction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBBBSAction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBBBSAction_Builder*) clear {
  self.result = [[[PBBBSAction alloc] init] autorelease];
  return self;
}
- (PBBBSAction_Builder*) clone {
  return [PBBBSAction builderWithPrototype:result];
}
- (PBBBSAction*) defaultInstance {
  return [PBBBSAction defaultInstance];
}
- (PBBBSAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBBBSAction*) buildPartial {
  PBBBSAction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBBBSAction_Builder*) mergeFrom:(PBBBSAction*) other {
  if (other == [PBBBSAction defaultInstance]) {
    return self;
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasPostId) {
    [self setPostId:other.postId];
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasCreateUser) {
    [self mergeCreateUser:other.createUser];
  }
  if (other.hasContent) {
    [self mergeContent:other.content];
  }
  if (other.hasSourceUser) {
    [self mergeSourceUser:other.sourceUser];
  }
  if (other.hasSourceContent) {
    [self mergeSourceContent:other.sourceContent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBBBSAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBBBSAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setActionId:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readInt32]];
        break;
      }
      case 26: {
        [self setPostId:[input readString]];
        break;
      }
      case 34: {
        [self setAppId:[input readString]];
        break;
      }
      case 40: {
        [self setDeviceType:[input readInt32]];
        break;
      }
      case 48: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 58: {
        PBBBSUser_Builder* subBuilder = [PBBBSUser builder];
        if (self.hasCreateUser) {
          [subBuilder mergeFrom:self.createUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreateUser:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PBBBSContent_Builder* subBuilder = [PBBBSContent builder];
        if (self.hasContent) {
          [subBuilder mergeFrom:self.content];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContent:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        PBBBSUser_Builder* subBuilder = [PBBBSUser builder];
        if (self.hasSourceUser) {
          [subBuilder mergeFrom:self.sourceUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSourceUser:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        PBBBSContent_Builder* subBuilder = [PBBBSContent builder];
        if (self.hasSourceContent) {
          [subBuilder mergeFrom:self.sourceContent];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSourceContent:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (NSString*) actionId {
  return result.actionId;
}
- (PBBBSAction_Builder*) setActionId:(NSString*) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PBBBSAction_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBBBSAction_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBBBSAction_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasPostId {
  return result.hasPostId;
}
- (NSString*) postId {
  return result.postId;
}
- (PBBBSAction_Builder*) setPostId:(NSString*) value {
  result.hasPostId = YES;
  result.postId = value;
  return self;
}
- (PBBBSAction_Builder*) clearPostId {
  result.hasPostId = NO;
  result.postId = @"";
  return self;
}
- (BOOL) hasAppId {
  return result.hasAppId;
}
- (NSString*) appId {
  return result.appId;
}
- (PBBBSAction_Builder*) setAppId:(NSString*) value {
  result.hasAppId = YES;
  result.appId = value;
  return self;
}
- (PBBBSAction_Builder*) clearAppId {
  result.hasAppId = NO;
  result.appId = @"";
  return self;
}
- (BOOL) hasDeviceType {
  return result.hasDeviceType;
}
- (int32_t) deviceType {
  return result.deviceType;
}
- (PBBBSAction_Builder*) setDeviceType:(int32_t) value {
  result.hasDeviceType = YES;
  result.deviceType = value;
  return self;
}
- (PBBBSAction_Builder*) clearDeviceType {
  result.hasDeviceType = NO;
  result.deviceType = 0;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBBBSAction_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBBBSAction_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasCreateUser {
  return result.hasCreateUser;
}
- (PBBBSUser*) createUser {
  return result.createUser;
}
- (PBBBSAction_Builder*) setCreateUser:(PBBBSUser*) value {
  result.hasCreateUser = YES;
  result.createUser = value;
  return self;
}
- (PBBBSAction_Builder*) setCreateUserBuilder:(PBBBSUser_Builder*) builderForValue {
  return [self setCreateUser:[builderForValue build]];
}
- (PBBBSAction_Builder*) mergeCreateUser:(PBBBSUser*) value {
  if (result.hasCreateUser &&
      result.createUser != [PBBBSUser defaultInstance]) {
    result.createUser =
      [[[PBBBSUser builderWithPrototype:result.createUser] mergeFrom:value] buildPartial];
  } else {
    result.createUser = value;
  }
  result.hasCreateUser = YES;
  return self;
}
- (PBBBSAction_Builder*) clearCreateUser {
  result.hasCreateUser = NO;
  result.createUser = [PBBBSUser defaultInstance];
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (PBBBSContent*) content {
  return result.content;
}
- (PBBBSAction_Builder*) setContent:(PBBBSContent*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBBBSAction_Builder*) setContentBuilder:(PBBBSContent_Builder*) builderForValue {
  return [self setContent:[builderForValue build]];
}
- (PBBBSAction_Builder*) mergeContent:(PBBBSContent*) value {
  if (result.hasContent &&
      result.content != [PBBBSContent defaultInstance]) {
    result.content =
      [[[PBBBSContent builderWithPrototype:result.content] mergeFrom:value] buildPartial];
  } else {
    result.content = value;
  }
  result.hasContent = YES;
  return self;
}
- (PBBBSAction_Builder*) clearContent {
  result.hasContent = NO;
  result.content = [PBBBSContent defaultInstance];
  return self;
}
- (BOOL) hasSourceUser {
  return result.hasSourceUser;
}
- (PBBBSUser*) sourceUser {
  return result.sourceUser;
}
- (PBBBSAction_Builder*) setSourceUser:(PBBBSUser*) value {
  result.hasSourceUser = YES;
  result.sourceUser = value;
  return self;
}
- (PBBBSAction_Builder*) setSourceUserBuilder:(PBBBSUser_Builder*) builderForValue {
  return [self setSourceUser:[builderForValue build]];
}
- (PBBBSAction_Builder*) mergeSourceUser:(PBBBSUser*) value {
  if (result.hasSourceUser &&
      result.sourceUser != [PBBBSUser defaultInstance]) {
    result.sourceUser =
      [[[PBBBSUser builderWithPrototype:result.sourceUser] mergeFrom:value] buildPartial];
  } else {
    result.sourceUser = value;
  }
  result.hasSourceUser = YES;
  return self;
}
- (PBBBSAction_Builder*) clearSourceUser {
  result.hasSourceUser = NO;
  result.sourceUser = [PBBBSUser defaultInstance];
  return self;
}
- (BOOL) hasSourceContent {
  return result.hasSourceContent;
}
- (PBBBSContent*) sourceContent {
  return result.sourceContent;
}
- (PBBBSAction_Builder*) setSourceContent:(PBBBSContent*) value {
  result.hasSourceContent = YES;
  result.sourceContent = value;
  return self;
}
- (PBBBSAction_Builder*) setSourceContentBuilder:(PBBBSContent_Builder*) builderForValue {
  return [self setSourceContent:[builderForValue build]];
}
- (PBBBSAction_Builder*) mergeSourceContent:(PBBBSContent*) value {
  if (result.hasSourceContent &&
      result.sourceContent != [PBBBSContent defaultInstance]) {
    result.sourceContent =
      [[[PBBBSContent builderWithPrototype:result.sourceContent] mergeFrom:value] buildPartial];
  } else {
    result.sourceContent = value;
  }
  result.hasSourceContent = YES;
  return self;
}
- (PBBBSAction_Builder*) clearSourceContent {
  result.hasSourceContent = NO;
  result.sourceContent = [PBBBSContent defaultInstance];
  return self;
}
@end

