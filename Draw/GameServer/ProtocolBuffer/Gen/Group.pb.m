// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Group.pb.h"

@implementation GroupRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GroupRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GameConstantsRoot registerAllExtensions:registry];
    [GameBasicRoot registerAllExtensions:registry];
    [BbsRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBGroupUserTypeIsValidValue(PBGroupUserType value) {
  switch (value) {
    case PBGroupUserTypeGroupUserAdmin:
    case PBGroupUserTypeGroupUserMember:
    case PBGroupUserTypeGroupUserGuest:
    case PBGroupUserTypeGroupUserCreator:
    case PBGroupUserTypeGroupUserRequester:
    case PBGroupUserTypeGroupUserInvitee:
    case PBGroupUserTypeGroupGuestInvitee:
      return YES;
    default:
      return NO;
  }
}
@interface PBGroupUser ()
@property (retain) PBGameUser* user;
@property (retain) NSString* customeTitle;
@property int32_t permission;
@property PBGroupUserType type;
@end

@implementation PBGroupUser

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasCustomeTitle {
  return !!hasCustomeTitle_;
}
- (void) setHasCustomeTitle:(BOOL) value {
  hasCustomeTitle_ = !!value;
}
@synthesize customeTitle;
- (BOOL) hasPermission {
  return !!hasPermission_;
}
- (void) setHasPermission:(BOOL) value {
  hasPermission_ = !!value;
}
@synthesize permission;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.user = nil;
  self.customeTitle = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.user = [PBGameUser defaultInstance];
    self.customeTitle = @"";
    self.permission = 0;
    self.type = PBGroupUserTypeGroupUserAdmin;
  }
  return self;
}
static PBGroupUser* defaultPBGroupUserInstance = nil;
+ (void) initialize {
  if (self == [PBGroupUser class]) {
    defaultPBGroupUserInstance = [[PBGroupUser alloc] init];
  }
}
+ (PBGroupUser*) defaultInstance {
  return defaultPBGroupUserInstance;
}
- (PBGroupUser*) defaultInstance {
  return defaultPBGroupUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasCustomeTitle) {
    [output writeString:2 value:self.customeTitle];
  }
  if (self.hasPermission) {
    [output writeInt32:3 value:self.permission];
  }
  if (self.hasType) {
    [output writeEnum:4 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUser) {
    size += computeMessageSize(1, self.user);
  }
  if (self.hasCustomeTitle) {
    size += computeStringSize(2, self.customeTitle);
  }
  if (self.hasPermission) {
    size += computeInt32Size(3, self.permission);
  }
  if (self.hasType) {
    size += computeEnumSize(4, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroupUser*) parseFromData:(NSData*) data {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromData:data] build];
}
+ (PBGroupUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromInputStream:input] build];
}
+ (PBGroupUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUser*)[[[PBGroupUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUser_Builder*) builder {
  return [[[PBGroupUser_Builder alloc] init] autorelease];
}
+ (PBGroupUser_Builder*) builderWithPrototype:(PBGroupUser*) prototype {
  return [[PBGroupUser builder] mergeFrom:prototype];
}
- (PBGroupUser_Builder*) builder {
  return [PBGroupUser builder];
}
@end

@interface PBGroupUser_Builder()
@property (retain) PBGroupUser* result;
@end

@implementation PBGroupUser_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroupUser alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupUser_Builder*) clear {
  self.result = [[[PBGroupUser alloc] init] autorelease];
  return self;
}
- (PBGroupUser_Builder*) clone {
  return [PBGroupUser builderWithPrototype:result];
}
- (PBGroupUser*) defaultInstance {
  return [PBGroupUser defaultInstance];
}
- (PBGroupUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupUser*) buildPartial {
  PBGroupUser* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroupUser_Builder*) mergeFrom:(PBGroupUser*) other {
  if (other == [PBGroupUser defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasCustomeTitle) {
    [self setCustomeTitle:other.customeTitle];
  }
  if (other.hasPermission) {
    [self setPermission:other.permission];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setCustomeTitle:[input readString]];
        break;
      }
      case 24: {
        [self setPermission:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (PBGroupUserTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (PBGameUser*) user {
  return result.user;
}
- (PBGroupUser_Builder*) setUser:(PBGameUser*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PBGroupUser_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PBGroupUser_Builder*) mergeUser:(PBGameUser*) value {
  if (result.hasUser &&
      result.user != [PBGameUser defaultInstance]) {
    result.user =
      [[[PBGameUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PBGroupUser_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [PBGameUser defaultInstance];
  return self;
}
- (BOOL) hasCustomeTitle {
  return result.hasCustomeTitle;
}
- (NSString*) customeTitle {
  return result.customeTitle;
}
- (PBGroupUser_Builder*) setCustomeTitle:(NSString*) value {
  result.hasCustomeTitle = YES;
  result.customeTitle = value;
  return self;
}
- (PBGroupUser_Builder*) clearCustomeTitle {
  result.hasCustomeTitle = NO;
  result.customeTitle = @"";
  return self;
}
- (BOOL) hasPermission {
  return result.hasPermission;
}
- (int32_t) permission {
  return result.permission;
}
- (PBGroupUser_Builder*) setPermission:(int32_t) value {
  result.hasPermission = YES;
  result.permission = value;
  return self;
}
- (PBGroupUser_Builder*) clearPermission {
  result.hasPermission = NO;
  result.permission = 0;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBGroupUserType) type {
  return result.type;
}
- (PBGroupUser_Builder*) setType:(PBGroupUserType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBGroupUser_Builder*) clearType {
  result.hasType = NO;
  result.type = PBGroupUserTypeGroupUserAdmin;
  return self;
}
@end

@interface PBGroupTitle ()
@property int32_t titleId;
@property (retain) NSString* title;
@end

@implementation PBGroupTitle

- (BOOL) hasTitleId {
  return !!hasTitleId_;
}
- (void) setHasTitleId:(BOOL) value {
  hasTitleId_ = !!value;
}
@synthesize titleId;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (void) dealloc {
  self.title = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.titleId = 0;
    self.title = @"";
  }
  return self;
}
static PBGroupTitle* defaultPBGroupTitleInstance = nil;
+ (void) initialize {
  if (self == [PBGroupTitle class]) {
    defaultPBGroupTitleInstance = [[PBGroupTitle alloc] init];
  }
}
+ (PBGroupTitle*) defaultInstance {
  return defaultPBGroupTitleInstance;
}
- (PBGroupTitle*) defaultInstance {
  return defaultPBGroupTitleInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTitleId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTitleId) {
    [output writeInt32:1 value:self.titleId];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTitleId) {
    size += computeInt32Size(1, self.titleId);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroupTitle*) parseFromData:(NSData*) data {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromData:data] build];
}
+ (PBGroupTitle*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupTitle*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromInputStream:input] build];
}
+ (PBGroupTitle*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupTitle*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupTitle*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupTitle*)[[[PBGroupTitle builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupTitle_Builder*) builder {
  return [[[PBGroupTitle_Builder alloc] init] autorelease];
}
+ (PBGroupTitle_Builder*) builderWithPrototype:(PBGroupTitle*) prototype {
  return [[PBGroupTitle builder] mergeFrom:prototype];
}
- (PBGroupTitle_Builder*) builder {
  return [PBGroupTitle builder];
}
@end

@interface PBGroupTitle_Builder()
@property (retain) PBGroupTitle* result;
@end

@implementation PBGroupTitle_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroupTitle alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupTitle_Builder*) clear {
  self.result = [[[PBGroupTitle alloc] init] autorelease];
  return self;
}
- (PBGroupTitle_Builder*) clone {
  return [PBGroupTitle builderWithPrototype:result];
}
- (PBGroupTitle*) defaultInstance {
  return [PBGroupTitle defaultInstance];
}
- (PBGroupTitle*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupTitle*) buildPartial {
  PBGroupTitle* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroupTitle_Builder*) mergeFrom:(PBGroupTitle*) other {
  if (other == [PBGroupTitle defaultInstance]) {
    return self;
  }
  if (other.hasTitleId) {
    [self setTitleId:other.titleId];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupTitle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupTitle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTitleId:[input readInt32]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTitleId {
  return result.hasTitleId;
}
- (int32_t) titleId {
  return result.titleId;
}
- (PBGroupTitle_Builder*) setTitleId:(int32_t) value {
  result.hasTitleId = YES;
  result.titleId = value;
  return self;
}
- (PBGroupTitle_Builder*) clearTitleId {
  result.hasTitleId = NO;
  result.titleId = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (PBGroupTitle_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (PBGroupTitle_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
@end

@interface PBGroupUsersByTitle ()
@property (retain) PBGroupTitle* title;
@property (retain) NSMutableArray* mutableUsersList;
@end

@implementation PBGroupUsersByTitle

- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
@synthesize mutableUsersList;
- (void) dealloc {
  self.title = nil;
  self.mutableUsersList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.title = [PBGroupTitle defaultInstance];
  }
  return self;
}
static PBGroupUsersByTitle* defaultPBGroupUsersByTitleInstance = nil;
+ (void) initialize {
  if (self == [PBGroupUsersByTitle class]) {
    defaultPBGroupUsersByTitleInstance = [[PBGroupUsersByTitle alloc] init];
  }
}
+ (PBGroupUsersByTitle*) defaultInstance {
  return defaultPBGroupUsersByTitleInstance;
}
- (PBGroupUsersByTitle*) defaultInstance {
  return defaultPBGroupUsersByTitleInstance;
}
- (NSArray*) usersList {
  return mutableUsersList;
}
- (PBGameUser*) usersAtIndex:(int32_t) index {
  id value = [mutableUsersList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (self.hasTitle) {
    if (!self.title.isInitialized) {
      return NO;
    }
  }
  for (PBGameUser* element in self.usersList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTitle) {
    [output writeMessage:1 value:self.title];
  }
  for (PBGameUser* element in self.usersList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTitle) {
    size += computeMessageSize(1, self.title);
  }
  for (PBGameUser* element in self.usersList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroupUsersByTitle*) parseFromData:(NSData*) data {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromData:data] build];
}
+ (PBGroupUsersByTitle*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUsersByTitle*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromInputStream:input] build];
}
+ (PBGroupUsersByTitle*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUsersByTitle*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupUsersByTitle*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUsersByTitle*)[[[PBGroupUsersByTitle builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUsersByTitle_Builder*) builder {
  return [[[PBGroupUsersByTitle_Builder alloc] init] autorelease];
}
+ (PBGroupUsersByTitle_Builder*) builderWithPrototype:(PBGroupUsersByTitle*) prototype {
  return [[PBGroupUsersByTitle builder] mergeFrom:prototype];
}
- (PBGroupUsersByTitle_Builder*) builder {
  return [PBGroupUsersByTitle builder];
}
@end

@interface PBGroupUsersByTitle_Builder()
@property (retain) PBGroupUsersByTitle* result;
@end

@implementation PBGroupUsersByTitle_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroupUsersByTitle alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupUsersByTitle_Builder*) clear {
  self.result = [[[PBGroupUsersByTitle alloc] init] autorelease];
  return self;
}
- (PBGroupUsersByTitle_Builder*) clone {
  return [PBGroupUsersByTitle builderWithPrototype:result];
}
- (PBGroupUsersByTitle*) defaultInstance {
  return [PBGroupUsersByTitle defaultInstance];
}
- (PBGroupUsersByTitle*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupUsersByTitle*) buildPartial {
  PBGroupUsersByTitle* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroupUsersByTitle_Builder*) mergeFrom:(PBGroupUsersByTitle*) other {
  if (other == [PBGroupUsersByTitle defaultInstance]) {
    return self;
  }
  if (other.hasTitle) {
    [self mergeTitle:other.title];
  }
  if (other.mutableUsersList.count > 0) {
    if (result.mutableUsersList == nil) {
      result.mutableUsersList = [NSMutableArray array];
    }
    [result.mutableUsersList addObjectsFromArray:other.mutableUsersList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupUsersByTitle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupUsersByTitle_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupTitle_Builder* subBuilder = [PBGroupTitle builder];
        if (self.hasTitle) {
          [subBuilder mergeFrom:self.title];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTitle:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (PBGroupTitle*) title {
  return result.title;
}
- (PBGroupUsersByTitle_Builder*) setTitle:(PBGroupTitle*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (PBGroupUsersByTitle_Builder*) setTitleBuilder:(PBGroupTitle_Builder*) builderForValue {
  return [self setTitle:[builderForValue build]];
}
- (PBGroupUsersByTitle_Builder*) mergeTitle:(PBGroupTitle*) value {
  if (result.hasTitle &&
      result.title != [PBGroupTitle defaultInstance]) {
    result.title =
      [[[PBGroupTitle builderWithPrototype:result.title] mergeFrom:value] buildPartial];
  } else {
    result.title = value;
  }
  result.hasTitle = YES;
  return self;
}
- (PBGroupUsersByTitle_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = [PBGroupTitle defaultInstance];
  return self;
}
- (NSArray*) usersList {
  if (result.mutableUsersList == nil) { return [NSArray array]; }
  return result.mutableUsersList;
}
- (PBGameUser*) usersAtIndex:(int32_t) index {
  return [result usersAtIndex:index];
}
- (PBGroupUsersByTitle_Builder*) replaceUsersAtIndex:(int32_t) index with:(PBGameUser*) value {
  [result.mutableUsersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGroupUsersByTitle_Builder*) addAllUsers:(NSArray*) values {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObjectsFromArray:values];
  return self;
}
- (PBGroupUsersByTitle_Builder*) clearUsersList {
  result.mutableUsersList = nil;
  return self;
}
- (PBGroupUsersByTitle_Builder*) addUsers:(PBGameUser*) value {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObject:value];
  return self;
}
@end

@interface PBUserRelationWithGroup ()
@property int32_t role;
@property int32_t permission;
@property int32_t status;
@property (retain) NSString* title;
@end

@implementation PBUserRelationWithGroup

- (BOOL) hasRole {
  return !!hasRole_;
}
- (void) setHasRole:(BOOL) value {
  hasRole_ = !!value;
}
@synthesize role;
- (BOOL) hasPermission {
  return !!hasPermission_;
}
- (void) setHasPermission:(BOOL) value {
  hasPermission_ = !!value;
}
@synthesize permission;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (void) dealloc {
  self.title = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.role = 0;
    self.permission = 0;
    self.status = 0;
    self.title = @"";
  }
  return self;
}
static PBUserRelationWithGroup* defaultPBUserRelationWithGroupInstance = nil;
+ (void) initialize {
  if (self == [PBUserRelationWithGroup class]) {
    defaultPBUserRelationWithGroupInstance = [[PBUserRelationWithGroup alloc] init];
  }
}
+ (PBUserRelationWithGroup*) defaultInstance {
  return defaultPBUserRelationWithGroupInstance;
}
- (PBUserRelationWithGroup*) defaultInstance {
  return defaultPBUserRelationWithGroupInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRole) {
    [output writeInt32:1 value:self.role];
  }
  if (self.hasPermission) {
    [output writeInt32:2 value:self.permission];
  }
  if (self.hasStatus) {
    [output writeInt32:3 value:self.status];
  }
  if (self.hasTitle) {
    [output writeString:4 value:self.title];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRole) {
    size += computeInt32Size(1, self.role);
  }
  if (self.hasPermission) {
    size += computeInt32Size(2, self.permission);
  }
  if (self.hasStatus) {
    size += computeInt32Size(3, self.status);
  }
  if (self.hasTitle) {
    size += computeStringSize(4, self.title);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBUserRelationWithGroup*) parseFromData:(NSData*) data {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromData:data] build];
}
+ (PBUserRelationWithGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUserRelationWithGroup*) parseFromInputStream:(NSInputStream*) input {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromInputStream:input] build];
}
+ (PBUserRelationWithGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserRelationWithGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromCodedInputStream:input] build];
}
+ (PBUserRelationWithGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserRelationWithGroup*)[[[PBUserRelationWithGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserRelationWithGroup_Builder*) builder {
  return [[[PBUserRelationWithGroup_Builder alloc] init] autorelease];
}
+ (PBUserRelationWithGroup_Builder*) builderWithPrototype:(PBUserRelationWithGroup*) prototype {
  return [[PBUserRelationWithGroup builder] mergeFrom:prototype];
}
- (PBUserRelationWithGroup_Builder*) builder {
  return [PBUserRelationWithGroup builder];
}
@end

@interface PBUserRelationWithGroup_Builder()
@property (retain) PBUserRelationWithGroup* result;
@end

@implementation PBUserRelationWithGroup_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBUserRelationWithGroup alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBUserRelationWithGroup_Builder*) clear {
  self.result = [[[PBUserRelationWithGroup alloc] init] autorelease];
  return self;
}
- (PBUserRelationWithGroup_Builder*) clone {
  return [PBUserRelationWithGroup builderWithPrototype:result];
}
- (PBUserRelationWithGroup*) defaultInstance {
  return [PBUserRelationWithGroup defaultInstance];
}
- (PBUserRelationWithGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUserRelationWithGroup*) buildPartial {
  PBUserRelationWithGroup* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBUserRelationWithGroup_Builder*) mergeFrom:(PBUserRelationWithGroup*) other {
  if (other == [PBUserRelationWithGroup defaultInstance]) {
    return self;
  }
  if (other.hasRole) {
    [self setRole:other.role];
  }
  if (other.hasPermission) {
    [self setPermission:other.permission];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUserRelationWithGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUserRelationWithGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRole:[input readInt32]];
        break;
      }
      case 16: {
        [self setPermission:[input readInt32]];
        break;
      }
      case 24: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 34: {
        [self setTitle:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRole {
  return result.hasRole;
}
- (int32_t) role {
  return result.role;
}
- (PBUserRelationWithGroup_Builder*) setRole:(int32_t) value {
  result.hasRole = YES;
  result.role = value;
  return self;
}
- (PBUserRelationWithGroup_Builder*) clearRole {
  result.hasRole = NO;
  result.role = 0;
  return self;
}
- (BOOL) hasPermission {
  return result.hasPermission;
}
- (int32_t) permission {
  return result.permission;
}
- (PBUserRelationWithGroup_Builder*) setPermission:(int32_t) value {
  result.hasPermission = YES;
  result.permission = value;
  return self;
}
- (PBUserRelationWithGroup_Builder*) clearPermission {
  result.hasPermission = NO;
  result.permission = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (PBUserRelationWithGroup_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBUserRelationWithGroup_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (PBUserRelationWithGroup_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (PBUserRelationWithGroup_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
@end

@interface PBGroup ()
@property (retain) NSString* groupId;
@property (retain) NSString* name;
@property int32_t level;
@property int32_t fame;
@property int64_t balance;
@property int32_t createDate;
@property int32_t memberFee;
@property int32_t capacity;
@property int32_t size;
@property int32_t guestSize;
@property int32_t guestCapacity;
@property int32_t topicCount;
@property int32_t fanCount;
@property (retain) NSString* desc;
@property (retain) NSString* signature;
@property int32_t status;
@property (retain) NSString* statusDesc;
@property (retain) NSString* bgImage;
@property (retain) NSString* medalImage;
@property (retain) NSMutableArray* mutableTitlesList;
@property (retain) PBGameUser* creator;
@property (retain) NSMutableArray* mutableAdminsList;
@property (retain) NSMutableArray* mutableUsersList;
@property (retain) NSMutableArray* mutableGuestsList;
@property (retain) PBBBSPost* topic;
@end

@implementation PBGroup

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value {
  hasGroupId_ = !!value;
}
@synthesize groupId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasFame {
  return !!hasFame_;
}
- (void) setHasFame:(BOOL) value {
  hasFame_ = !!value;
}
@synthesize fame;
- (BOOL) hasBalance {
  return !!hasBalance_;
}
- (void) setHasBalance:(BOOL) value {
  hasBalance_ = !!value;
}
@synthesize balance;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasMemberFee {
  return !!hasMemberFee_;
}
- (void) setHasMemberFee:(BOOL) value {
  hasMemberFee_ = !!value;
}
@synthesize memberFee;
- (BOOL) hasCapacity {
  return !!hasCapacity_;
}
- (void) setHasCapacity:(BOOL) value {
  hasCapacity_ = !!value;
}
@synthesize capacity;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (BOOL) hasGuestSize {
  return !!hasGuestSize_;
}
- (void) setHasGuestSize:(BOOL) value {
  hasGuestSize_ = !!value;
}
@synthesize guestSize;
- (BOOL) hasGuestCapacity {
  return !!hasGuestCapacity_;
}
- (void) setHasGuestCapacity:(BOOL) value {
  hasGuestCapacity_ = !!value;
}
@synthesize guestCapacity;
- (BOOL) hasTopicCount {
  return !!hasTopicCount_;
}
- (void) setHasTopicCount:(BOOL) value {
  hasTopicCount_ = !!value;
}
@synthesize topicCount;
- (BOOL) hasFanCount {
  return !!hasFanCount_;
}
- (void) setHasFanCount:(BOOL) value {
  hasFanCount_ = !!value;
}
@synthesize fanCount;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasSignature {
  return !!hasSignature_;
}
- (void) setHasSignature:(BOOL) value {
  hasSignature_ = !!value;
}
@synthesize signature;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasStatusDesc {
  return !!hasStatusDesc_;
}
- (void) setHasStatusDesc:(BOOL) value {
  hasStatusDesc_ = !!value;
}
@synthesize statusDesc;
- (BOOL) hasBgImage {
  return !!hasBgImage_;
}
- (void) setHasBgImage:(BOOL) value {
  hasBgImage_ = !!value;
}
@synthesize bgImage;
- (BOOL) hasMedalImage {
  return !!hasMedalImage_;
}
- (void) setHasMedalImage:(BOOL) value {
  hasMedalImage_ = !!value;
}
@synthesize medalImage;
@synthesize mutableTitlesList;
- (BOOL) hasCreator {
  return !!hasCreator_;
}
- (void) setHasCreator:(BOOL) value {
  hasCreator_ = !!value;
}
@synthesize creator;
@synthesize mutableAdminsList;
@synthesize mutableUsersList;
@synthesize mutableGuestsList;
- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) value {
  hasTopic_ = !!value;
}
@synthesize topic;
- (void) dealloc {
  self.groupId = nil;
  self.name = nil;
  self.desc = nil;
  self.signature = nil;
  self.statusDesc = nil;
  self.bgImage = nil;
  self.medalImage = nil;
  self.mutableTitlesList = nil;
  self.creator = nil;
  self.mutableAdminsList = nil;
  self.mutableUsersList = nil;
  self.mutableGuestsList = nil;
  self.topic = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.name = @"";
    self.level = 1;
    self.fame = 0;
    self.balance = 0L;
    self.createDate = 0;
    self.memberFee = 0;
    self.capacity = 0;
    self.size = 0;
    self.guestSize = 0;
    self.guestCapacity = 0;
    self.topicCount = 0;
    self.fanCount = 0;
    self.desc = @"";
    self.signature = @"";
    self.status = 0;
    self.statusDesc = @"";
    self.bgImage = @"";
    self.medalImage = @"";
    self.creator = [PBGameUser defaultInstance];
    self.topic = [PBBBSPost defaultInstance];
  }
  return self;
}
static PBGroup* defaultPBGroupInstance = nil;
+ (void) initialize {
  if (self == [PBGroup class]) {
    defaultPBGroupInstance = [[PBGroup alloc] init];
  }
}
+ (PBGroup*) defaultInstance {
  return defaultPBGroupInstance;
}
- (PBGroup*) defaultInstance {
  return defaultPBGroupInstance;
}
- (NSArray*) titlesList {
  return mutableTitlesList;
}
- (PBGroupTitle*) titlesAtIndex:(int32_t) index {
  id value = [mutableTitlesList objectAtIndex:index];
  return value;
}
- (NSArray*) adminsList {
  return mutableAdminsList;
}
- (PBGameUser*) adminsAtIndex:(int32_t) index {
  id value = [mutableAdminsList objectAtIndex:index];
  return value;
}
- (NSArray*) usersList {
  return mutableUsersList;
}
- (PBGroupUsersByTitle*) usersAtIndex:(int32_t) index {
  id value = [mutableUsersList objectAtIndex:index];
  return value;
}
- (NSArray*) guestsList {
  return mutableGuestsList;
}
- (PBGameUser*) guestsAtIndex:(int32_t) index {
  id value = [mutableGuestsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  for (PBGroupTitle* element in self.titlesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasCreator) {
    if (!self.creator.isInitialized) {
      return NO;
    }
  }
  for (PBGameUser* element in self.adminsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (PBGroupUsersByTitle* element in self.usersList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (PBGameUser* element in self.guestsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasTopic) {
    if (!self.topic.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasFame) {
    [output writeInt32:4 value:self.fame];
  }
  if (self.hasBalance) {
    [output writeInt64:5 value:self.balance];
  }
  if (self.hasCreateDate) {
    [output writeInt32:6 value:self.createDate];
  }
  if (self.hasMemberFee) {
    [output writeInt32:7 value:self.memberFee];
  }
  if (self.hasCapacity) {
    [output writeInt32:8 value:self.capacity];
  }
  if (self.hasSize) {
    [output writeInt32:9 value:self.size];
  }
  if (self.hasGuestSize) {
    [output writeInt32:10 value:self.guestSize];
  }
  if (self.hasGuestCapacity) {
    [output writeInt32:11 value:self.guestCapacity];
  }
  if (self.hasTopicCount) {
    [output writeInt32:12 value:self.topicCount];
  }
  if (self.hasFanCount) {
    [output writeInt32:13 value:self.fanCount];
  }
  if (self.hasDesc) {
    [output writeString:15 value:self.desc];
  }
  if (self.hasSignature) {
    [output writeString:16 value:self.signature];
  }
  if (self.hasStatus) {
    [output writeInt32:17 value:self.status];
  }
  if (self.hasStatusDesc) {
    [output writeString:18 value:self.statusDesc];
  }
  if (self.hasBgImage) {
    [output writeString:21 value:self.bgImage];
  }
  if (self.hasMedalImage) {
    [output writeString:22 value:self.medalImage];
  }
  for (PBGroupTitle* element in self.titlesList) {
    [output writeMessage:31 value:element];
  }
  if (self.hasCreator) {
    [output writeMessage:40 value:self.creator];
  }
  for (PBGameUser* element in self.adminsList) {
    [output writeMessage:41 value:element];
  }
  for (PBGroupUsersByTitle* element in self.usersList) {
    [output writeMessage:42 value:element];
  }
  for (PBGameUser* element in self.guestsList) {
    [output writeMessage:43 value:element];
  }
  if (self.hasTopic) {
    [output writeMessage:60 value:self.topic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGroupId) {
    size += computeStringSize(1, self.groupId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasLevel) {
    size += computeInt32Size(3, self.level);
  }
  if (self.hasFame) {
    size += computeInt32Size(4, self.fame);
  }
  if (self.hasBalance) {
    size += computeInt64Size(5, self.balance);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(6, self.createDate);
  }
  if (self.hasMemberFee) {
    size += computeInt32Size(7, self.memberFee);
  }
  if (self.hasCapacity) {
    size += computeInt32Size(8, self.capacity);
  }
  if (self.hasSize) {
    size += computeInt32Size(9, self.size);
  }
  if (self.hasGuestSize) {
    size += computeInt32Size(10, self.guestSize);
  }
  if (self.hasGuestCapacity) {
    size += computeInt32Size(11, self.guestCapacity);
  }
  if (self.hasTopicCount) {
    size += computeInt32Size(12, self.topicCount);
  }
  if (self.hasFanCount) {
    size += computeInt32Size(13, self.fanCount);
  }
  if (self.hasDesc) {
    size += computeStringSize(15, self.desc);
  }
  if (self.hasSignature) {
    size += computeStringSize(16, self.signature);
  }
  if (self.hasStatus) {
    size += computeInt32Size(17, self.status);
  }
  if (self.hasStatusDesc) {
    size += computeStringSize(18, self.statusDesc);
  }
  if (self.hasBgImage) {
    size += computeStringSize(21, self.bgImage);
  }
  if (self.hasMedalImage) {
    size += computeStringSize(22, self.medalImage);
  }
  for (PBGroupTitle* element in self.titlesList) {
    size += computeMessageSize(31, element);
  }
  if (self.hasCreator) {
    size += computeMessageSize(40, self.creator);
  }
  for (PBGameUser* element in self.adminsList) {
    size += computeMessageSize(41, element);
  }
  for (PBGroupUsersByTitle* element in self.usersList) {
    size += computeMessageSize(42, element);
  }
  for (PBGameUser* element in self.guestsList) {
    size += computeMessageSize(43, element);
  }
  if (self.hasTopic) {
    size += computeMessageSize(60, self.topic);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroup*) parseFromData:(NSData*) data {
  return (PBGroup*)[[[PBGroup builder] mergeFromData:data] build];
}
+ (PBGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroup*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroup*)[[[PBGroup builder] mergeFromInputStream:input] build];
}
+ (PBGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroup*)[[[PBGroup builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroup_Builder*) builder {
  return [[[PBGroup_Builder alloc] init] autorelease];
}
+ (PBGroup_Builder*) builderWithPrototype:(PBGroup*) prototype {
  return [[PBGroup builder] mergeFrom:prototype];
}
- (PBGroup_Builder*) builder {
  return [PBGroup builder];
}
@end

@interface PBGroup_Builder()
@property (retain) PBGroup* result;
@end

@implementation PBGroup_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroup alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroup_Builder*) clear {
  self.result = [[[PBGroup alloc] init] autorelease];
  return self;
}
- (PBGroup_Builder*) clone {
  return [PBGroup builderWithPrototype:result];
}
- (PBGroup*) defaultInstance {
  return [PBGroup defaultInstance];
}
- (PBGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroup*) buildPartial {
  PBGroup* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroup_Builder*) mergeFrom:(PBGroup*) other {
  if (other == [PBGroup defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasFame) {
    [self setFame:other.fame];
  }
  if (other.hasBalance) {
    [self setBalance:other.balance];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasMemberFee) {
    [self setMemberFee:other.memberFee];
  }
  if (other.hasCapacity) {
    [self setCapacity:other.capacity];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  if (other.hasGuestSize) {
    [self setGuestSize:other.guestSize];
  }
  if (other.hasGuestCapacity) {
    [self setGuestCapacity:other.guestCapacity];
  }
  if (other.hasTopicCount) {
    [self setTopicCount:other.topicCount];
  }
  if (other.hasFanCount) {
    [self setFanCount:other.fanCount];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasSignature) {
    [self setSignature:other.signature];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasStatusDesc) {
    [self setStatusDesc:other.statusDesc];
  }
  if (other.hasBgImage) {
    [self setBgImage:other.bgImage];
  }
  if (other.hasMedalImage) {
    [self setMedalImage:other.medalImage];
  }
  if (other.mutableTitlesList.count > 0) {
    if (result.mutableTitlesList == nil) {
      result.mutableTitlesList = [NSMutableArray array];
    }
    [result.mutableTitlesList addObjectsFromArray:other.mutableTitlesList];
  }
  if (other.hasCreator) {
    [self mergeCreator:other.creator];
  }
  if (other.mutableAdminsList.count > 0) {
    if (result.mutableAdminsList == nil) {
      result.mutableAdminsList = [NSMutableArray array];
    }
    [result.mutableAdminsList addObjectsFromArray:other.mutableAdminsList];
  }
  if (other.mutableUsersList.count > 0) {
    if (result.mutableUsersList == nil) {
      result.mutableUsersList = [NSMutableArray array];
    }
    [result.mutableUsersList addObjectsFromArray:other.mutableUsersList];
  }
  if (other.mutableGuestsList.count > 0) {
    if (result.mutableGuestsList == nil) {
      result.mutableGuestsList = [NSMutableArray array];
    }
    [result.mutableGuestsList addObjectsFromArray:other.mutableGuestsList];
  }
  if (other.hasTopic) {
    [self mergeTopic:other.topic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        [self setFame:[input readInt32]];
        break;
      }
      case 40: {
        [self setBalance:[input readInt64]];
        break;
      }
      case 48: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 56: {
        [self setMemberFee:[input readInt32]];
        break;
      }
      case 64: {
        [self setCapacity:[input readInt32]];
        break;
      }
      case 72: {
        [self setSize:[input readInt32]];
        break;
      }
      case 80: {
        [self setGuestSize:[input readInt32]];
        break;
      }
      case 88: {
        [self setGuestCapacity:[input readInt32]];
        break;
      }
      case 96: {
        [self setTopicCount:[input readInt32]];
        break;
      }
      case 104: {
        [self setFanCount:[input readInt32]];
        break;
      }
      case 122: {
        [self setDesc:[input readString]];
        break;
      }
      case 130: {
        [self setSignature:[input readString]];
        break;
      }
      case 136: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 146: {
        [self setStatusDesc:[input readString]];
        break;
      }
      case 170: {
        [self setBgImage:[input readString]];
        break;
      }
      case 178: {
        [self setMedalImage:[input readString]];
        break;
      }
      case 250: {
        PBGroupTitle_Builder* subBuilder = [PBGroupTitle builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTitles:[subBuilder buildPartial]];
        break;
      }
      case 322: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasCreator) {
          [subBuilder mergeFrom:self.creator];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreator:[subBuilder buildPartial]];
        break;
      }
      case 330: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAdmins:[subBuilder buildPartial]];
        break;
      }
      case 338: {
        PBGroupUsersByTitle_Builder* subBuilder = [PBGroupUsersByTitle builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsers:[subBuilder buildPartial]];
        break;
      }
      case 346: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGuests:[subBuilder buildPartial]];
        break;
      }
      case 482: {
        PBBBSPost_Builder* subBuilder = [PBBBSPost builder];
        if (self.hasTopic) {
          [subBuilder mergeFrom:self.topic];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTopic:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (PBGroup_Builder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (PBGroup_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBGroup_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBGroup_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (PBGroup_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (PBGroup_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 1;
  return self;
}
- (BOOL) hasFame {
  return result.hasFame;
}
- (int32_t) fame {
  return result.fame;
}
- (PBGroup_Builder*) setFame:(int32_t) value {
  result.hasFame = YES;
  result.fame = value;
  return self;
}
- (PBGroup_Builder*) clearFame {
  result.hasFame = NO;
  result.fame = 0;
  return self;
}
- (BOOL) hasBalance {
  return result.hasBalance;
}
- (int64_t) balance {
  return result.balance;
}
- (PBGroup_Builder*) setBalance:(int64_t) value {
  result.hasBalance = YES;
  result.balance = value;
  return self;
}
- (PBGroup_Builder*) clearBalance {
  result.hasBalance = NO;
  result.balance = 0L;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBGroup_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBGroup_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasMemberFee {
  return result.hasMemberFee;
}
- (int32_t) memberFee {
  return result.memberFee;
}
- (PBGroup_Builder*) setMemberFee:(int32_t) value {
  result.hasMemberFee = YES;
  result.memberFee = value;
  return self;
}
- (PBGroup_Builder*) clearMemberFee {
  result.hasMemberFee = NO;
  result.memberFee = 0;
  return self;
}
- (BOOL) hasCapacity {
  return result.hasCapacity;
}
- (int32_t) capacity {
  return result.capacity;
}
- (PBGroup_Builder*) setCapacity:(int32_t) value {
  result.hasCapacity = YES;
  result.capacity = value;
  return self;
}
- (PBGroup_Builder*) clearCapacity {
  result.hasCapacity = NO;
  result.capacity = 0;
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int32_t) size {
  return result.size;
}
- (PBGroup_Builder*) setSize:(int32_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (PBGroup_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0;
  return self;
}
- (BOOL) hasGuestSize {
  return result.hasGuestSize;
}
- (int32_t) guestSize {
  return result.guestSize;
}
- (PBGroup_Builder*) setGuestSize:(int32_t) value {
  result.hasGuestSize = YES;
  result.guestSize = value;
  return self;
}
- (PBGroup_Builder*) clearGuestSize {
  result.hasGuestSize = NO;
  result.guestSize = 0;
  return self;
}
- (BOOL) hasGuestCapacity {
  return result.hasGuestCapacity;
}
- (int32_t) guestCapacity {
  return result.guestCapacity;
}
- (PBGroup_Builder*) setGuestCapacity:(int32_t) value {
  result.hasGuestCapacity = YES;
  result.guestCapacity = value;
  return self;
}
- (PBGroup_Builder*) clearGuestCapacity {
  result.hasGuestCapacity = NO;
  result.guestCapacity = 0;
  return self;
}
- (BOOL) hasTopicCount {
  return result.hasTopicCount;
}
- (int32_t) topicCount {
  return result.topicCount;
}
- (PBGroup_Builder*) setTopicCount:(int32_t) value {
  result.hasTopicCount = YES;
  result.topicCount = value;
  return self;
}
- (PBGroup_Builder*) clearTopicCount {
  result.hasTopicCount = NO;
  result.topicCount = 0;
  return self;
}
- (BOOL) hasFanCount {
  return result.hasFanCount;
}
- (int32_t) fanCount {
  return result.fanCount;
}
- (PBGroup_Builder*) setFanCount:(int32_t) value {
  result.hasFanCount = YES;
  result.fanCount = value;
  return self;
}
- (PBGroup_Builder*) clearFanCount {
  result.hasFanCount = NO;
  result.fanCount = 0;
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (PBGroup_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (PBGroup_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasSignature {
  return result.hasSignature;
}
- (NSString*) signature {
  return result.signature;
}
- (PBGroup_Builder*) setSignature:(NSString*) value {
  result.hasSignature = YES;
  result.signature = value;
  return self;
}
- (PBGroup_Builder*) clearSignature {
  result.hasSignature = NO;
  result.signature = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (PBGroup_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBGroup_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasStatusDesc {
  return result.hasStatusDesc;
}
- (NSString*) statusDesc {
  return result.statusDesc;
}
- (PBGroup_Builder*) setStatusDesc:(NSString*) value {
  result.hasStatusDesc = YES;
  result.statusDesc = value;
  return self;
}
- (PBGroup_Builder*) clearStatusDesc {
  result.hasStatusDesc = NO;
  result.statusDesc = @"";
  return self;
}
- (BOOL) hasBgImage {
  return result.hasBgImage;
}
- (NSString*) bgImage {
  return result.bgImage;
}
- (PBGroup_Builder*) setBgImage:(NSString*) value {
  result.hasBgImage = YES;
  result.bgImage = value;
  return self;
}
- (PBGroup_Builder*) clearBgImage {
  result.hasBgImage = NO;
  result.bgImage = @"";
  return self;
}
- (BOOL) hasMedalImage {
  return result.hasMedalImage;
}
- (NSString*) medalImage {
  return result.medalImage;
}
- (PBGroup_Builder*) setMedalImage:(NSString*) value {
  result.hasMedalImage = YES;
  result.medalImage = value;
  return self;
}
- (PBGroup_Builder*) clearMedalImage {
  result.hasMedalImage = NO;
  result.medalImage = @"";
  return self;
}
- (NSArray*) titlesList {
  if (result.mutableTitlesList == nil) { return [NSArray array]; }
  return result.mutableTitlesList;
}
- (PBGroupTitle*) titlesAtIndex:(int32_t) index {
  return [result titlesAtIndex:index];
}
- (PBGroup_Builder*) replaceTitlesAtIndex:(int32_t) index with:(PBGroupTitle*) value {
  [result.mutableTitlesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGroup_Builder*) addAllTitles:(NSArray*) values {
  if (result.mutableTitlesList == nil) {
    result.mutableTitlesList = [NSMutableArray array];
  }
  [result.mutableTitlesList addObjectsFromArray:values];
  return self;
}
- (PBGroup_Builder*) clearTitlesList {
  result.mutableTitlesList = nil;
  return self;
}
- (PBGroup_Builder*) addTitles:(PBGroupTitle*) value {
  if (result.mutableTitlesList == nil) {
    result.mutableTitlesList = [NSMutableArray array];
  }
  [result.mutableTitlesList addObject:value];
  return self;
}
- (BOOL) hasCreator {
  return result.hasCreator;
}
- (PBGameUser*) creator {
  return result.creator;
}
- (PBGroup_Builder*) setCreator:(PBGameUser*) value {
  result.hasCreator = YES;
  result.creator = value;
  return self;
}
- (PBGroup_Builder*) setCreatorBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setCreator:[builderForValue build]];
}
- (PBGroup_Builder*) mergeCreator:(PBGameUser*) value {
  if (result.hasCreator &&
      result.creator != [PBGameUser defaultInstance]) {
    result.creator =
      [[[PBGameUser builderWithPrototype:result.creator] mergeFrom:value] buildPartial];
  } else {
    result.creator = value;
  }
  result.hasCreator = YES;
  return self;
}
- (PBGroup_Builder*) clearCreator {
  result.hasCreator = NO;
  result.creator = [PBGameUser defaultInstance];
  return self;
}
- (NSArray*) adminsList {
  if (result.mutableAdminsList == nil) { return [NSArray array]; }
  return result.mutableAdminsList;
}
- (PBGameUser*) adminsAtIndex:(int32_t) index {
  return [result adminsAtIndex:index];
}
- (PBGroup_Builder*) replaceAdminsAtIndex:(int32_t) index with:(PBGameUser*) value {
  [result.mutableAdminsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGroup_Builder*) addAllAdmins:(NSArray*) values {
  if (result.mutableAdminsList == nil) {
    result.mutableAdminsList = [NSMutableArray array];
  }
  [result.mutableAdminsList addObjectsFromArray:values];
  return self;
}
- (PBGroup_Builder*) clearAdminsList {
  result.mutableAdminsList = nil;
  return self;
}
- (PBGroup_Builder*) addAdmins:(PBGameUser*) value {
  if (result.mutableAdminsList == nil) {
    result.mutableAdminsList = [NSMutableArray array];
  }
  [result.mutableAdminsList addObject:value];
  return self;
}
- (NSArray*) usersList {
  if (result.mutableUsersList == nil) { return [NSArray array]; }
  return result.mutableUsersList;
}
- (PBGroupUsersByTitle*) usersAtIndex:(int32_t) index {
  return [result usersAtIndex:index];
}
- (PBGroup_Builder*) replaceUsersAtIndex:(int32_t) index with:(PBGroupUsersByTitle*) value {
  [result.mutableUsersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGroup_Builder*) addAllUsers:(NSArray*) values {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObjectsFromArray:values];
  return self;
}
- (PBGroup_Builder*) clearUsersList {
  result.mutableUsersList = nil;
  return self;
}
- (PBGroup_Builder*) addUsers:(PBGroupUsersByTitle*) value {
  if (result.mutableUsersList == nil) {
    result.mutableUsersList = [NSMutableArray array];
  }
  [result.mutableUsersList addObject:value];
  return self;
}
- (NSArray*) guestsList {
  if (result.mutableGuestsList == nil) { return [NSArray array]; }
  return result.mutableGuestsList;
}
- (PBGameUser*) guestsAtIndex:(int32_t) index {
  return [result guestsAtIndex:index];
}
- (PBGroup_Builder*) replaceGuestsAtIndex:(int32_t) index with:(PBGameUser*) value {
  [result.mutableGuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBGroup_Builder*) addAllGuests:(NSArray*) values {
  if (result.mutableGuestsList == nil) {
    result.mutableGuestsList = [NSMutableArray array];
  }
  [result.mutableGuestsList addObjectsFromArray:values];
  return self;
}
- (PBGroup_Builder*) clearGuestsList {
  result.mutableGuestsList = nil;
  return self;
}
- (PBGroup_Builder*) addGuests:(PBGameUser*) value {
  if (result.mutableGuestsList == nil) {
    result.mutableGuestsList = [NSMutableArray array];
  }
  [result.mutableGuestsList addObject:value];
  return self;
}
- (BOOL) hasTopic {
  return result.hasTopic;
}
- (PBBBSPost*) topic {
  return result.topic;
}
- (PBGroup_Builder*) setTopic:(PBBBSPost*) value {
  result.hasTopic = YES;
  result.topic = value;
  return self;
}
- (PBGroup_Builder*) setTopicBuilder:(PBBBSPost_Builder*) builderForValue {
  return [self setTopic:[builderForValue build]];
}
- (PBGroup_Builder*) mergeTopic:(PBBBSPost*) value {
  if (result.hasTopic &&
      result.topic != [PBBBSPost defaultInstance]) {
    result.topic =
      [[[PBBBSPost builderWithPrototype:result.topic] mergeFrom:value] buildPartial];
  } else {
    result.topic = value;
  }
  result.hasTopic = YES;
  return self;
}
- (PBGroup_Builder*) clearTopic {
  result.hasTopic = NO;
  result.topic = [PBBBSPost defaultInstance];
  return self;
}
@end

@interface PBGroupUserRole ()
@property (retain) NSString* groupId;
@property int32_t role;
@property int32_t permission;
@end

@implementation PBGroupUserRole

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value {
  hasGroupId_ = !!value;
}
@synthesize groupId;
- (BOOL) hasRole {
  return !!hasRole_;
}
- (void) setHasRole:(BOOL) value {
  hasRole_ = !!value;
}
@synthesize role;
- (BOOL) hasPermission {
  return !!hasPermission_;
}
- (void) setHasPermission:(BOOL) value {
  hasPermission_ = !!value;
}
@synthesize permission;
- (void) dealloc {
  self.groupId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = @"";
    self.role = 0;
    self.permission = 0;
  }
  return self;
}
static PBGroupUserRole* defaultPBGroupUserRoleInstance = nil;
+ (void) initialize {
  if (self == [PBGroupUserRole class]) {
    defaultPBGroupUserRoleInstance = [[PBGroupUserRole alloc] init];
  }
}
+ (PBGroupUserRole*) defaultInstance {
  return defaultPBGroupUserRoleInstance;
}
- (PBGroupUserRole*) defaultInstance {
  return defaultPBGroupUserRoleInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasRole) {
    return NO;
  }
  if (!self.hasPermission) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  if (self.hasRole) {
    [output writeInt32:2 value:self.role];
  }
  if (self.hasPermission) {
    [output writeInt32:3 value:self.permission];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGroupId) {
    size += computeStringSize(1, self.groupId);
  }
  if (self.hasRole) {
    size += computeInt32Size(2, self.role);
  }
  if (self.hasPermission) {
    size += computeInt32Size(3, self.permission);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroupUserRole*) parseFromData:(NSData*) data {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromData:data] build];
}
+ (PBGroupUserRole*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUserRole*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromInputStream:input] build];
}
+ (PBGroupUserRole*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUserRole*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupUserRole*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupUserRole*)[[[PBGroupUserRole builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupUserRole_Builder*) builder {
  return [[[PBGroupUserRole_Builder alloc] init] autorelease];
}
+ (PBGroupUserRole_Builder*) builderWithPrototype:(PBGroupUserRole*) prototype {
  return [[PBGroupUserRole builder] mergeFrom:prototype];
}
- (PBGroupUserRole_Builder*) builder {
  return [PBGroupUserRole builder];
}
@end

@interface PBGroupUserRole_Builder()
@property (retain) PBGroupUserRole* result;
@end

@implementation PBGroupUserRole_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroupUserRole alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupUserRole_Builder*) clear {
  self.result = [[[PBGroupUserRole alloc] init] autorelease];
  return self;
}
- (PBGroupUserRole_Builder*) clone {
  return [PBGroupUserRole builderWithPrototype:result];
}
- (PBGroupUserRole*) defaultInstance {
  return [PBGroupUserRole defaultInstance];
}
- (PBGroupUserRole*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupUserRole*) buildPartial {
  PBGroupUserRole* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroupUserRole_Builder*) mergeFrom:(PBGroupUserRole*) other {
  if (other == [PBGroupUserRole defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasRole) {
    [self setRole:other.role];
  }
  if (other.hasPermission) {
    [self setPermission:other.permission];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupUserRole_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupUserRole_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
      case 16: {
        [self setRole:[input readInt32]];
        break;
      }
      case 24: {
        [self setPermission:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (PBGroupUserRole_Builder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (PBGroupUserRole_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasRole {
  return result.hasRole;
}
- (int32_t) role {
  return result.role;
}
- (PBGroupUserRole_Builder*) setRole:(int32_t) value {
  result.hasRole = YES;
  result.role = value;
  return self;
}
- (PBGroupUserRole_Builder*) clearRole {
  result.hasRole = NO;
  result.role = 0;
  return self;
}
- (BOOL) hasPermission {
  return result.hasPermission;
}
- (int32_t) permission {
  return result.permission;
}
- (PBGroupUserRole_Builder*) setPermission:(int32_t) value {
  result.hasPermission = YES;
  result.permission = value;
  return self;
}
- (PBGroupUserRole_Builder*) clearPermission {
  result.hasPermission = NO;
  result.permission = 0;
  return self;
}
@end

@interface PBGroupNotice ()
@property (retain) NSString* noticeId;
@property int32_t type;
@property int32_t status;
@property (retain) NSString* groupId;
@property (retain) NSString* groupName;
@property (retain) NSString* message;
@property int32_t createDate;
@property (retain) PBGameUser* publisher;
@property (retain) PBGameUser* target;
@end

@implementation PBGroupNotice

- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) value {
  hasNoticeId_ = !!value;
}
@synthesize noticeId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value {
  hasGroupId_ = !!value;
}
@synthesize groupId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) value {
  hasGroupName_ = !!value;
}
@synthesize groupName;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value {
  hasMessage_ = !!value;
}
@synthesize message;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasPublisher {
  return !!hasPublisher_;
}
- (void) setHasPublisher:(BOOL) value {
  hasPublisher_ = !!value;
}
@synthesize publisher;
- (BOOL) hasTarget {
  return !!hasTarget_;
}
- (void) setHasTarget:(BOOL) value {
  hasTarget_ = !!value;
}
@synthesize target;
- (void) dealloc {
  self.noticeId = nil;
  self.groupId = nil;
  self.groupName = nil;
  self.message = nil;
  self.publisher = nil;
  self.target = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.noticeId = @"";
    self.type = 0;
    self.status = 0;
    self.groupId = @"";
    self.groupName = @"";
    self.message = @"";
    self.createDate = 0;
    self.publisher = [PBGameUser defaultInstance];
    self.target = [PBGameUser defaultInstance];
  }
  return self;
}
static PBGroupNotice* defaultPBGroupNoticeInstance = nil;
+ (void) initialize {
  if (self == [PBGroupNotice class]) {
    defaultPBGroupNoticeInstance = [[PBGroupNotice alloc] init];
  }
}
+ (PBGroupNotice*) defaultInstance {
  return defaultPBGroupNoticeInstance;
}
- (PBGroupNotice*) defaultInstance {
  return defaultPBGroupNoticeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNoticeId) {
    return NO;
  }
  if (self.hasPublisher) {
    if (!self.publisher.isInitialized) {
      return NO;
    }
  }
  if (self.hasTarget) {
    if (!self.target.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNoticeId) {
    [output writeString:1 value:self.noticeId];
  }
  if (self.hasType) {
    [output writeInt32:2 value:self.type];
  }
  if (self.hasStatus) {
    [output writeInt32:3 value:self.status];
  }
  if (self.hasGroupId) {
    [output writeString:4 value:self.groupId];
  }
  if (self.hasGroupName) {
    [output writeString:5 value:self.groupName];
  }
  if (self.hasMessage) {
    [output writeString:6 value:self.message];
  }
  if (self.hasCreateDate) {
    [output writeInt32:7 value:self.createDate];
  }
  if (self.hasPublisher) {
    [output writeMessage:10 value:self.publisher];
  }
  if (self.hasTarget) {
    [output writeMessage:11 value:self.target];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasNoticeId) {
    size += computeStringSize(1, self.noticeId);
  }
  if (self.hasType) {
    size += computeInt32Size(2, self.type);
  }
  if (self.hasStatus) {
    size += computeInt32Size(3, self.status);
  }
  if (self.hasGroupId) {
    size += computeStringSize(4, self.groupId);
  }
  if (self.hasGroupName) {
    size += computeStringSize(5, self.groupName);
  }
  if (self.hasMessage) {
    size += computeStringSize(6, self.message);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(7, self.createDate);
  }
  if (self.hasPublisher) {
    size += computeMessageSize(10, self.publisher);
  }
  if (self.hasTarget) {
    size += computeMessageSize(11, self.target);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBGroupNotice*) parseFromData:(NSData*) data {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromData:data] build];
}
+ (PBGroupNotice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupNotice*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromInputStream:input] build];
}
+ (PBGroupNotice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupNotice*)[[[PBGroupNotice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupNotice_Builder*) builder {
  return [[[PBGroupNotice_Builder alloc] init] autorelease];
}
+ (PBGroupNotice_Builder*) builderWithPrototype:(PBGroupNotice*) prototype {
  return [[PBGroupNotice builder] mergeFrom:prototype];
}
- (PBGroupNotice_Builder*) builder {
  return [PBGroupNotice builder];
}
@end

@interface PBGroupNotice_Builder()
@property (retain) PBGroupNotice* result;
@end

@implementation PBGroupNotice_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBGroupNotice alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupNotice_Builder*) clear {
  self.result = [[[PBGroupNotice alloc] init] autorelease];
  return self;
}
- (PBGroupNotice_Builder*) clone {
  return [PBGroupNotice builderWithPrototype:result];
}
- (PBGroupNotice*) defaultInstance {
  return [PBGroupNotice defaultInstance];
}
- (PBGroupNotice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupNotice*) buildPartial {
  PBGroupNotice* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBGroupNotice_Builder*) mergeFrom:(PBGroupNotice*) other {
  if (other == [PBGroupNotice defaultInstance]) {
    return self;
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasPublisher) {
    [self mergePublisher:other.publisher];
  }
  if (other.hasTarget) {
    [self mergeTarget:other.target];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupNotice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupNotice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNoticeId:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readInt32]];
        break;
      }
      case 24: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 34: {
        [self setGroupId:[input readString]];
        break;
      }
      case 42: {
        [self setGroupName:[input readString]];
        break;
      }
      case 50: {
        [self setMessage:[input readString]];
        break;
      }
      case 56: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 82: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasPublisher) {
          [subBuilder mergeFrom:self.publisher];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPublisher:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasTarget) {
          [subBuilder mergeFrom:self.target];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTarget:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasNoticeId {
  return result.hasNoticeId;
}
- (NSString*) noticeId {
  return result.noticeId;
}
- (PBGroupNotice_Builder*) setNoticeId:(NSString*) value {
  result.hasNoticeId = YES;
  result.noticeId = value;
  return self;
}
- (PBGroupNotice_Builder*) clearNoticeId {
  result.hasNoticeId = NO;
  result.noticeId = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PBGroupNotice_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBGroupNotice_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (PBGroupNotice_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBGroupNotice_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (PBGroupNotice_Builder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (PBGroupNotice_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasGroupName {
  return result.hasGroupName;
}
- (NSString*) groupName {
  return result.groupName;
}
- (PBGroupNotice_Builder*) setGroupName:(NSString*) value {
  result.hasGroupName = YES;
  result.groupName = value;
  return self;
}
- (PBGroupNotice_Builder*) clearGroupName {
  result.hasGroupName = NO;
  result.groupName = @"";
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (PBGroupNotice_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (PBGroupNotice_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBGroupNotice_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBGroupNotice_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasPublisher {
  return result.hasPublisher;
}
- (PBGameUser*) publisher {
  return result.publisher;
}
- (PBGroupNotice_Builder*) setPublisher:(PBGameUser*) value {
  result.hasPublisher = YES;
  result.publisher = value;
  return self;
}
- (PBGroupNotice_Builder*) setPublisherBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setPublisher:[builderForValue build]];
}
- (PBGroupNotice_Builder*) mergePublisher:(PBGameUser*) value {
  if (result.hasPublisher &&
      result.publisher != [PBGameUser defaultInstance]) {
    result.publisher =
      [[[PBGameUser builderWithPrototype:result.publisher] mergeFrom:value] buildPartial];
  } else {
    result.publisher = value;
  }
  result.hasPublisher = YES;
  return self;
}
- (PBGroupNotice_Builder*) clearPublisher {
  result.hasPublisher = NO;
  result.publisher = [PBGameUser defaultInstance];
  return self;
}
- (BOOL) hasTarget {
  return result.hasTarget;
}
- (PBGameUser*) target {
  return result.target;
}
- (PBGroupNotice_Builder*) setTarget:(PBGameUser*) value {
  result.hasTarget = YES;
  result.target = value;
  return self;
}
- (PBGroupNotice_Builder*) setTargetBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setTarget:[builderForValue build]];
}
- (PBGroupNotice_Builder*) mergeTarget:(PBGameUser*) value {
  if (result.hasTarget &&
      result.target != [PBGameUser defaultInstance]) {
    result.target =
      [[[PBGameUser builderWithPrototype:result.target] mergeFrom:value] buildPartial];
  } else {
    result.target = value;
  }
  result.hasTarget = YES;
  return self;
}
- (PBGroupNotice_Builder*) clearTarget {
  result.hasTarget = NO;
  result.target = [PBGameUser defaultInstance];
  return self;
}
@end

