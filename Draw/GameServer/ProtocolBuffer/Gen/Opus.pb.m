// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Opus.pb.h"

@implementation OpusRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [OpusRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GameBasicRoot registerAllExtensions:registry];
    [SingRoot registerAllExtensions:registry];
    [DrawRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBOpusCategoryTypeIsValidValue(PBOpusCategoryType value) {
  switch (value) {
    case PBOpusCategoryTypeDrawCategory:
    case PBOpusCategoryTypeSingCategory:
    case PBOpusCategoryTypeAskPsCategory:
      return YES;
    default:
      return NO;
  }
}
BOOL PBLanguageIsValidValue(PBLanguage value) {
  switch (value) {
    case PBLanguageChinese:
    case PBLanguageEnglish:
      return YES;
    default:
      return NO;
  }
}
BOOL PBOpusTypeIsValidValue(PBOpusType value) {
  switch (value) {
    case PBOpusTypeUnknown:
    case PBOpusTypeDraw:
    case PBOpusTypeGuess:
    case PBOpusTypeComment:
    case PBOpusTypeRepost:
    case PBOpusTypeDrawToUser:
    case PBOpusTypeFlower:
    case PBOpusTypeTomato:
    case PBOpusTypeOnlyComment:
    case PBOpusTypeDrawContest:
    case PBOpusTypeSing:
    case PBOpusTypeSingToUser:
    case PBOpusTypeSingContest:
    case PBOpusTypeAskPs:
    case PBOpusTypeAskPsOpus:
      return YES;
    default:
      return NO;
  }
}
BOOL PBOpusStoreTypeIsValidValue(PBOpusStoreType value) {
  switch (value) {
    case PBOpusStoreTypeNormalOpus:
    case PBOpusStoreTypeDraftOpus:
    case PBOpusStoreTypeSubmitOpus:
    case PBOpusStoreTypeSavedOpus:
      return YES;
    default:
      return NO;
  }
}
BOOL PBOpusStatusIsValidValue(PBOpusStatus value) {
  switch (value) {
    case PBOpusStatusOpusStatusNormal:
    case PBOpusStatusOpusStatusDelete:
      return YES;
    default:
      return NO;
  }
}
BOOL PBFeedTimesTypeIsValidValue(PBFeedTimesType value) {
  switch (value) {
    case PBFeedTimesTypeFeedTimesTypeMatch:
    case PBFeedTimesTypeFeedTimesTypeGuess:
    case PBFeedTimesTypeFeedTimesTypeCorrect:
    case PBFeedTimesTypeFeedTimesTypeComment:
    case PBFeedTimesTypeFeedTimesTypeFlower:
    case PBFeedTimesTypeFeedTimesTypeTomato:
    case PBFeedTimesTypeFeedTimesTypeSave:
      return YES;
    default:
      return NO;
  }
}
@interface PBDrawOpus ()
@property int32_t level;
@end

@implementation PBDrawOpus

- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.level = 0;
  }
  return self;
}
static PBDrawOpus* defaultPBDrawOpusInstance = nil;
+ (void) initialize {
  if (self == [PBDrawOpus class]) {
    defaultPBDrawOpusInstance = [[PBDrawOpus alloc] init];
  }
}
+ (PBDrawOpus*) defaultInstance {
  return defaultPBDrawOpusInstance;
}
- (PBDrawOpus*) defaultInstance {
  return defaultPBDrawOpusInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLevel) {
    [output writeInt32:1 value:self.level];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLevel) {
    size += computeInt32Size(1, self.level);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBDrawOpus*) parseFromData:(NSData*) data {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromData:data] build];
}
+ (PBDrawOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromInputStream:input] build];
}
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromCodedInputStream:input] build];
}
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDrawOpus*)[[[PBDrawOpus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDrawOpus_Builder*) builder {
  return [[[PBDrawOpus_Builder alloc] init] autorelease];
}
+ (PBDrawOpus_Builder*) builderWithPrototype:(PBDrawOpus*) prototype {
  return [[PBDrawOpus builder] mergeFrom:prototype];
}
- (PBDrawOpus_Builder*) builder {
  return [PBDrawOpus builder];
}
@end

@interface PBDrawOpus_Builder()
@property (retain) PBDrawOpus* result;
@end

@implementation PBDrawOpus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBDrawOpus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBDrawOpus_Builder*) clear {
  self.result = [[[PBDrawOpus alloc] init] autorelease];
  return self;
}
- (PBDrawOpus_Builder*) clone {
  return [PBDrawOpus builderWithPrototype:result];
}
- (PBDrawOpus*) defaultInstance {
  return [PBDrawOpus defaultInstance];
}
- (PBDrawOpus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBDrawOpus*) buildPartial {
  PBDrawOpus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBDrawOpus_Builder*) mergeFrom:(PBDrawOpus*) other {
  if (other == [PBDrawOpus defaultInstance]) {
    return self;
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBDrawOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBDrawOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLevel:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (PBDrawOpus_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (PBDrawOpus_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
@end

@interface PBAskPs ()
@property (retain) NSMutableArray* mutableRequirementList;
@property int32_t awardCoinsPerUser;
@property int32_t awardCoinsMaxTotal;
@property int32_t awardIngotBestUser;
@property (retain) NSString* awardBestUserId;
@end

@implementation PBAskPs

@synthesize mutableRequirementList;
- (BOOL) hasAwardCoinsPerUser {
  return !!hasAwardCoinsPerUser_;
}
- (void) setHasAwardCoinsPerUser:(BOOL) value {
  hasAwardCoinsPerUser_ = !!value;
}
@synthesize awardCoinsPerUser;
- (BOOL) hasAwardCoinsMaxTotal {
  return !!hasAwardCoinsMaxTotal_;
}
- (void) setHasAwardCoinsMaxTotal:(BOOL) value {
  hasAwardCoinsMaxTotal_ = !!value;
}
@synthesize awardCoinsMaxTotal;
- (BOOL) hasAwardIngotBestUser {
  return !!hasAwardIngotBestUser_;
}
- (void) setHasAwardIngotBestUser:(BOOL) value {
  hasAwardIngotBestUser_ = !!value;
}
@synthesize awardIngotBestUser;
- (BOOL) hasAwardBestUserId {
  return !!hasAwardBestUserId_;
}
- (void) setHasAwardBestUserId:(BOOL) value {
  hasAwardBestUserId_ = !!value;
}
@synthesize awardBestUserId;
- (void) dealloc {
  self.mutableRequirementList = nil;
  self.awardBestUserId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.awardCoinsPerUser = 0;
    self.awardCoinsMaxTotal = 0;
    self.awardIngotBestUser = 0;
    self.awardBestUserId = @"";
  }
  return self;
}
static PBAskPs* defaultPBAskPsInstance = nil;
+ (void) initialize {
  if (self == [PBAskPs class]) {
    defaultPBAskPsInstance = [[PBAskPs alloc] init];
  }
}
+ (PBAskPs*) defaultInstance {
  return defaultPBAskPsInstance;
}
- (PBAskPs*) defaultInstance {
  return defaultPBAskPsInstance;
}
- (NSArray*) requirementList {
  return mutableRequirementList;
}
- (NSString*) requirementAtIndex:(int32_t) index {
  id value = [mutableRequirementList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSString* element in self.mutableRequirementList) {
    [output writeString:1 value:element];
  }
  if (self.hasAwardCoinsPerUser) {
    [output writeInt32:30 value:self.awardCoinsPerUser];
  }
  if (self.hasAwardCoinsMaxTotal) {
    [output writeInt32:31 value:self.awardCoinsMaxTotal];
  }
  if (self.hasAwardIngotBestUser) {
    [output writeInt32:32 value:self.awardIngotBestUser];
  }
  if (self.hasAwardBestUserId) {
    [output writeString:50 value:self.awardBestUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableRequirementList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableRequirementList.count;
  }
  if (self.hasAwardCoinsPerUser) {
    size += computeInt32Size(30, self.awardCoinsPerUser);
  }
  if (self.hasAwardCoinsMaxTotal) {
    size += computeInt32Size(31, self.awardCoinsMaxTotal);
  }
  if (self.hasAwardIngotBestUser) {
    size += computeInt32Size(32, self.awardIngotBestUser);
  }
  if (self.hasAwardBestUserId) {
    size += computeStringSize(50, self.awardBestUserId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBAskPs*) parseFromData:(NSData*) data {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromData:data] build];
}
+ (PBAskPs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromInputStream:input] build];
}
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromCodedInputStream:input] build];
}
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPs*)[[[PBAskPs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAskPs_Builder*) builder {
  return [[[PBAskPs_Builder alloc] init] autorelease];
}
+ (PBAskPs_Builder*) builderWithPrototype:(PBAskPs*) prototype {
  return [[PBAskPs builder] mergeFrom:prototype];
}
- (PBAskPs_Builder*) builder {
  return [PBAskPs builder];
}
@end

@interface PBAskPs_Builder()
@property (retain) PBAskPs* result;
@end

@implementation PBAskPs_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBAskPs alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBAskPs_Builder*) clear {
  self.result = [[[PBAskPs alloc] init] autorelease];
  return self;
}
- (PBAskPs_Builder*) clone {
  return [PBAskPs builderWithPrototype:result];
}
- (PBAskPs*) defaultInstance {
  return [PBAskPs defaultInstance];
}
- (PBAskPs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBAskPs*) buildPartial {
  PBAskPs* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBAskPs_Builder*) mergeFrom:(PBAskPs*) other {
  if (other == [PBAskPs defaultInstance]) {
    return self;
  }
  if (other.mutableRequirementList.count > 0) {
    if (result.mutableRequirementList == nil) {
      result.mutableRequirementList = [NSMutableArray array];
    }
    [result.mutableRequirementList addObjectsFromArray:other.mutableRequirementList];
  }
  if (other.hasAwardCoinsPerUser) {
    [self setAwardCoinsPerUser:other.awardCoinsPerUser];
  }
  if (other.hasAwardCoinsMaxTotal) {
    [self setAwardCoinsMaxTotal:other.awardCoinsMaxTotal];
  }
  if (other.hasAwardIngotBestUser) {
    [self setAwardIngotBestUser:other.awardIngotBestUser];
  }
  if (other.hasAwardBestUserId) {
    [self setAwardBestUserId:other.awardBestUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBAskPs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBAskPs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addRequirement:[input readString]];
        break;
      }
      case 240: {
        [self setAwardCoinsPerUser:[input readInt32]];
        break;
      }
      case 248: {
        [self setAwardCoinsMaxTotal:[input readInt32]];
        break;
      }
      case 256: {
        [self setAwardIngotBestUser:[input readInt32]];
        break;
      }
      case 402: {
        [self setAwardBestUserId:[input readString]];
        break;
      }
    }
  }
}
- (NSArray*) requirementList {
  if (result.mutableRequirementList == nil) {
    return [NSArray array];
  }
  return result.mutableRequirementList;
}
- (NSString*) requirementAtIndex:(int32_t) index {
  return [result requirementAtIndex:index];
}
- (PBAskPs_Builder*) replaceRequirementAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableRequirementList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBAskPs_Builder*) addRequirement:(NSString*) value {
  if (result.mutableRequirementList == nil) {
    result.mutableRequirementList = [NSMutableArray array];
  }
  [result.mutableRequirementList addObject:value];
  return self;
}
- (PBAskPs_Builder*) addAllRequirement:(NSArray*) values {
  if (result.mutableRequirementList == nil) {
    result.mutableRequirementList = [NSMutableArray array];
  }
  [result.mutableRequirementList addObjectsFromArray:values];
  return self;
}
- (PBAskPs_Builder*) clearRequirementList {
  result.mutableRequirementList = nil;
  return self;
}
- (BOOL) hasAwardCoinsPerUser {
  return result.hasAwardCoinsPerUser;
}
- (int32_t) awardCoinsPerUser {
  return result.awardCoinsPerUser;
}
- (PBAskPs_Builder*) setAwardCoinsPerUser:(int32_t) value {
  result.hasAwardCoinsPerUser = YES;
  result.awardCoinsPerUser = value;
  return self;
}
- (PBAskPs_Builder*) clearAwardCoinsPerUser {
  result.hasAwardCoinsPerUser = NO;
  result.awardCoinsPerUser = 0;
  return self;
}
- (BOOL) hasAwardCoinsMaxTotal {
  return result.hasAwardCoinsMaxTotal;
}
- (int32_t) awardCoinsMaxTotal {
  return result.awardCoinsMaxTotal;
}
- (PBAskPs_Builder*) setAwardCoinsMaxTotal:(int32_t) value {
  result.hasAwardCoinsMaxTotal = YES;
  result.awardCoinsMaxTotal = value;
  return self;
}
- (PBAskPs_Builder*) clearAwardCoinsMaxTotal {
  result.hasAwardCoinsMaxTotal = NO;
  result.awardCoinsMaxTotal = 0;
  return self;
}
- (BOOL) hasAwardIngotBestUser {
  return result.hasAwardIngotBestUser;
}
- (int32_t) awardIngotBestUser {
  return result.awardIngotBestUser;
}
- (PBAskPs_Builder*) setAwardIngotBestUser:(int32_t) value {
  result.hasAwardIngotBestUser = YES;
  result.awardIngotBestUser = value;
  return self;
}
- (PBAskPs_Builder*) clearAwardIngotBestUser {
  result.hasAwardIngotBestUser = NO;
  result.awardIngotBestUser = 0;
  return self;
}
- (BOOL) hasAwardBestUserId {
  return result.hasAwardBestUserId;
}
- (NSString*) awardBestUserId {
  return result.awardBestUserId;
}
- (PBAskPs_Builder*) setAwardBestUserId:(NSString*) value {
  result.hasAwardBestUserId = YES;
  result.awardBestUserId = value;
  return self;
}
- (PBAskPs_Builder*) clearAwardBestUserId {
  result.hasAwardBestUserId = NO;
  result.awardBestUserId = @"";
  return self;
}
@end

@interface PBAskPsOpus ()
@property (retain) NSString* askPsId;
@end

@implementation PBAskPsOpus

- (BOOL) hasAskPsId {
  return !!hasAskPsId_;
}
- (void) setHasAskPsId:(BOOL) value {
  hasAskPsId_ = !!value;
}
@synthesize askPsId;
- (void) dealloc {
  self.askPsId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.askPsId = @"";
  }
  return self;
}
static PBAskPsOpus* defaultPBAskPsOpusInstance = nil;
+ (void) initialize {
  if (self == [PBAskPsOpus class]) {
    defaultPBAskPsOpusInstance = [[PBAskPsOpus alloc] init];
  }
}
+ (PBAskPsOpus*) defaultInstance {
  return defaultPBAskPsOpusInstance;
}
- (PBAskPsOpus*) defaultInstance {
  return defaultPBAskPsOpusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAskPsId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAskPsId) {
    [output writeString:1 value:self.askPsId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasAskPsId) {
    size += computeStringSize(1, self.askPsId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBAskPsOpus*) parseFromData:(NSData*) data {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromData:data] build];
}
+ (PBAskPsOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromInputStream:input] build];
}
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromCodedInputStream:input] build];
}
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAskPsOpus*)[[[PBAskPsOpus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAskPsOpus_Builder*) builder {
  return [[[PBAskPsOpus_Builder alloc] init] autorelease];
}
+ (PBAskPsOpus_Builder*) builderWithPrototype:(PBAskPsOpus*) prototype {
  return [[PBAskPsOpus builder] mergeFrom:prototype];
}
- (PBAskPsOpus_Builder*) builder {
  return [PBAskPsOpus builder];
}
@end

@interface PBAskPsOpus_Builder()
@property (retain) PBAskPsOpus* result;
@end

@implementation PBAskPsOpus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBAskPsOpus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBAskPsOpus_Builder*) clear {
  self.result = [[[PBAskPsOpus alloc] init] autorelease];
  return self;
}
- (PBAskPsOpus_Builder*) clone {
  return [PBAskPsOpus builderWithPrototype:result];
}
- (PBAskPsOpus*) defaultInstance {
  return [PBAskPsOpus defaultInstance];
}
- (PBAskPsOpus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBAskPsOpus*) buildPartial {
  PBAskPsOpus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBAskPsOpus_Builder*) mergeFrom:(PBAskPsOpus*) other {
  if (other == [PBAskPsOpus defaultInstance]) {
    return self;
  }
  if (other.hasAskPsId) {
    [self setAskPsId:other.askPsId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBAskPsOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBAskPsOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAskPsId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAskPsId {
  return result.hasAskPsId;
}
- (NSString*) askPsId {
  return result.askPsId;
}
- (PBAskPsOpus_Builder*) setAskPsId:(NSString*) value {
  result.hasAskPsId = YES;
  result.askPsId = value;
  return self;
}
- (PBAskPsOpus_Builder*) clearAskPsId {
  result.hasAskPsId = NO;
  result.askPsId = @"";
  return self;
}
@end

@interface PBOpus ()
@property (retain) NSString* opusId;
@property PBOpusType type;
@property (retain) NSString* name;
@property (retain) NSString* desc;
@property (retain) NSString* image;
@property (retain) NSString* thumbImage;
@property (retain) NSString* dataUrl;
@property PBLanguage language;
@property PBOpusCategoryType category;
@property int32_t createDate;
@property int32_t status;
@property int32_t deviceType;
@property (retain) NSString* deviceName;
@property (retain) NSString* appId;
@property (retain) PBGameUser* author;
@property (retain) PBGameUser* targetUser;
@property (retain) NSString* contestId;
@property (retain) NSMutableArray* mutableFeedTimesList;
@property (retain) PBDrawOpus* draw;
@property (retain) PBSingOpus* sing;
@property (retain) PBAskPs* askPs;
@property (retain) PBAskPsOpus* askPsOpus;
@property (retain) NSString* localDataUrl;
@property (retain) NSString* localImageUrl;
@property (retain) NSString* localThumbImageUrl;
@property BOOL isRecovery;
@property PBOpusStoreType storeType;
@end

@implementation PBOpus

- (BOOL) hasOpusId {
  return !!hasOpusId_;
}
- (void) setHasOpusId:(BOOL) value {
  hasOpusId_ = !!value;
}
@synthesize opusId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasImage {
  return !!hasImage_;
}
- (void) setHasImage:(BOOL) value {
  hasImage_ = !!value;
}
@synthesize image;
- (BOOL) hasThumbImage {
  return !!hasThumbImage_;
}
- (void) setHasThumbImage:(BOOL) value {
  hasThumbImage_ = !!value;
}
@synthesize thumbImage;
- (BOOL) hasDataUrl {
  return !!hasDataUrl_;
}
- (void) setHasDataUrl:(BOOL) value {
  hasDataUrl_ = !!value;
}
@synthesize dataUrl;
- (BOOL) hasLanguage {
  return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value {
  hasLanguage_ = !!value;
}
@synthesize language;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasCreateDate {
  return !!hasCreateDate_;
}
- (void) setHasCreateDate:(BOOL) value {
  hasCreateDate_ = !!value;
}
@synthesize createDate;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) value {
  hasDeviceType_ = !!value;
}
@synthesize deviceType;
- (BOOL) hasDeviceName {
  return !!hasDeviceName_;
}
- (void) setHasDeviceName:(BOOL) value {
  hasDeviceName_ = !!value;
}
@synthesize deviceName;
- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) value {
  hasAppId_ = !!value;
}
@synthesize appId;
- (BOOL) hasAuthor {
  return !!hasAuthor_;
}
- (void) setHasAuthor:(BOOL) value {
  hasAuthor_ = !!value;
}
@synthesize author;
- (BOOL) hasTargetUser {
  return !!hasTargetUser_;
}
- (void) setHasTargetUser:(BOOL) value {
  hasTargetUser_ = !!value;
}
@synthesize targetUser;
- (BOOL) hasContestId {
  return !!hasContestId_;
}
- (void) setHasContestId:(BOOL) value {
  hasContestId_ = !!value;
}
@synthesize contestId;
@synthesize mutableFeedTimesList;
- (BOOL) hasDraw {
  return !!hasDraw_;
}
- (void) setHasDraw:(BOOL) value {
  hasDraw_ = !!value;
}
@synthesize draw;
- (BOOL) hasSing {
  return !!hasSing_;
}
- (void) setHasSing:(BOOL) value {
  hasSing_ = !!value;
}
@synthesize sing;
- (BOOL) hasAskPs {
  return !!hasAskPs_;
}
- (void) setHasAskPs:(BOOL) value {
  hasAskPs_ = !!value;
}
@synthesize askPs;
- (BOOL) hasAskPsOpus {
  return !!hasAskPsOpus_;
}
- (void) setHasAskPsOpus:(BOOL) value {
  hasAskPsOpus_ = !!value;
}
@synthesize askPsOpus;
- (BOOL) hasLocalDataUrl {
  return !!hasLocalDataUrl_;
}
- (void) setHasLocalDataUrl:(BOOL) value {
  hasLocalDataUrl_ = !!value;
}
@synthesize localDataUrl;
- (BOOL) hasLocalImageUrl {
  return !!hasLocalImageUrl_;
}
- (void) setHasLocalImageUrl:(BOOL) value {
  hasLocalImageUrl_ = !!value;
}
@synthesize localImageUrl;
- (BOOL) hasLocalThumbImageUrl {
  return !!hasLocalThumbImageUrl_;
}
- (void) setHasLocalThumbImageUrl:(BOOL) value {
  hasLocalThumbImageUrl_ = !!value;
}
@synthesize localThumbImageUrl;
- (BOOL) hasIsRecovery {
  return !!hasIsRecovery_;
}
- (void) setHasIsRecovery:(BOOL) value {
  hasIsRecovery_ = !!value;
}
- (BOOL) isRecovery {
  return !!isRecovery_;
}
- (void) setIsRecovery:(BOOL) value {
  isRecovery_ = !!value;
}
- (BOOL) hasStoreType {
  return !!hasStoreType_;
}
- (void) setHasStoreType:(BOOL) value {
  hasStoreType_ = !!value;
}
@synthesize storeType;
- (void) dealloc {
  self.opusId = nil;
  self.name = nil;
  self.desc = nil;
  self.image = nil;
  self.thumbImage = nil;
  self.dataUrl = nil;
  self.deviceName = nil;
  self.appId = nil;
  self.author = nil;
  self.targetUser = nil;
  self.contestId = nil;
  self.mutableFeedTimesList = nil;
  self.draw = nil;
  self.sing = nil;
  self.askPs = nil;
  self.askPsOpus = nil;
  self.localDataUrl = nil;
  self.localImageUrl = nil;
  self.localThumbImageUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.opusId = @"";
    self.type = PBOpusTypeUnknown;
    self.name = @"";
    self.desc = @"";
    self.image = @"";
    self.thumbImage = @"";
    self.dataUrl = @"";
    self.language = PBLanguageChinese;
    self.category = PBOpusCategoryTypeDrawCategory;
    self.createDate = 0;
    self.status = 0;
    self.deviceType = 0;
    self.deviceName = @"";
    self.appId = @"";
    self.author = [PBGameUser defaultInstance];
    self.targetUser = [PBGameUser defaultInstance];
    self.contestId = @"";
    self.draw = [PBDrawOpus defaultInstance];
    self.sing = [PBSingOpus defaultInstance];
    self.askPs = [PBAskPs defaultInstance];
    self.askPsOpus = [PBAskPsOpus defaultInstance];
    self.localDataUrl = @"";
    self.localImageUrl = @"";
    self.localThumbImageUrl = @"";
    self.isRecovery = NO;
    self.storeType = PBOpusStoreTypeNormalOpus;
  }
  return self;
}
static PBOpus* defaultPBOpusInstance = nil;
+ (void) initialize {
  if (self == [PBOpus class]) {
    defaultPBOpusInstance = [[PBOpus alloc] init];
  }
}
+ (PBOpus*) defaultInstance {
  return defaultPBOpusInstance;
}
- (PBOpus*) defaultInstance {
  return defaultPBOpusInstance;
}
- (NSArray*) feedTimesList {
  return mutableFeedTimesList;
}
- (PBFeedTimes*) feedTimesAtIndex:(int32_t) index {
  id value = [mutableFeedTimesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasOpusId) {
    return NO;
  }
  if (self.hasAuthor) {
    if (!self.author.isInitialized) {
      return NO;
    }
  }
  if (self.hasTargetUser) {
    if (!self.targetUser.isInitialized) {
      return NO;
    }
  }
  for (PBFeedTimes* element in self.feedTimesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (self.hasSing) {
    if (!self.sing.isInitialized) {
      return NO;
    }
  }
  if (self.hasAskPsOpus) {
    if (!self.askPsOpus.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOpusId) {
    [output writeString:1 value:self.opusId];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasDesc) {
    [output writeString:4 value:self.desc];
  }
  if (self.hasImage) {
    [output writeString:5 value:self.image];
  }
  if (self.hasThumbImage) {
    [output writeString:6 value:self.thumbImage];
  }
  if (self.hasDataUrl) {
    [output writeString:9 value:self.dataUrl];
  }
  if (self.hasLanguage) {
    [output writeEnum:10 value:self.language];
  }
  if (self.hasCategory) {
    [output writeEnum:11 value:self.category];
  }
  if (self.hasCreateDate) {
    [output writeInt32:15 value:self.createDate];
  }
  if (self.hasStatus) {
    [output writeInt32:20 value:self.status];
  }
  if (self.hasDeviceType) {
    [output writeInt32:25 value:self.deviceType];
  }
  if (self.hasDeviceName) {
    [output writeString:26 value:self.deviceName];
  }
  if (self.hasAppId) {
    [output writeString:28 value:self.appId];
  }
  if (self.hasAuthor) {
    [output writeMessage:35 value:self.author];
  }
  if (self.hasTargetUser) {
    [output writeMessage:41 value:self.targetUser];
  }
  if (self.hasContestId) {
    [output writeString:42 value:self.contestId];
  }
  for (PBFeedTimes* element in self.feedTimesList) {
    [output writeMessage:45 value:element];
  }
  if (self.hasDraw) {
    [output writeMessage:101 value:self.draw];
  }
  if (self.hasSing) {
    [output writeMessage:102 value:self.sing];
  }
  if (self.hasAskPs) {
    [output writeMessage:103 value:self.askPs];
  }
  if (self.hasAskPsOpus) {
    [output writeMessage:104 value:self.askPsOpus];
  }
  if (self.hasLocalDataUrl) {
    [output writeString:150 value:self.localDataUrl];
  }
  if (self.hasLocalImageUrl) {
    [output writeString:151 value:self.localImageUrl];
  }
  if (self.hasLocalThumbImageUrl) {
    [output writeString:152 value:self.localThumbImageUrl];
  }
  if (self.hasIsRecovery) {
    [output writeBool:153 value:self.isRecovery];
  }
  if (self.hasStoreType) {
    [output writeEnum:200 value:self.storeType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOpusId) {
    size += computeStringSize(1, self.opusId);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasDesc) {
    size += computeStringSize(4, self.desc);
  }
  if (self.hasImage) {
    size += computeStringSize(5, self.image);
  }
  if (self.hasThumbImage) {
    size += computeStringSize(6, self.thumbImage);
  }
  if (self.hasDataUrl) {
    size += computeStringSize(9, self.dataUrl);
  }
  if (self.hasLanguage) {
    size += computeEnumSize(10, self.language);
  }
  if (self.hasCategory) {
    size += computeEnumSize(11, self.category);
  }
  if (self.hasCreateDate) {
    size += computeInt32Size(15, self.createDate);
  }
  if (self.hasStatus) {
    size += computeInt32Size(20, self.status);
  }
  if (self.hasDeviceType) {
    size += computeInt32Size(25, self.deviceType);
  }
  if (self.hasDeviceName) {
    size += computeStringSize(26, self.deviceName);
  }
  if (self.hasAppId) {
    size += computeStringSize(28, self.appId);
  }
  if (self.hasAuthor) {
    size += computeMessageSize(35, self.author);
  }
  if (self.hasTargetUser) {
    size += computeMessageSize(41, self.targetUser);
  }
  if (self.hasContestId) {
    size += computeStringSize(42, self.contestId);
  }
  for (PBFeedTimes* element in self.feedTimesList) {
    size += computeMessageSize(45, element);
  }
  if (self.hasDraw) {
    size += computeMessageSize(101, self.draw);
  }
  if (self.hasSing) {
    size += computeMessageSize(102, self.sing);
  }
  if (self.hasAskPs) {
    size += computeMessageSize(103, self.askPs);
  }
  if (self.hasAskPsOpus) {
    size += computeMessageSize(104, self.askPsOpus);
  }
  if (self.hasLocalDataUrl) {
    size += computeStringSize(150, self.localDataUrl);
  }
  if (self.hasLocalImageUrl) {
    size += computeStringSize(151, self.localImageUrl);
  }
  if (self.hasLocalThumbImageUrl) {
    size += computeStringSize(152, self.localThumbImageUrl);
  }
  if (self.hasIsRecovery) {
    size += computeBoolSize(153, self.isRecovery);
  }
  if (self.hasStoreType) {
    size += computeEnumSize(200, self.storeType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBOpus*) parseFromData:(NSData*) data {
  return (PBOpus*)[[[PBOpus builder] mergeFromData:data] build];
}
+ (PBOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input {
  return (PBOpus*)[[[PBOpus builder] mergeFromInputStream:input] build];
}
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBOpus*)[[[PBOpus builder] mergeFromCodedInputStream:input] build];
}
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBOpus*)[[[PBOpus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBOpus_Builder*) builder {
  return [[[PBOpus_Builder alloc] init] autorelease];
}
+ (PBOpus_Builder*) builderWithPrototype:(PBOpus*) prototype {
  return [[PBOpus builder] mergeFrom:prototype];
}
- (PBOpus_Builder*) builder {
  return [PBOpus builder];
}
@end

@interface PBOpus_Builder()
@property (retain) PBOpus* result;
@end

@implementation PBOpus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBOpus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBOpus_Builder*) clear {
  self.result = [[[PBOpus alloc] init] autorelease];
  return self;
}
- (PBOpus_Builder*) clone {
  return [PBOpus builderWithPrototype:result];
}
- (PBOpus*) defaultInstance {
  return [PBOpus defaultInstance];
}
- (PBOpus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBOpus*) buildPartial {
  PBOpus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBOpus_Builder*) mergeFrom:(PBOpus*) other {
  if (other == [PBOpus defaultInstance]) {
    return self;
  }
  if (other.hasOpusId) {
    [self setOpusId:other.opusId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasImage) {
    [self setImage:other.image];
  }
  if (other.hasThumbImage) {
    [self setThumbImage:other.thumbImage];
  }
  if (other.hasDataUrl) {
    [self setDataUrl:other.dataUrl];
  }
  if (other.hasLanguage) {
    [self setLanguage:other.language];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  if (other.hasCreateDate) {
    [self setCreateDate:other.createDate];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasDeviceName) {
    [self setDeviceName:other.deviceName];
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasAuthor) {
    [self mergeAuthor:other.author];
  }
  if (other.hasTargetUser) {
    [self mergeTargetUser:other.targetUser];
  }
  if (other.hasContestId) {
    [self setContestId:other.contestId];
  }
  if (other.mutableFeedTimesList.count > 0) {
    if (result.mutableFeedTimesList == nil) {
      result.mutableFeedTimesList = [NSMutableArray array];
    }
    [result.mutableFeedTimesList addObjectsFromArray:other.mutableFeedTimesList];
  }
  if (other.hasDraw) {
    [self mergeDraw:other.draw];
  }
  if (other.hasSing) {
    [self mergeSing:other.sing];
  }
  if (other.hasAskPs) {
    [self mergeAskPs:other.askPs];
  }
  if (other.hasAskPsOpus) {
    [self mergeAskPsOpus:other.askPsOpus];
  }
  if (other.hasLocalDataUrl) {
    [self setLocalDataUrl:other.localDataUrl];
  }
  if (other.hasLocalImageUrl) {
    [self setLocalImageUrl:other.localImageUrl];
  }
  if (other.hasLocalThumbImageUrl) {
    [self setLocalThumbImageUrl:other.localThumbImageUrl];
  }
  if (other.hasIsRecovery) {
    [self setIsRecovery:other.isRecovery];
  }
  if (other.hasStoreType) {
    [self setStoreType:other.storeType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setOpusId:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (PBOpusTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setDesc:[input readString]];
        break;
      }
      case 42: {
        [self setImage:[input readString]];
        break;
      }
      case 50: {
        [self setThumbImage:[input readString]];
        break;
      }
      case 74: {
        [self setDataUrl:[input readString]];
        break;
      }
      case 80: {
        int32_t value = [input readEnum];
        if (PBLanguageIsValidValue(value)) {
          [self setLanguage:value];
        } else {
          [unknownFields mergeVarintField:10 value:value];
        }
        break;
      }
      case 88: {
        int32_t value = [input readEnum];
        if (PBOpusCategoryTypeIsValidValue(value)) {
          [self setCategory:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 120: {
        [self setCreateDate:[input readInt32]];
        break;
      }
      case 160: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 200: {
        [self setDeviceType:[input readInt32]];
        break;
      }
      case 210: {
        [self setDeviceName:[input readString]];
        break;
      }
      case 226: {
        [self setAppId:[input readString]];
        break;
      }
      case 282: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasAuthor) {
          [subBuilder mergeFrom:self.author];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuthor:[subBuilder buildPartial]];
        break;
      }
      case 330: {
        PBGameUser_Builder* subBuilder = [PBGameUser builder];
        if (self.hasTargetUser) {
          [subBuilder mergeFrom:self.targetUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTargetUser:[subBuilder buildPartial]];
        break;
      }
      case 338: {
        [self setContestId:[input readString]];
        break;
      }
      case 362: {
        PBFeedTimes_Builder* subBuilder = [PBFeedTimes builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeedTimes:[subBuilder buildPartial]];
        break;
      }
      case 810: {
        PBDrawOpus_Builder* subBuilder = [PBDrawOpus builder];
        if (self.hasDraw) {
          [subBuilder mergeFrom:self.draw];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDraw:[subBuilder buildPartial]];
        break;
      }
      case 818: {
        PBSingOpus_Builder* subBuilder = [PBSingOpus builder];
        if (self.hasSing) {
          [subBuilder mergeFrom:self.sing];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSing:[subBuilder buildPartial]];
        break;
      }
      case 826: {
        PBAskPs_Builder* subBuilder = [PBAskPs builder];
        if (self.hasAskPs) {
          [subBuilder mergeFrom:self.askPs];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAskPs:[subBuilder buildPartial]];
        break;
      }
      case 834: {
        PBAskPsOpus_Builder* subBuilder = [PBAskPsOpus builder];
        if (self.hasAskPsOpus) {
          [subBuilder mergeFrom:self.askPsOpus];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAskPsOpus:[subBuilder buildPartial]];
        break;
      }
      case 1202: {
        [self setLocalDataUrl:[input readString]];
        break;
      }
      case 1210: {
        [self setLocalImageUrl:[input readString]];
        break;
      }
      case 1218: {
        [self setLocalThumbImageUrl:[input readString]];
        break;
      }
      case 1224: {
        [self setIsRecovery:[input readBool]];
        break;
      }
      case 1600: {
        int32_t value = [input readEnum];
        if (PBOpusStoreTypeIsValidValue(value)) {
          [self setStoreType:value];
        } else {
          [unknownFields mergeVarintField:200 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasOpusId {
  return result.hasOpusId;
}
- (NSString*) opusId {
  return result.opusId;
}
- (PBOpus_Builder*) setOpusId:(NSString*) value {
  result.hasOpusId = YES;
  result.opusId = value;
  return self;
}
- (PBOpus_Builder*) clearOpusId {
  result.hasOpusId = NO;
  result.opusId = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBOpusType) type {
  return result.type;
}
- (PBOpus_Builder*) setType:(PBOpusType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBOpus_Builder*) clearType {
  result.hasType = NO;
  result.type = PBOpusTypeUnknown;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBOpus_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBOpus_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (PBOpus_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (PBOpus_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasImage {
  return result.hasImage;
}
- (NSString*) image {
  return result.image;
}
- (PBOpus_Builder*) setImage:(NSString*) value {
  result.hasImage = YES;
  result.image = value;
  return self;
}
- (PBOpus_Builder*) clearImage {
  result.hasImage = NO;
  result.image = @"";
  return self;
}
- (BOOL) hasThumbImage {
  return result.hasThumbImage;
}
- (NSString*) thumbImage {
  return result.thumbImage;
}
- (PBOpus_Builder*) setThumbImage:(NSString*) value {
  result.hasThumbImage = YES;
  result.thumbImage = value;
  return self;
}
- (PBOpus_Builder*) clearThumbImage {
  result.hasThumbImage = NO;
  result.thumbImage = @"";
  return self;
}
- (BOOL) hasDataUrl {
  return result.hasDataUrl;
}
- (NSString*) dataUrl {
  return result.dataUrl;
}
- (PBOpus_Builder*) setDataUrl:(NSString*) value {
  result.hasDataUrl = YES;
  result.dataUrl = value;
  return self;
}
- (PBOpus_Builder*) clearDataUrl {
  result.hasDataUrl = NO;
  result.dataUrl = @"";
  return self;
}
- (BOOL) hasLanguage {
  return result.hasLanguage;
}
- (PBLanguage) language {
  return result.language;
}
- (PBOpus_Builder*) setLanguage:(PBLanguage) value {
  result.hasLanguage = YES;
  result.language = value;
  return self;
}
- (PBOpus_Builder*) clearLanguage {
  result.hasLanguage = NO;
  result.language = PBLanguageChinese;
  return self;
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (PBOpusCategoryType) category {
  return result.category;
}
- (PBOpus_Builder*) setCategory:(PBOpusCategoryType) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (PBOpus_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = PBOpusCategoryTypeDrawCategory;
  return self;
}
- (BOOL) hasCreateDate {
  return result.hasCreateDate;
}
- (int32_t) createDate {
  return result.createDate;
}
- (PBOpus_Builder*) setCreateDate:(int32_t) value {
  result.hasCreateDate = YES;
  result.createDate = value;
  return self;
}
- (PBOpus_Builder*) clearCreateDate {
  result.hasCreateDate = NO;
  result.createDate = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (PBOpus_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBOpus_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasDeviceType {
  return result.hasDeviceType;
}
- (int32_t) deviceType {
  return result.deviceType;
}
- (PBOpus_Builder*) setDeviceType:(int32_t) value {
  result.hasDeviceType = YES;
  result.deviceType = value;
  return self;
}
- (PBOpus_Builder*) clearDeviceType {
  result.hasDeviceType = NO;
  result.deviceType = 0;
  return self;
}
- (BOOL) hasDeviceName {
  return result.hasDeviceName;
}
- (NSString*) deviceName {
  return result.deviceName;
}
- (PBOpus_Builder*) setDeviceName:(NSString*) value {
  result.hasDeviceName = YES;
  result.deviceName = value;
  return self;
}
- (PBOpus_Builder*) clearDeviceName {
  result.hasDeviceName = NO;
  result.deviceName = @"";
  return self;
}
- (BOOL) hasAppId {
  return result.hasAppId;
}
- (NSString*) appId {
  return result.appId;
}
- (PBOpus_Builder*) setAppId:(NSString*) value {
  result.hasAppId = YES;
  result.appId = value;
  return self;
}
- (PBOpus_Builder*) clearAppId {
  result.hasAppId = NO;
  result.appId = @"";
  return self;
}
- (BOOL) hasAuthor {
  return result.hasAuthor;
}
- (PBGameUser*) author {
  return result.author;
}
- (PBOpus_Builder*) setAuthor:(PBGameUser*) value {
  result.hasAuthor = YES;
  result.author = value;
  return self;
}
- (PBOpus_Builder*) setAuthorBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setAuthor:[builderForValue build]];
}
- (PBOpus_Builder*) mergeAuthor:(PBGameUser*) value {
  if (result.hasAuthor &&
      result.author != [PBGameUser defaultInstance]) {
    result.author =
      [[[PBGameUser builderWithPrototype:result.author] mergeFrom:value] buildPartial];
  } else {
    result.author = value;
  }
  result.hasAuthor = YES;
  return self;
}
- (PBOpus_Builder*) clearAuthor {
  result.hasAuthor = NO;
  result.author = [PBGameUser defaultInstance];
  return self;
}
- (BOOL) hasTargetUser {
  return result.hasTargetUser;
}
- (PBGameUser*) targetUser {
  return result.targetUser;
}
- (PBOpus_Builder*) setTargetUser:(PBGameUser*) value {
  result.hasTargetUser = YES;
  result.targetUser = value;
  return self;
}
- (PBOpus_Builder*) setTargetUserBuilder:(PBGameUser_Builder*) builderForValue {
  return [self setTargetUser:[builderForValue build]];
}
- (PBOpus_Builder*) mergeTargetUser:(PBGameUser*) value {
  if (result.hasTargetUser &&
      result.targetUser != [PBGameUser defaultInstance]) {
    result.targetUser =
      [[[PBGameUser builderWithPrototype:result.targetUser] mergeFrom:value] buildPartial];
  } else {
    result.targetUser = value;
  }
  result.hasTargetUser = YES;
  return self;
}
- (PBOpus_Builder*) clearTargetUser {
  result.hasTargetUser = NO;
  result.targetUser = [PBGameUser defaultInstance];
  return self;
}
- (BOOL) hasContestId {
  return result.hasContestId;
}
- (NSString*) contestId {
  return result.contestId;
}
- (PBOpus_Builder*) setContestId:(NSString*) value {
  result.hasContestId = YES;
  result.contestId = value;
  return self;
}
- (PBOpus_Builder*) clearContestId {
  result.hasContestId = NO;
  result.contestId = @"";
  return self;
}
- (NSArray*) feedTimesList {
  if (result.mutableFeedTimesList == nil) { return [NSArray array]; }
  return result.mutableFeedTimesList;
}
- (PBFeedTimes*) feedTimesAtIndex:(int32_t) index {
  return [result feedTimesAtIndex:index];
}
- (PBOpus_Builder*) replaceFeedTimesAtIndex:(int32_t) index with:(PBFeedTimes*) value {
  [result.mutableFeedTimesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBOpus_Builder*) addAllFeedTimes:(NSArray*) values {
  if (result.mutableFeedTimesList == nil) {
    result.mutableFeedTimesList = [NSMutableArray array];
  }
  [result.mutableFeedTimesList addObjectsFromArray:values];
  return self;
}
- (PBOpus_Builder*) clearFeedTimesList {
  result.mutableFeedTimesList = nil;
  return self;
}
- (PBOpus_Builder*) addFeedTimes:(PBFeedTimes*) value {
  if (result.mutableFeedTimesList == nil) {
    result.mutableFeedTimesList = [NSMutableArray array];
  }
  [result.mutableFeedTimesList addObject:value];
  return self;
}
- (BOOL) hasDraw {
  return result.hasDraw;
}
- (PBDrawOpus*) draw {
  return result.draw;
}
- (PBOpus_Builder*) setDraw:(PBDrawOpus*) value {
  result.hasDraw = YES;
  result.draw = value;
  return self;
}
- (PBOpus_Builder*) setDrawBuilder:(PBDrawOpus_Builder*) builderForValue {
  return [self setDraw:[builderForValue build]];
}
- (PBOpus_Builder*) mergeDraw:(PBDrawOpus*) value {
  if (result.hasDraw &&
      result.draw != [PBDrawOpus defaultInstance]) {
    result.draw =
      [[[PBDrawOpus builderWithPrototype:result.draw] mergeFrom:value] buildPartial];
  } else {
    result.draw = value;
  }
  result.hasDraw = YES;
  return self;
}
- (PBOpus_Builder*) clearDraw {
  result.hasDraw = NO;
  result.draw = [PBDrawOpus defaultInstance];
  return self;
}
- (BOOL) hasSing {
  return result.hasSing;
}
- (PBSingOpus*) sing {
  return result.sing;
}
- (PBOpus_Builder*) setSing:(PBSingOpus*) value {
  result.hasSing = YES;
  result.sing = value;
  return self;
}
- (PBOpus_Builder*) setSingBuilder:(PBSingOpus_Builder*) builderForValue {
  return [self setSing:[builderForValue build]];
}
- (PBOpus_Builder*) mergeSing:(PBSingOpus*) value {
  if (result.hasSing &&
      result.sing != [PBSingOpus defaultInstance]) {
    result.sing =
      [[[PBSingOpus builderWithPrototype:result.sing] mergeFrom:value] buildPartial];
  } else {
    result.sing = value;
  }
  result.hasSing = YES;
  return self;
}
- (PBOpus_Builder*) clearSing {
  result.hasSing = NO;
  result.sing = [PBSingOpus defaultInstance];
  return self;
}
- (BOOL) hasAskPs {
  return result.hasAskPs;
}
- (PBAskPs*) askPs {
  return result.askPs;
}
- (PBOpus_Builder*) setAskPs:(PBAskPs*) value {
  result.hasAskPs = YES;
  result.askPs = value;
  return self;
}
- (PBOpus_Builder*) setAskPsBuilder:(PBAskPs_Builder*) builderForValue {
  return [self setAskPs:[builderForValue build]];
}
- (PBOpus_Builder*) mergeAskPs:(PBAskPs*) value {
  if (result.hasAskPs &&
      result.askPs != [PBAskPs defaultInstance]) {
    result.askPs =
      [[[PBAskPs builderWithPrototype:result.askPs] mergeFrom:value] buildPartial];
  } else {
    result.askPs = value;
  }
  result.hasAskPs = YES;
  return self;
}
- (PBOpus_Builder*) clearAskPs {
  result.hasAskPs = NO;
  result.askPs = [PBAskPs defaultInstance];
  return self;
}
- (BOOL) hasAskPsOpus {
  return result.hasAskPsOpus;
}
- (PBAskPsOpus*) askPsOpus {
  return result.askPsOpus;
}
- (PBOpus_Builder*) setAskPsOpus:(PBAskPsOpus*) value {
  result.hasAskPsOpus = YES;
  result.askPsOpus = value;
  return self;
}
- (PBOpus_Builder*) setAskPsOpusBuilder:(PBAskPsOpus_Builder*) builderForValue {
  return [self setAskPsOpus:[builderForValue build]];
}
- (PBOpus_Builder*) mergeAskPsOpus:(PBAskPsOpus*) value {
  if (result.hasAskPsOpus &&
      result.askPsOpus != [PBAskPsOpus defaultInstance]) {
    result.askPsOpus =
      [[[PBAskPsOpus builderWithPrototype:result.askPsOpus] mergeFrom:value] buildPartial];
  } else {
    result.askPsOpus = value;
  }
  result.hasAskPsOpus = YES;
  return self;
}
- (PBOpus_Builder*) clearAskPsOpus {
  result.hasAskPsOpus = NO;
  result.askPsOpus = [PBAskPsOpus defaultInstance];
  return self;
}
- (BOOL) hasLocalDataUrl {
  return result.hasLocalDataUrl;
}
- (NSString*) localDataUrl {
  return result.localDataUrl;
}
- (PBOpus_Builder*) setLocalDataUrl:(NSString*) value {
  result.hasLocalDataUrl = YES;
  result.localDataUrl = value;
  return self;
}
- (PBOpus_Builder*) clearLocalDataUrl {
  result.hasLocalDataUrl = NO;
  result.localDataUrl = @"";
  return self;
}
- (BOOL) hasLocalImageUrl {
  return result.hasLocalImageUrl;
}
- (NSString*) localImageUrl {
  return result.localImageUrl;
}
- (PBOpus_Builder*) setLocalImageUrl:(NSString*) value {
  result.hasLocalImageUrl = YES;
  result.localImageUrl = value;
  return self;
}
- (PBOpus_Builder*) clearLocalImageUrl {
  result.hasLocalImageUrl = NO;
  result.localImageUrl = @"";
  return self;
}
- (BOOL) hasLocalThumbImageUrl {
  return result.hasLocalThumbImageUrl;
}
- (NSString*) localThumbImageUrl {
  return result.localThumbImageUrl;
}
- (PBOpus_Builder*) setLocalThumbImageUrl:(NSString*) value {
  result.hasLocalThumbImageUrl = YES;
  result.localThumbImageUrl = value;
  return self;
}
- (PBOpus_Builder*) clearLocalThumbImageUrl {
  result.hasLocalThumbImageUrl = NO;
  result.localThumbImageUrl = @"";
  return self;
}
- (BOOL) hasIsRecovery {
  return result.hasIsRecovery;
}
- (BOOL) isRecovery {
  return result.isRecovery;
}
- (PBOpus_Builder*) setIsRecovery:(BOOL) value {
  result.hasIsRecovery = YES;
  result.isRecovery = value;
  return self;
}
- (PBOpus_Builder*) clearIsRecovery {
  result.hasIsRecovery = NO;
  result.isRecovery = NO;
  return self;
}
- (BOOL) hasStoreType {
  return result.hasStoreType;
}
- (PBOpusStoreType) storeType {
  return result.storeType;
}
- (PBOpus_Builder*) setStoreType:(PBOpusStoreType) value {
  result.hasStoreType = YES;
  result.storeType = value;
  return self;
}
- (PBOpus_Builder*) clearStoreType {
  result.hasStoreType = NO;
  result.storeType = PBOpusStoreTypeNormalOpus;
  return self;
}
@end

@interface PBRanking ()
@property int32_t totalPass;
@property int32_t totalEarn;
@property PBGameCurrency currency;
@property int32_t lead;
@end

@implementation PBRanking

- (BOOL) hasTotalPass {
  return !!hasTotalPass_;
}
- (void) setHasTotalPass:(BOOL) value {
  hasTotalPass_ = !!value;
}
@synthesize totalPass;
- (BOOL) hasTotalEarn {
  return !!hasTotalEarn_;
}
- (void) setHasTotalEarn:(BOOL) value {
  hasTotalEarn_ = !!value;
}
@synthesize totalEarn;
- (BOOL) hasCurrency {
  return !!hasCurrency_;
}
- (void) setHasCurrency:(BOOL) value {
  hasCurrency_ = !!value;
}
@synthesize currency;
- (BOOL) hasLead {
  return !!hasLead_;
}
- (void) setHasLead:(BOOL) value {
  hasLead_ = !!value;
}
@synthesize lead;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.totalPass = 0;
    self.totalEarn = 0;
    self.currency = PBGameCurrencyCoin;
    self.lead = 0;
  }
  return self;
}
static PBRanking* defaultPBRankingInstance = nil;
+ (void) initialize {
  if (self == [PBRanking class]) {
    defaultPBRankingInstance = [[PBRanking alloc] init];
  }
}
+ (PBRanking*) defaultInstance {
  return defaultPBRankingInstance;
}
- (PBRanking*) defaultInstance {
  return defaultPBRankingInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTotalPass) {
    [output writeInt32:1 value:self.totalPass];
  }
  if (self.hasTotalEarn) {
    [output writeInt32:2 value:self.totalEarn];
  }
  if (self.hasCurrency) {
    [output writeEnum:3 value:self.currency];
  }
  if (self.hasLead) {
    [output writeInt32:5 value:self.lead];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTotalPass) {
    size += computeInt32Size(1, self.totalPass);
  }
  if (self.hasTotalEarn) {
    size += computeInt32Size(2, self.totalEarn);
  }
  if (self.hasCurrency) {
    size += computeEnumSize(3, self.currency);
  }
  if (self.hasLead) {
    size += computeInt32Size(5, self.lead);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBRanking*) parseFromData:(NSData*) data {
  return (PBRanking*)[[[PBRanking builder] mergeFromData:data] build];
}
+ (PBRanking*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRanking*)[[[PBRanking builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBRanking*) parseFromInputStream:(NSInputStream*) input {
  return (PBRanking*)[[[PBRanking builder] mergeFromInputStream:input] build];
}
+ (PBRanking*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRanking*)[[[PBRanking builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBRanking*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBRanking*)[[[PBRanking builder] mergeFromCodedInputStream:input] build];
}
+ (PBRanking*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRanking*)[[[PBRanking builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBRanking_Builder*) builder {
  return [[[PBRanking_Builder alloc] init] autorelease];
}
+ (PBRanking_Builder*) builderWithPrototype:(PBRanking*) prototype {
  return [[PBRanking builder] mergeFrom:prototype];
}
- (PBRanking_Builder*) builder {
  return [PBRanking builder];
}
@end

@interface PBRanking_Builder()
@property (retain) PBRanking* result;
@end

@implementation PBRanking_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBRanking alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBRanking_Builder*) clear {
  self.result = [[[PBRanking alloc] init] autorelease];
  return self;
}
- (PBRanking_Builder*) clone {
  return [PBRanking builderWithPrototype:result];
}
- (PBRanking*) defaultInstance {
  return [PBRanking defaultInstance];
}
- (PBRanking*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBRanking*) buildPartial {
  PBRanking* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBRanking_Builder*) mergeFrom:(PBRanking*) other {
  if (other == [PBRanking defaultInstance]) {
    return self;
  }
  if (other.hasTotalPass) {
    [self setTotalPass:other.totalPass];
  }
  if (other.hasTotalEarn) {
    [self setTotalEarn:other.totalEarn];
  }
  if (other.hasCurrency) {
    [self setCurrency:other.currency];
  }
  if (other.hasLead) {
    [self setLead:other.lead];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBRanking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBRanking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTotalPass:[input readInt32]];
        break;
      }
      case 16: {
        [self setTotalEarn:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (PBGameCurrencyIsValidValue(value)) {
          [self setCurrency:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 40: {
        [self setLead:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTotalPass {
  return result.hasTotalPass;
}
- (int32_t) totalPass {
  return result.totalPass;
}
- (PBRanking_Builder*) setTotalPass:(int32_t) value {
  result.hasTotalPass = YES;
  result.totalPass = value;
  return self;
}
- (PBRanking_Builder*) clearTotalPass {
  result.hasTotalPass = NO;
  result.totalPass = 0;
  return self;
}
- (BOOL) hasTotalEarn {
  return result.hasTotalEarn;
}
- (int32_t) totalEarn {
  return result.totalEarn;
}
- (PBRanking_Builder*) setTotalEarn:(int32_t) value {
  result.hasTotalEarn = YES;
  result.totalEarn = value;
  return self;
}
- (PBRanking_Builder*) clearTotalEarn {
  result.hasTotalEarn = NO;
  result.totalEarn = 0;
  return self;
}
- (BOOL) hasCurrency {
  return result.hasCurrency;
}
- (PBGameCurrency) currency {
  return result.currency;
}
- (PBRanking_Builder*) setCurrency:(PBGameCurrency) value {
  result.hasCurrency = YES;
  result.currency = value;
  return self;
}
- (PBRanking_Builder*) clearCurrency {
  result.hasCurrency = NO;
  result.currency = PBGameCurrencyCoin;
  return self;
}
- (BOOL) hasLead {
  return result.hasLead;
}
- (int32_t) lead {
  return result.lead;
}
- (PBRanking_Builder*) setLead:(int32_t) value {
  result.hasLead = YES;
  result.lead = value;
  return self;
}
- (PBRanking_Builder*) clearLead {
  result.hasLead = NO;
  result.lead = 0;
  return self;
}
@end

