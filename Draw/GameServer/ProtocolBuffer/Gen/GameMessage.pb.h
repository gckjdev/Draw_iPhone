// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameConstants.pb.h"
#import "GameBasic.pb.h"
#import "Draw.pb.h"
#import "Dice.pb.h"
#import "ZhaJinHua.pb.h"
#import "Bbs.pb.h"
#import "Opus.pb.h"
#import "Photo.pb.h"
#import "Sing.pb.h"

@class BetDiceRequest;
@class BetDiceRequest_Builder;
@class BetDiceResponse;
@class BetDiceResponse_Builder;
@class BetRequest;
@class BetRequest_Builder;
@class BetResponse;
@class BetResponse_Builder;
@class CallDiceRequest;
@class CallDiceRequest_Builder;
@class CallDiceResponse;
@class CallDiceResponse_Builder;
@class ChangeCardRequest;
@class ChangeCardRequest_Builder;
@class ChangeCardResponse;
@class ChangeCardResponse_Builder;
@class CheckCardRequest;
@class CheckCardRequest_Builder;
@class CheckCardResponse;
@class CheckCardResponse_Builder;
@class CompareCardRequest;
@class CompareCardRequest_Builder;
@class CompareCardResponse;
@class CompareCardResponse_Builder;
@class CreateRoomRequest;
@class CreateRoomRequest_Builder;
@class CreateRoomResponse;
@class CreateRoomResponse_Builder;
@class DataQueryResponse;
@class DataQueryResponse_Builder;
@class FacetimeChatRequest;
@class FacetimeChatRequest_Builder;
@class FacetimeChatResponse;
@class FacetimeChatResponse_Builder;
@class FoldCardRequest;
@class FoldCardRequest_Builder;
@class FoldCardResponse;
@class FoldCardResponse_Builder;
@class GameChatRequest;
@class GameChatRequest_Builder;
@class GameChatResponse;
@class GameChatResponse_Builder;
@class GameMessage;
@class GameMessage_Builder;
@class GameOverNotificationRequest;
@class GameOverNotificationRequest_Builder;
@class GameOverNotificationResponse;
@class GameOverNotificationResponse_Builder;
@class GameStartNotificationRequest;
@class GameStartNotificationRequest_Builder;
@class GameStartNotificationResponse;
@class GameStartNotificationResponse_Builder;
@class GeneralNotification;
@class GeneralNotification_Builder;
@class GetRoomsRequest;
@class GetRoomsRequest_Builder;
@class GetRoomsResponse;
@class GetRoomsResponse_Builder;
@class JoinGameRequest;
@class JoinGameRequest_Builder;
@class JoinGameResponse;
@class JoinGameResponse_Builder;
@class NextPlayerStartNotificationRequest;
@class NextPlayerStartNotificationRequest_Builder;
@class NextPlayerStartNotificationResponse;
@class NextPlayerStartNotificationResponse_Builder;
@class OpenDiceRequest;
@class OpenDiceRequest_Builder;
@class OpenDiceResponse;
@class OpenDiceResponse_Builder;
@class PBActionComment;
@class PBActionComment_Builder;
@class PBActionFlower;
@class PBActionFlower_Builder;
@class PBActionGuess;
@class PBActionGuess_Builder;
@class PBActionTimes;
@class PBActionTimes_Builder;
@class PBApp;
@class PBApp_Builder;
@class PBAskPs;
@class PBAskPsOpus;
@class PBAskPsOpus_Builder;
@class PBAskPs_Builder;
@class PBBBSAction;
@class PBBBSActionSource;
@class PBBBSActionSource_Builder;
@class PBBBSAction_Builder;
@class PBBBSBoard;
@class PBBBSBoard_Builder;
@class PBBBSContent;
@class PBBBSContent_Builder;
@class PBBBSDraw;
@class PBBBSDraw_Builder;
@class PBBBSPost;
@class PBBBSPost_Builder;
@class PBBBSPrivilege;
@class PBBBSPrivilege_Builder;
@class PBBBSReward;
@class PBBBSReward_Builder;
@class PBBBSUser;
@class PBBBSUser_Builder;
@class PBColor;
@class PBColor_Builder;
@class PBCommentInfo;
@class PBCommentInfo_Builder;
@class PBDice;
@class PBDiceAction;
@class PBDiceAction_Builder;
@class PBDiceFinalCount;
@class PBDiceFinalCount_Builder;
@class PBDiceGameResult;
@class PBDiceGameResult_Builder;
@class PBDice_Builder;
@class PBDraw;
@class PBDrawAction;
@class PBDrawAction_Builder;
@class PBDrawBg;
@class PBDrawBgGroup;
@class PBDrawBgGroup_Builder;
@class PBDrawBgMeta;
@class PBDrawBgMeta_Builder;
@class PBDrawBg_Builder;
@class PBDrawOpus;
@class PBDrawOpus_Builder;
@class PBDraw_Builder;
@class PBFeed;
@class PBFeedTimes;
@class PBFeedTimes_Builder;
@class PBFeed_Builder;
@class PBFrame;
@class PBFrameList;
@class PBFrameList_Builder;
@class PBFrame_Builder;
@class PBGameItem;
@class PBGameItemList;
@class PBGameItemList_Builder;
@class PBGameItem_Builder;
@class PBGameSession;
@class PBGameSessionChanged;
@class PBGameSessionChanged_Builder;
@class PBGameSession_Builder;
@class PBGameUser;
@class PBGameUser_Builder;
@class PBHotWord;
@class PBHotWordList;
@class PBHotWordList_Builder;
@class PBHotWord_Builder;
@class PBIAPProduct;
@class PBIAPProductList;
@class PBIAPProductList_Builder;
@class PBIAPProductPrice;
@class PBIAPProductPrice_Builder;
@class PBIAPProduct_Builder;
@class PBImageShapeGroup;
@class PBImageShapeGroupMeta;
@class PBImageShapeGroupMeta_Builder;
@class PBImageShapeGroup_Builder;
@class PBItemPriceInfo;
@class PBItemPriceInfo_Builder;
@class PBKeyValue;
@class PBKeyValue_Builder;
@class PBLayout;
@class PBLayoutList;
@class PBLayoutList_Builder;
@class PBLayout_Builder;
@class PBLearnDraw;
@class PBLearnDraw_Builder;
@class PBLocalizeString;
@class PBLocalizeString_Builder;
@class PBMessage;
@class PBMessageStat;
@class PBMessageStat_Builder;
@class PBMessage_Builder;
@class PBNoCompressDrawAction;
@class PBNoCompressDrawAction_Builder;
@class PBNoCompressDrawData;
@class PBNoCompressDrawData_Builder;
@class PBOpus;
@class PBOpusAction;
@class PBOpusAction_Builder;
@class PBOpus_Builder;
@class PBPoint;
@class PBPoint_Builder;
@class PBPoker;
@class PBPoker_Builder;
@class PBPromotionInfo;
@class PBPromotionInfo_Builder;
@class PBRect;
@class PBRect_Builder;
@class PBSNSUser;
@class PBSNSUser_Builder;
@class PBSingOpus;
@class PBSingOpus_Builder;
@class PBSize;
@class PBSize_Builder;
@class PBSong;
@class PBSongCategory;
@class PBSongCategoryList;
@class PBSongCategoryList_Builder;
@class PBSongCategory_Builder;
@class PBSongList;
@class PBSongList_Builder;
@class PBSong_Builder;
@class PBTimeline;
@class PBTimeline_Builder;
@class PBUserBasicInfo;
@class PBUserBasicInfo_Builder;
@class PBUserDice;
@class PBUserDice_Builder;
@class PBUserItem;
@class PBUserItemList;
@class PBUserItemList_Builder;
@class PBUserItem_Builder;
@class PBUserLevel;
@class PBUserLevel_Builder;
@class PBUserPhoto;
@class PBUserPhotoList;
@class PBUserPhotoList_Builder;
@class PBUserPhoto_Builder;
@class PBUserResult;
@class PBUserResult_Builder;
@class PBWall;
@class PBWallOpus;
@class PBWallOpus_Builder;
@class PBWall_Builder;
@class PBZJHGameResult;
@class PBZJHGameResult_Builder;
@class PBZJHGameState;
@class PBZJHGameState_Builder;
@class PBZJHPoker;
@class PBZJHPoker_Builder;
@class PBZJHUserPlayInfo;
@class PBZJHUserPlayInfo_Builder;
@class PBZJHUserPoker;
@class PBZJHUserPoker_Builder;
@class RegisterRoomsNotificationRequest;
@class RegisterRoomsNotificationRequest_Builder;
@class RegisterRoomsNotificationResponse;
@class RegisterRoomsNotificationResponse_Builder;
@class RollDiceBeginNotificationRequest;
@class RollDiceBeginNotificationRequest_Builder;
@class RollDiceBeginNotificationResponse;
@class RollDiceBeginNotificationResponse_Builder;
@class RollDiceEndNotificationRequest;
@class RollDiceEndNotificationRequest_Builder;
@class RollDiceEndNotificationResponse;
@class RollDiceEndNotificationResponse_Builder;
@class RoomNotificationRequest;
@class RoomNotificationRequest_Builder;
@class RoomNotificationResponse;
@class RoomNotificationResponse_Builder;
@class SearchRoomRequest;
@class SearchRoomRequest_Builder;
@class SearchRoomResponse;
@class SearchRoomResponse_Builder;
@class SendDrawDataRequest;
@class SendDrawDataRequest_Builder;
@class SendDrawDataResponse;
@class SendDrawDataResponse_Builder;
@class ShowCardRequest;
@class ShowCardRequest_Builder;
@class ShowCardResponse;
@class ShowCardResponse_Builder;
@class StartGameRequest;
@class StartGameRequest_Builder;
@class StartGameResponse;
@class StartGameResponse_Builder;
@class TimeoutSettingRequest;
@class TimeoutSettingRequest_Builder;
@class TimeoutSettingResponse;
@class TimeoutSettingResponse_Builder;
@class UnRegisterRoomsNotificationRequest;
@class UnRegisterRoomsNotificationRequest_Builder;
@class UnRegisterRoomsNotificationResponse;
@class UnRegisterRoomsNotificationResponse_Builder;
@class UseItemRequest;
@class UseItemRequest_Builder;
@class UseItemResponse;
@class UseItemResponse_Builder;
@class UserDiceNotification;
@class UserDiceNotification_Builder;
typedef enum {
  BetTypeBetTypeCall = 1,
  BetTypeBetTypeRaise = 2,
} BetType;

BOOL BetTypeIsValidValue(BetType value);


@interface GameMessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface GetRoomsRequest : PBGeneratedMessage {
@private
  BOOL hasRoomType_:1;
  BOOL hasGameId_:1;
  BOOL hasKeyword_:1;
  int32_t roomType;
  NSString* gameId;
  NSString* keyword;
}
- (BOOL) hasGameId;
- (BOOL) hasRoomType;
- (BOOL) hasKeyword;
@property (readonly, retain) NSString* gameId;
@property (readonly) int32_t roomType;
@property (readonly, retain) NSString* keyword;

+ (GetRoomsRequest*) defaultInstance;
- (GetRoomsRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GetRoomsRequest_Builder*) builder;
+ (GetRoomsRequest_Builder*) builder;
+ (GetRoomsRequest_Builder*) builderWithPrototype:(GetRoomsRequest*) prototype;

+ (GetRoomsRequest*) parseFromData:(NSData*) data;
+ (GetRoomsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GetRoomsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GetRoomsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GetRoomsRequest_Builder : PBGeneratedMessage_Builder {
@private
  GetRoomsRequest* result;
}

- (GetRoomsRequest*) defaultInstance;

- (GetRoomsRequest_Builder*) clear;
- (GetRoomsRequest_Builder*) clone;

- (GetRoomsRequest*) build;
- (GetRoomsRequest*) buildPartial;

- (GetRoomsRequest_Builder*) mergeFrom:(GetRoomsRequest*) other;
- (GetRoomsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GetRoomsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (GetRoomsRequest_Builder*) setGameId:(NSString*) value;
- (GetRoomsRequest_Builder*) clearGameId;

- (BOOL) hasRoomType;
- (int32_t) roomType;
- (GetRoomsRequest_Builder*) setRoomType:(int32_t) value;
- (GetRoomsRequest_Builder*) clearRoomType;

- (BOOL) hasKeyword;
- (NSString*) keyword;
- (GetRoomsRequest_Builder*) setKeyword:(NSString*) value;
- (GetRoomsRequest_Builder*) clearKeyword;
@end

@interface GetRoomsResponse : PBGeneratedMessage {
@private
  BOOL hasRuleType_:1;
  int32_t ruleType;
  NSMutableArray* mutableSessionsList;
}
- (BOOL) hasRuleType;
@property (readonly) int32_t ruleType;
- (NSArray*) sessionsList;
- (PBGameSession*) sessionsAtIndex:(int32_t) index;

+ (GetRoomsResponse*) defaultInstance;
- (GetRoomsResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GetRoomsResponse_Builder*) builder;
+ (GetRoomsResponse_Builder*) builder;
+ (GetRoomsResponse_Builder*) builderWithPrototype:(GetRoomsResponse*) prototype;

+ (GetRoomsResponse*) parseFromData:(NSData*) data;
+ (GetRoomsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GetRoomsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GetRoomsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GetRoomsResponse_Builder : PBGeneratedMessage_Builder {
@private
  GetRoomsResponse* result;
}

- (GetRoomsResponse*) defaultInstance;

- (GetRoomsResponse_Builder*) clear;
- (GetRoomsResponse_Builder*) clone;

- (GetRoomsResponse*) build;
- (GetRoomsResponse*) buildPartial;

- (GetRoomsResponse_Builder*) mergeFrom:(GetRoomsResponse*) other;
- (GetRoomsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GetRoomsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionsList;
- (PBGameSession*) sessionsAtIndex:(int32_t) index;
- (GetRoomsResponse_Builder*) replaceSessionsAtIndex:(int32_t) index with:(PBGameSession*) value;
- (GetRoomsResponse_Builder*) addSessions:(PBGameSession*) value;
- (GetRoomsResponse_Builder*) addAllSessions:(NSArray*) values;
- (GetRoomsResponse_Builder*) clearSessionsList;

- (BOOL) hasRuleType;
- (int32_t) ruleType;
- (GetRoomsResponse_Builder*) setRuleType:(int32_t) value;
- (GetRoomsResponse_Builder*) clearRuleType;
@end

@interface CreateRoomRequest : PBGeneratedMessage {
@private
  BOOL hasRuleType_:1;
  BOOL hasVersion_:1;
  BOOL hasGameId_:1;
  BOOL hasRoomName_:1;
  BOOL hasPassword_:1;
  BOOL hasUser_:1;
  int32_t ruleType;
  int32_t version;
  NSString* gameId;
  NSString* roomName;
  NSString* password;
  PBGameUser* user;
}
- (BOOL) hasGameId;
- (BOOL) hasUser;
- (BOOL) hasRoomName;
- (BOOL) hasPassword;
- (BOOL) hasRuleType;
- (BOOL) hasVersion;
@property (readonly, retain) NSString* gameId;
@property (readonly, retain) PBGameUser* user;
@property (readonly, retain) NSString* roomName;
@property (readonly, retain) NSString* password;
@property (readonly) int32_t ruleType;
@property (readonly) int32_t version;

+ (CreateRoomRequest*) defaultInstance;
- (CreateRoomRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CreateRoomRequest_Builder*) builder;
+ (CreateRoomRequest_Builder*) builder;
+ (CreateRoomRequest_Builder*) builderWithPrototype:(CreateRoomRequest*) prototype;

+ (CreateRoomRequest*) parseFromData:(NSData*) data;
+ (CreateRoomRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CreateRoomRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CreateRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CreateRoomRequest_Builder : PBGeneratedMessage_Builder {
@private
  CreateRoomRequest* result;
}

- (CreateRoomRequest*) defaultInstance;

- (CreateRoomRequest_Builder*) clear;
- (CreateRoomRequest_Builder*) clone;

- (CreateRoomRequest*) build;
- (CreateRoomRequest*) buildPartial;

- (CreateRoomRequest_Builder*) mergeFrom:(CreateRoomRequest*) other;
- (CreateRoomRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CreateRoomRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (CreateRoomRequest_Builder*) setGameId:(NSString*) value;
- (CreateRoomRequest_Builder*) clearGameId;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (CreateRoomRequest_Builder*) setUser:(PBGameUser*) value;
- (CreateRoomRequest_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue;
- (CreateRoomRequest_Builder*) mergeUser:(PBGameUser*) value;
- (CreateRoomRequest_Builder*) clearUser;

- (BOOL) hasRoomName;
- (NSString*) roomName;
- (CreateRoomRequest_Builder*) setRoomName:(NSString*) value;
- (CreateRoomRequest_Builder*) clearRoomName;

- (BOOL) hasPassword;
- (NSString*) password;
- (CreateRoomRequest_Builder*) setPassword:(NSString*) value;
- (CreateRoomRequest_Builder*) clearPassword;

- (BOOL) hasRuleType;
- (int32_t) ruleType;
- (CreateRoomRequest_Builder*) setRuleType:(int32_t) value;
- (CreateRoomRequest_Builder*) clearRuleType;

- (BOOL) hasVersion;
- (int32_t) version;
- (CreateRoomRequest_Builder*) setVersion:(int32_t) value;
- (CreateRoomRequest_Builder*) clearVersion;
@end

@interface CreateRoomResponse : PBGeneratedMessage {
@private
  BOOL hasGameSession_:1;
  PBGameSession* gameSession;
}
- (BOOL) hasGameSession;
@property (readonly, retain) PBGameSession* gameSession;

+ (CreateRoomResponse*) defaultInstance;
- (CreateRoomResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CreateRoomResponse_Builder*) builder;
+ (CreateRoomResponse_Builder*) builder;
+ (CreateRoomResponse_Builder*) builderWithPrototype:(CreateRoomResponse*) prototype;

+ (CreateRoomResponse*) parseFromData:(NSData*) data;
+ (CreateRoomResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CreateRoomResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CreateRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CreateRoomResponse_Builder : PBGeneratedMessage_Builder {
@private
  CreateRoomResponse* result;
}

- (CreateRoomResponse*) defaultInstance;

- (CreateRoomResponse_Builder*) clear;
- (CreateRoomResponse_Builder*) clone;

- (CreateRoomResponse*) build;
- (CreateRoomResponse*) buildPartial;

- (CreateRoomResponse_Builder*) mergeFrom:(CreateRoomResponse*) other;
- (CreateRoomResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CreateRoomResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameSession;
- (PBGameSession*) gameSession;
- (CreateRoomResponse_Builder*) setGameSession:(PBGameSession*) value;
- (CreateRoomResponse_Builder*) setGameSessionBuilder:(PBGameSession_Builder*) builderForValue;
- (CreateRoomResponse_Builder*) mergeGameSession:(PBGameSession*) value;
- (CreateRoomResponse_Builder*) clearGameSession;
@end

@interface SearchRoomRequest : PBGeneratedMessage {
@private
  BOOL hasRangeType_:1;
  BOOL hasKeyword_:1;
  int32_t rangeType;
  NSString* keyword;
}
- (BOOL) hasKeyword;
- (BOOL) hasRangeType;
@property (readonly, retain) NSString* keyword;
@property (readonly) int32_t rangeType;

+ (SearchRoomRequest*) defaultInstance;
- (SearchRoomRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SearchRoomRequest_Builder*) builder;
+ (SearchRoomRequest_Builder*) builder;
+ (SearchRoomRequest_Builder*) builderWithPrototype:(SearchRoomRequest*) prototype;

+ (SearchRoomRequest*) parseFromData:(NSData*) data;
+ (SearchRoomRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomRequest*) parseFromInputStream:(NSInputStream*) input;
+ (SearchRoomRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SearchRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SearchRoomRequest_Builder : PBGeneratedMessage_Builder {
@private
  SearchRoomRequest* result;
}

- (SearchRoomRequest*) defaultInstance;

- (SearchRoomRequest_Builder*) clear;
- (SearchRoomRequest_Builder*) clone;

- (SearchRoomRequest*) build;
- (SearchRoomRequest*) buildPartial;

- (SearchRoomRequest_Builder*) mergeFrom:(SearchRoomRequest*) other;
- (SearchRoomRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SearchRoomRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKeyword;
- (NSString*) keyword;
- (SearchRoomRequest_Builder*) setKeyword:(NSString*) value;
- (SearchRoomRequest_Builder*) clearKeyword;

- (BOOL) hasRangeType;
- (int32_t) rangeType;
- (SearchRoomRequest_Builder*) setRangeType:(int32_t) value;
- (SearchRoomRequest_Builder*) clearRangeType;
@end

@interface SearchRoomResponse : PBGeneratedMessage {
@private
  NSMutableArray* mutableSessionsList;
}
- (NSArray*) sessionsList;
- (PBGameSession*) sessionsAtIndex:(int32_t) index;

+ (SearchRoomResponse*) defaultInstance;
- (SearchRoomResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SearchRoomResponse_Builder*) builder;
+ (SearchRoomResponse_Builder*) builder;
+ (SearchRoomResponse_Builder*) builderWithPrototype:(SearchRoomResponse*) prototype;

+ (SearchRoomResponse*) parseFromData:(NSData*) data;
+ (SearchRoomResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomResponse*) parseFromInputStream:(NSInputStream*) input;
+ (SearchRoomResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SearchRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SearchRoomResponse_Builder : PBGeneratedMessage_Builder {
@private
  SearchRoomResponse* result;
}

- (SearchRoomResponse*) defaultInstance;

- (SearchRoomResponse_Builder*) clear;
- (SearchRoomResponse_Builder*) clone;

- (SearchRoomResponse*) build;
- (SearchRoomResponse*) buildPartial;

- (SearchRoomResponse_Builder*) mergeFrom:(SearchRoomResponse*) other;
- (SearchRoomResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SearchRoomResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionsList;
- (PBGameSession*) sessionsAtIndex:(int32_t) index;
- (SearchRoomResponse_Builder*) replaceSessionsAtIndex:(int32_t) index with:(PBGameSession*) value;
- (SearchRoomResponse_Builder*) addSessions:(PBGameSession*) value;
- (SearchRoomResponse_Builder*) addAllSessions:(NSArray*) values;
- (SearchRoomResponse_Builder*) clearSessionsList;
@end

@interface RegisterRoomsNotificationRequest : PBGeneratedMessage {
@private
  NSMutableArray* mutableSessionIdsList;
  int32_t sessionIdsMemoizedSerializedSize;
}
- (NSArray*) sessionIdsList;
- (int32_t) sessionIdsAtIndex:(int32_t) index;

+ (RegisterRoomsNotificationRequest*) defaultInstance;
- (RegisterRoomsNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RegisterRoomsNotificationRequest_Builder*) builder;
+ (RegisterRoomsNotificationRequest_Builder*) builder;
+ (RegisterRoomsNotificationRequest_Builder*) builderWithPrototype:(RegisterRoomsNotificationRequest*) prototype;

+ (RegisterRoomsNotificationRequest*) parseFromData:(NSData*) data;
+ (RegisterRoomsNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RegisterRoomsNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  RegisterRoomsNotificationRequest* result;
}

- (RegisterRoomsNotificationRequest*) defaultInstance;

- (RegisterRoomsNotificationRequest_Builder*) clear;
- (RegisterRoomsNotificationRequest_Builder*) clone;

- (RegisterRoomsNotificationRequest*) build;
- (RegisterRoomsNotificationRequest*) buildPartial;

- (RegisterRoomsNotificationRequest_Builder*) mergeFrom:(RegisterRoomsNotificationRequest*) other;
- (RegisterRoomsNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RegisterRoomsNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionIdsList;
- (int32_t) sessionIdsAtIndex:(int32_t) index;
- (RegisterRoomsNotificationRequest_Builder*) replaceSessionIdsAtIndex:(int32_t) index with:(int32_t) value;
- (RegisterRoomsNotificationRequest_Builder*) addSessionIds:(int32_t) value;
- (RegisterRoomsNotificationRequest_Builder*) addAllSessionIds:(NSArray*) values;
- (RegisterRoomsNotificationRequest_Builder*) clearSessionIdsList;
@end

@interface RegisterRoomsNotificationResponse : PBGeneratedMessage {
@private
}

+ (RegisterRoomsNotificationResponse*) defaultInstance;
- (RegisterRoomsNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RegisterRoomsNotificationResponse_Builder*) builder;
+ (RegisterRoomsNotificationResponse_Builder*) builder;
+ (RegisterRoomsNotificationResponse_Builder*) builderWithPrototype:(RegisterRoomsNotificationResponse*) prototype;

+ (RegisterRoomsNotificationResponse*) parseFromData:(NSData*) data;
+ (RegisterRoomsNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RegisterRoomsNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  RegisterRoomsNotificationResponse* result;
}

- (RegisterRoomsNotificationResponse*) defaultInstance;

- (RegisterRoomsNotificationResponse_Builder*) clear;
- (RegisterRoomsNotificationResponse_Builder*) clone;

- (RegisterRoomsNotificationResponse*) build;
- (RegisterRoomsNotificationResponse*) buildPartial;

- (RegisterRoomsNotificationResponse_Builder*) mergeFrom:(RegisterRoomsNotificationResponse*) other;
- (RegisterRoomsNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RegisterRoomsNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationRequest : PBGeneratedMessage {
@private
  NSMutableArray* mutableSessionIdsList;
  int32_t sessionIdsMemoizedSerializedSize;
}
- (NSArray*) sessionIdsList;
- (int32_t) sessionIdsAtIndex:(int32_t) index;

+ (UnRegisterRoomsNotificationRequest*) defaultInstance;
- (UnRegisterRoomsNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnRegisterRoomsNotificationRequest_Builder*) builder;
+ (UnRegisterRoomsNotificationRequest_Builder*) builder;
+ (UnRegisterRoomsNotificationRequest_Builder*) builderWithPrototype:(UnRegisterRoomsNotificationRequest*) prototype;

+ (UnRegisterRoomsNotificationRequest*) parseFromData:(NSData*) data;
+ (UnRegisterRoomsNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (UnRegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnRegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  UnRegisterRoomsNotificationRequest* result;
}

- (UnRegisterRoomsNotificationRequest*) defaultInstance;

- (UnRegisterRoomsNotificationRequest_Builder*) clear;
- (UnRegisterRoomsNotificationRequest_Builder*) clone;

- (UnRegisterRoomsNotificationRequest*) build;
- (UnRegisterRoomsNotificationRequest*) buildPartial;

- (UnRegisterRoomsNotificationRequest_Builder*) mergeFrom:(UnRegisterRoomsNotificationRequest*) other;
- (UnRegisterRoomsNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnRegisterRoomsNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionIdsList;
- (int32_t) sessionIdsAtIndex:(int32_t) index;
- (UnRegisterRoomsNotificationRequest_Builder*) replaceSessionIdsAtIndex:(int32_t) index with:(int32_t) value;
- (UnRegisterRoomsNotificationRequest_Builder*) addSessionIds:(int32_t) value;
- (UnRegisterRoomsNotificationRequest_Builder*) addAllSessionIds:(NSArray*) values;
- (UnRegisterRoomsNotificationRequest_Builder*) clearSessionIdsList;
@end

@interface UnRegisterRoomsNotificationResponse : PBGeneratedMessage {
@private
}

+ (UnRegisterRoomsNotificationResponse*) defaultInstance;
- (UnRegisterRoomsNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnRegisterRoomsNotificationResponse_Builder*) builder;
+ (UnRegisterRoomsNotificationResponse_Builder*) builder;
+ (UnRegisterRoomsNotificationResponse_Builder*) builderWithPrototype:(UnRegisterRoomsNotificationResponse*) prototype;

+ (UnRegisterRoomsNotificationResponse*) parseFromData:(NSData*) data;
+ (UnRegisterRoomsNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (UnRegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnRegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  UnRegisterRoomsNotificationResponse* result;
}

- (UnRegisterRoomsNotificationResponse*) defaultInstance;

- (UnRegisterRoomsNotificationResponse_Builder*) clear;
- (UnRegisterRoomsNotificationResponse_Builder*) clone;

- (UnRegisterRoomsNotificationResponse*) build;
- (UnRegisterRoomsNotificationResponse*) buildPartial;

- (UnRegisterRoomsNotificationResponse_Builder*) mergeFrom:(UnRegisterRoomsNotificationResponse*) other;
- (UnRegisterRoomsNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnRegisterRoomsNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceRequest : PBGeneratedMessage {
@private
  BOOL hasWilds_:1;
  BOOL hasNum_:1;
  BOOL hasDice_:1;
  BOOL wilds_:1;
  int32_t num;
  int32_t dice;
}
- (BOOL) hasNum;
- (BOOL) hasDice;
- (BOOL) hasWilds;
@property (readonly) int32_t num;
@property (readonly) int32_t dice;
- (BOOL) wilds;

+ (CallDiceRequest*) defaultInstance;
- (CallDiceRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CallDiceRequest_Builder*) builder;
+ (CallDiceRequest_Builder*) builder;
+ (CallDiceRequest_Builder*) builderWithPrototype:(CallDiceRequest*) prototype;

+ (CallDiceRequest*) parseFromData:(NSData*) data;
+ (CallDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CallDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CallDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceRequest_Builder : PBGeneratedMessage_Builder {
@private
  CallDiceRequest* result;
}

- (CallDiceRequest*) defaultInstance;

- (CallDiceRequest_Builder*) clear;
- (CallDiceRequest_Builder*) clone;

- (CallDiceRequest*) build;
- (CallDiceRequest*) buildPartial;

- (CallDiceRequest_Builder*) mergeFrom:(CallDiceRequest*) other;
- (CallDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CallDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNum;
- (int32_t) num;
- (CallDiceRequest_Builder*) setNum:(int32_t) value;
- (CallDiceRequest_Builder*) clearNum;

- (BOOL) hasDice;
- (int32_t) dice;
- (CallDiceRequest_Builder*) setDice:(int32_t) value;
- (CallDiceRequest_Builder*) clearDice;

- (BOOL) hasWilds;
- (BOOL) wilds;
- (CallDiceRequest_Builder*) setWilds:(BOOL) value;
- (CallDiceRequest_Builder*) clearWilds;
@end

@interface CallDiceResponse : PBGeneratedMessage {
@private
}

+ (CallDiceResponse*) defaultInstance;
- (CallDiceResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CallDiceResponse_Builder*) builder;
+ (CallDiceResponse_Builder*) builder;
+ (CallDiceResponse_Builder*) builderWithPrototype:(CallDiceResponse*) prototype;

+ (CallDiceResponse*) parseFromData:(NSData*) data;
+ (CallDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CallDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CallDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceResponse_Builder : PBGeneratedMessage_Builder {
@private
  CallDiceResponse* result;
}

- (CallDiceResponse*) defaultInstance;

- (CallDiceResponse_Builder*) clear;
- (CallDiceResponse_Builder*) clone;

- (CallDiceResponse*) build;
- (CallDiceResponse*) buildPartial;

- (CallDiceResponse_Builder*) mergeFrom:(CallDiceResponse*) other;
- (CallDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CallDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceRequest : PBGeneratedMessage {
@private
  BOOL hasOpenType_:1;
  BOOL hasMultiple_:1;
  int32_t openType;
  int32_t multiple;
}
- (BOOL) hasOpenType;
- (BOOL) hasMultiple;
@property (readonly) int32_t openType;
@property (readonly) int32_t multiple;

+ (OpenDiceRequest*) defaultInstance;
- (OpenDiceRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OpenDiceRequest_Builder*) builder;
+ (OpenDiceRequest_Builder*) builder;
+ (OpenDiceRequest_Builder*) builderWithPrototype:(OpenDiceRequest*) prototype;

+ (OpenDiceRequest*) parseFromData:(NSData*) data;
+ (OpenDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (OpenDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OpenDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceRequest_Builder : PBGeneratedMessage_Builder {
@private
  OpenDiceRequest* result;
}

- (OpenDiceRequest*) defaultInstance;

- (OpenDiceRequest_Builder*) clear;
- (OpenDiceRequest_Builder*) clone;

- (OpenDiceRequest*) build;
- (OpenDiceRequest*) buildPartial;

- (OpenDiceRequest_Builder*) mergeFrom:(OpenDiceRequest*) other;
- (OpenDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OpenDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOpenType;
- (int32_t) openType;
- (OpenDiceRequest_Builder*) setOpenType:(int32_t) value;
- (OpenDiceRequest_Builder*) clearOpenType;

- (BOOL) hasMultiple;
- (int32_t) multiple;
- (OpenDiceRequest_Builder*) setMultiple:(int32_t) value;
- (OpenDiceRequest_Builder*) clearMultiple;
@end

@interface OpenDiceResponse : PBGeneratedMessage {
@private
}

+ (OpenDiceResponse*) defaultInstance;
- (OpenDiceResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OpenDiceResponse_Builder*) builder;
+ (OpenDiceResponse_Builder*) builder;
+ (OpenDiceResponse_Builder*) builderWithPrototype:(OpenDiceResponse*) prototype;

+ (OpenDiceResponse*) parseFromData:(NSData*) data;
+ (OpenDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (OpenDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OpenDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceResponse_Builder : PBGeneratedMessage_Builder {
@private
  OpenDiceResponse* result;
}

- (OpenDiceResponse*) defaultInstance;

- (OpenDiceResponse_Builder*) clear;
- (OpenDiceResponse_Builder*) clone;

- (OpenDiceResponse*) build;
- (OpenDiceResponse*) buildPartial;

- (OpenDiceResponse_Builder*) mergeFrom:(OpenDiceResponse*) other;
- (OpenDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OpenDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemRequest : PBGeneratedMessage {
@private
  BOOL hasDecreaseTimeForNextPlayUser_:1;
  BOOL hasItemId_:1;
  BOOL hasExtendTime_:1;
  BOOL hasDirection_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL decreaseTimeForNextPlayUser_:1;
  int32_t itemId;
  int32_t extendTime;
  int32_t direction;
  NSString* nextPlayUserId;
}
- (BOOL) hasItemId;
- (BOOL) hasExtendTime;
- (BOOL) hasDirection;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasDecreaseTimeForNextPlayUser;
@property (readonly) int32_t itemId;
@property (readonly) int32_t extendTime;
@property (readonly) int32_t direction;
@property (readonly, retain) NSString* nextPlayUserId;
- (BOOL) decreaseTimeForNextPlayUser;

+ (UseItemRequest*) defaultInstance;
- (UseItemRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UseItemRequest_Builder*) builder;
+ (UseItemRequest_Builder*) builder;
+ (UseItemRequest_Builder*) builderWithPrototype:(UseItemRequest*) prototype;

+ (UseItemRequest*) parseFromData:(NSData*) data;
+ (UseItemRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemRequest*) parseFromInputStream:(NSInputStream*) input;
+ (UseItemRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UseItemRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemRequest_Builder : PBGeneratedMessage_Builder {
@private
  UseItemRequest* result;
}

- (UseItemRequest*) defaultInstance;

- (UseItemRequest_Builder*) clear;
- (UseItemRequest_Builder*) clone;

- (UseItemRequest*) build;
- (UseItemRequest*) buildPartial;

- (UseItemRequest_Builder*) mergeFrom:(UseItemRequest*) other;
- (UseItemRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UseItemRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (int32_t) itemId;
- (UseItemRequest_Builder*) setItemId:(int32_t) value;
- (UseItemRequest_Builder*) clearItemId;

- (BOOL) hasExtendTime;
- (int32_t) extendTime;
- (UseItemRequest_Builder*) setExtendTime:(int32_t) value;
- (UseItemRequest_Builder*) clearExtendTime;

- (BOOL) hasDirection;
- (int32_t) direction;
- (UseItemRequest_Builder*) setDirection:(int32_t) value;
- (UseItemRequest_Builder*) clearDirection;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (UseItemRequest_Builder*) setNextPlayUserId:(NSString*) value;
- (UseItemRequest_Builder*) clearNextPlayUserId;

- (BOOL) hasDecreaseTimeForNextPlayUser;
- (BOOL) decreaseTimeForNextPlayUser;
- (UseItemRequest_Builder*) setDecreaseTimeForNextPlayUser:(BOOL) value;
- (UseItemRequest_Builder*) clearDecreaseTimeForNextPlayUser;
@end

@interface UseItemResponse : PBGeneratedMessage {
@private
  BOOL hasDecreaseTimeForNextPlayUser_:1;
  BOOL hasItemId_:1;
  BOOL hasDirection_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL hasAction_:1;
  BOOL decreaseTimeForNextPlayUser_:1;
  int32_t itemId;
  int32_t direction;
  NSString* nextPlayUserId;
  PBDiceAction* action;
  NSMutableArray* mutableDicesList;
}
- (BOOL) hasItemId;
- (BOOL) hasAction;
- (BOOL) hasDirection;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasDecreaseTimeForNextPlayUser;
@property (readonly) int32_t itemId;
@property (readonly, retain) PBDiceAction* action;
@property (readonly) int32_t direction;
@property (readonly, retain) NSString* nextPlayUserId;
- (BOOL) decreaseTimeForNextPlayUser;
- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;

+ (UseItemResponse*) defaultInstance;
- (UseItemResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UseItemResponse_Builder*) builder;
+ (UseItemResponse_Builder*) builder;
+ (UseItemResponse_Builder*) builderWithPrototype:(UseItemResponse*) prototype;

+ (UseItemResponse*) parseFromData:(NSData*) data;
+ (UseItemResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemResponse*) parseFromInputStream:(NSInputStream*) input;
+ (UseItemResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UseItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemResponse_Builder : PBGeneratedMessage_Builder {
@private
  UseItemResponse* result;
}

- (UseItemResponse*) defaultInstance;

- (UseItemResponse_Builder*) clear;
- (UseItemResponse_Builder*) clone;

- (UseItemResponse*) build;
- (UseItemResponse*) buildPartial;

- (UseItemResponse_Builder*) mergeFrom:(UseItemResponse*) other;
- (UseItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UseItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (int32_t) itemId;
- (UseItemResponse_Builder*) setItemId:(int32_t) value;
- (UseItemResponse_Builder*) clearItemId;

- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;
- (UseItemResponse_Builder*) replaceDicesAtIndex:(int32_t) index with:(PBDice*) value;
- (UseItemResponse_Builder*) addDices:(PBDice*) value;
- (UseItemResponse_Builder*) addAllDices:(NSArray*) values;
- (UseItemResponse_Builder*) clearDicesList;

- (BOOL) hasAction;
- (PBDiceAction*) action;
- (UseItemResponse_Builder*) setAction:(PBDiceAction*) value;
- (UseItemResponse_Builder*) setActionBuilder:(PBDiceAction_Builder*) builderForValue;
- (UseItemResponse_Builder*) mergeAction:(PBDiceAction*) value;
- (UseItemResponse_Builder*) clearAction;

- (BOOL) hasDirection;
- (int32_t) direction;
- (UseItemResponse_Builder*) setDirection:(int32_t) value;
- (UseItemResponse_Builder*) clearDirection;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (UseItemResponse_Builder*) setNextPlayUserId:(NSString*) value;
- (UseItemResponse_Builder*) clearNextPlayUserId;

- (BOOL) hasDecreaseTimeForNextPlayUser;
- (BOOL) decreaseTimeForNextPlayUser;
- (UseItemResponse_Builder*) setDecreaseTimeForNextPlayUser:(BOOL) value;
- (UseItemResponse_Builder*) clearDecreaseTimeForNextPlayUser;
@end

@interface UserDiceNotification : PBGeneratedMessage {
@private
  BOOL hasCleanAll_:1;
  BOOL hasIsWild_:1;
  BOOL cleanAll_:1;
  BOOL isWild_:1;
  NSMutableArray* mutableUserDiceList;
}
- (BOOL) hasCleanAll;
- (BOOL) hasIsWild;
- (BOOL) cleanAll;
- (BOOL) isWild;
- (NSArray*) userDiceList;
- (PBUserDice*) userDiceAtIndex:(int32_t) index;

+ (UserDiceNotification*) defaultInstance;
- (UserDiceNotification*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserDiceNotification_Builder*) builder;
+ (UserDiceNotification_Builder*) builder;
+ (UserDiceNotification_Builder*) builderWithPrototype:(UserDiceNotification*) prototype;

+ (UserDiceNotification*) parseFromData:(NSData*) data;
+ (UserDiceNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserDiceNotification*) parseFromInputStream:(NSInputStream*) input;
+ (UserDiceNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserDiceNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserDiceNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserDiceNotification_Builder : PBGeneratedMessage_Builder {
@private
  UserDiceNotification* result;
}

- (UserDiceNotification*) defaultInstance;

- (UserDiceNotification_Builder*) clear;
- (UserDiceNotification_Builder*) clone;

- (UserDiceNotification*) build;
- (UserDiceNotification*) buildPartial;

- (UserDiceNotification_Builder*) mergeFrom:(UserDiceNotification*) other;
- (UserDiceNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserDiceNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userDiceList;
- (PBUserDice*) userDiceAtIndex:(int32_t) index;
- (UserDiceNotification_Builder*) replaceUserDiceAtIndex:(int32_t) index with:(PBUserDice*) value;
- (UserDiceNotification_Builder*) addUserDice:(PBUserDice*) value;
- (UserDiceNotification_Builder*) addAllUserDice:(NSArray*) values;
- (UserDiceNotification_Builder*) clearUserDiceList;

- (BOOL) hasCleanAll;
- (BOOL) cleanAll;
- (UserDiceNotification_Builder*) setCleanAll:(BOOL) value;
- (UserDiceNotification_Builder*) clearCleanAll;

- (BOOL) hasIsWild;
- (BOOL) isWild;
- (UserDiceNotification_Builder*) setIsWild:(BOOL) value;
- (UserDiceNotification_Builder*) clearIsWild;
@end

@interface TimeoutSettingRequest : PBGeneratedMessage {
@private
  BOOL hasAction_:1;
  PBZJHUserAction action;
}
- (BOOL) hasAction;
@property (readonly) PBZJHUserAction action;

+ (TimeoutSettingRequest*) defaultInstance;
- (TimeoutSettingRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TimeoutSettingRequest_Builder*) builder;
+ (TimeoutSettingRequest_Builder*) builder;
+ (TimeoutSettingRequest_Builder*) builderWithPrototype:(TimeoutSettingRequest*) prototype;

+ (TimeoutSettingRequest*) parseFromData:(NSData*) data;
+ (TimeoutSettingRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingRequest*) parseFromInputStream:(NSInputStream*) input;
+ (TimeoutSettingRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TimeoutSettingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TimeoutSettingRequest_Builder : PBGeneratedMessage_Builder {
@private
  TimeoutSettingRequest* result;
}

- (TimeoutSettingRequest*) defaultInstance;

- (TimeoutSettingRequest_Builder*) clear;
- (TimeoutSettingRequest_Builder*) clone;

- (TimeoutSettingRequest*) build;
- (TimeoutSettingRequest*) buildPartial;

- (TimeoutSettingRequest_Builder*) mergeFrom:(TimeoutSettingRequest*) other;
- (TimeoutSettingRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TimeoutSettingRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (PBZJHUserAction) action;
- (TimeoutSettingRequest_Builder*) setAction:(PBZJHUserAction) value;
- (TimeoutSettingRequest_Builder*) clearAction;
@end

@interface TimeoutSettingResponse : PBGeneratedMessage {
@private
}

+ (TimeoutSettingResponse*) defaultInstance;
- (TimeoutSettingResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TimeoutSettingResponse_Builder*) builder;
+ (TimeoutSettingResponse_Builder*) builder;
+ (TimeoutSettingResponse_Builder*) builderWithPrototype:(TimeoutSettingResponse*) prototype;

+ (TimeoutSettingResponse*) parseFromData:(NSData*) data;
+ (TimeoutSettingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingResponse*) parseFromInputStream:(NSInputStream*) input;
+ (TimeoutSettingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TimeoutSettingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TimeoutSettingResponse_Builder : PBGeneratedMessage_Builder {
@private
  TimeoutSettingResponse* result;
}

- (TimeoutSettingResponse*) defaultInstance;

- (TimeoutSettingResponse_Builder*) clear;
- (TimeoutSettingResponse_Builder*) clone;

- (TimeoutSettingResponse*) build;
- (TimeoutSettingResponse*) buildPartial;

- (TimeoutSettingResponse_Builder*) mergeFrom:(TimeoutSettingResponse*) other;
- (TimeoutSettingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TimeoutSettingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetRequest : PBGeneratedMessage {
@private
  BOOL hasIsAutoBet_:1;
  BOOL hasSingleBet_:1;
  BOOL hasCount_:1;
  BOOL isAutoBet_:1;
  int32_t singleBet;
  int32_t count;
}
- (BOOL) hasSingleBet;
- (BOOL) hasCount;
- (BOOL) hasIsAutoBet;
@property (readonly) int32_t singleBet;
@property (readonly) int32_t count;
- (BOOL) isAutoBet;

+ (BetRequest*) defaultInstance;
- (BetRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetRequest_Builder*) builder;
+ (BetRequest_Builder*) builder;
+ (BetRequest_Builder*) builderWithPrototype:(BetRequest*) prototype;

+ (BetRequest*) parseFromData:(NSData*) data;
+ (BetRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BetRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetRequest_Builder : PBGeneratedMessage_Builder {
@private
  BetRequest* result;
}

- (BetRequest*) defaultInstance;

- (BetRequest_Builder*) clear;
- (BetRequest_Builder*) clone;

- (BetRequest*) build;
- (BetRequest*) buildPartial;

- (BetRequest_Builder*) mergeFrom:(BetRequest*) other;
- (BetRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSingleBet;
- (int32_t) singleBet;
- (BetRequest_Builder*) setSingleBet:(int32_t) value;
- (BetRequest_Builder*) clearSingleBet;

- (BOOL) hasCount;
- (int32_t) count;
- (BetRequest_Builder*) setCount:(int32_t) value;
- (BetRequest_Builder*) clearCount;

- (BOOL) hasIsAutoBet;
- (BOOL) isAutoBet;
- (BetRequest_Builder*) setIsAutoBet:(BOOL) value;
- (BetRequest_Builder*) clearIsAutoBet;
@end

@interface BetResponse : PBGeneratedMessage {
@private
}

+ (BetResponse*) defaultInstance;
- (BetResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetResponse_Builder*) builder;
+ (BetResponse_Builder*) builder;
+ (BetResponse_Builder*) builderWithPrototype:(BetResponse*) prototype;

+ (BetResponse*) parseFromData:(NSData*) data;
+ (BetResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BetResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetResponse_Builder : PBGeneratedMessage_Builder {
@private
  BetResponse* result;
}

- (BetResponse*) defaultInstance;

- (BetResponse_Builder*) clear;
- (BetResponse_Builder*) clone;

- (BetResponse*) build;
- (BetResponse*) buildPartial;

- (BetResponse_Builder*) mergeFrom:(BetResponse*) other;
- (BetResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardRequest : PBGeneratedMessage {
@private
}

+ (CheckCardRequest*) defaultInstance;
- (CheckCardRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CheckCardRequest_Builder*) builder;
+ (CheckCardRequest_Builder*) builder;
+ (CheckCardRequest_Builder*) builderWithPrototype:(CheckCardRequest*) prototype;

+ (CheckCardRequest*) parseFromData:(NSData*) data;
+ (CheckCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CheckCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CheckCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardRequest_Builder : PBGeneratedMessage_Builder {
@private
  CheckCardRequest* result;
}

- (CheckCardRequest*) defaultInstance;

- (CheckCardRequest_Builder*) clear;
- (CheckCardRequest_Builder*) clone;

- (CheckCardRequest*) build;
- (CheckCardRequest*) buildPartial;

- (CheckCardRequest_Builder*) mergeFrom:(CheckCardRequest*) other;
- (CheckCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CheckCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardResponse : PBGeneratedMessage {
@private
}

+ (CheckCardResponse*) defaultInstance;
- (CheckCardResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CheckCardResponse_Builder*) builder;
+ (CheckCardResponse_Builder*) builder;
+ (CheckCardResponse_Builder*) builderWithPrototype:(CheckCardResponse*) prototype;

+ (CheckCardResponse*) parseFromData:(NSData*) data;
+ (CheckCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CheckCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CheckCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardResponse_Builder : PBGeneratedMessage_Builder {
@private
  CheckCardResponse* result;
}

- (CheckCardResponse*) defaultInstance;

- (CheckCardResponse_Builder*) clear;
- (CheckCardResponse_Builder*) clone;

- (CheckCardResponse*) build;
- (CheckCardResponse*) buildPartial;

- (CheckCardResponse_Builder*) mergeFrom:(CheckCardResponse*) other;
- (CheckCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CheckCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardRequest : PBGeneratedMessage {
@private
}

+ (FoldCardRequest*) defaultInstance;
- (FoldCardRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FoldCardRequest_Builder*) builder;
+ (FoldCardRequest_Builder*) builder;
+ (FoldCardRequest_Builder*) builderWithPrototype:(FoldCardRequest*) prototype;

+ (FoldCardRequest*) parseFromData:(NSData*) data;
+ (FoldCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FoldCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FoldCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardRequest_Builder : PBGeneratedMessage_Builder {
@private
  FoldCardRequest* result;
}

- (FoldCardRequest*) defaultInstance;

- (FoldCardRequest_Builder*) clear;
- (FoldCardRequest_Builder*) clone;

- (FoldCardRequest*) build;
- (FoldCardRequest*) buildPartial;

- (FoldCardRequest_Builder*) mergeFrom:(FoldCardRequest*) other;
- (FoldCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FoldCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardResponse : PBGeneratedMessage {
@private
}

+ (FoldCardResponse*) defaultInstance;
- (FoldCardResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FoldCardResponse_Builder*) builder;
+ (FoldCardResponse_Builder*) builder;
+ (FoldCardResponse_Builder*) builderWithPrototype:(FoldCardResponse*) prototype;

+ (FoldCardResponse*) parseFromData:(NSData*) data;
+ (FoldCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FoldCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FoldCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardResponse_Builder : PBGeneratedMessage_Builder {
@private
  FoldCardResponse* result;
}

- (FoldCardResponse*) defaultInstance;

- (FoldCardResponse_Builder*) clear;
- (FoldCardResponse_Builder*) clone;

- (FoldCardResponse*) build;
- (FoldCardResponse*) buildPartial;

- (FoldCardResponse_Builder*) mergeFrom:(FoldCardResponse*) other;
- (FoldCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FoldCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardRequest : PBGeneratedMessage {
@private
  NSMutableArray* mutableCardIdsList;
  int32_t cardIdsMemoizedSerializedSize;
}
- (NSArray*) cardIdsList;
- (int32_t) cardIdsAtIndex:(int32_t) index;

+ (ShowCardRequest*) defaultInstance;
- (ShowCardRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShowCardRequest_Builder*) builder;
+ (ShowCardRequest_Builder*) builder;
+ (ShowCardRequest_Builder*) builderWithPrototype:(ShowCardRequest*) prototype;

+ (ShowCardRequest*) parseFromData:(NSData*) data;
+ (ShowCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (ShowCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ShowCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardRequest_Builder : PBGeneratedMessage_Builder {
@private
  ShowCardRequest* result;
}

- (ShowCardRequest*) defaultInstance;

- (ShowCardRequest_Builder*) clear;
- (ShowCardRequest_Builder*) clone;

- (ShowCardRequest*) build;
- (ShowCardRequest*) buildPartial;

- (ShowCardRequest_Builder*) mergeFrom:(ShowCardRequest*) other;
- (ShowCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShowCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) cardIdsList;
- (int32_t) cardIdsAtIndex:(int32_t) index;
- (ShowCardRequest_Builder*) replaceCardIdsAtIndex:(int32_t) index with:(int32_t) value;
- (ShowCardRequest_Builder*) addCardIds:(int32_t) value;
- (ShowCardRequest_Builder*) addAllCardIds:(NSArray*) values;
- (ShowCardRequest_Builder*) clearCardIdsList;
@end

@interface ShowCardResponse : PBGeneratedMessage {
@private
}

+ (ShowCardResponse*) defaultInstance;
- (ShowCardResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShowCardResponse_Builder*) builder;
+ (ShowCardResponse_Builder*) builder;
+ (ShowCardResponse_Builder*) builderWithPrototype:(ShowCardResponse*) prototype;

+ (ShowCardResponse*) parseFromData:(NSData*) data;
+ (ShowCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ShowCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ShowCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardResponse_Builder : PBGeneratedMessage_Builder {
@private
  ShowCardResponse* result;
}

- (ShowCardResponse*) defaultInstance;

- (ShowCardResponse_Builder*) clear;
- (ShowCardResponse_Builder*) clone;

- (ShowCardResponse*) build;
- (ShowCardResponse*) buildPartial;

- (ShowCardResponse_Builder*) mergeFrom:(ShowCardResponse*) other;
- (ShowCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShowCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardRequest : PBGeneratedMessage {
@private
  BOOL hasToUserId_:1;
  NSString* toUserId;
}
- (BOOL) hasToUserId;
@property (readonly, retain) NSString* toUserId;

+ (CompareCardRequest*) defaultInstance;
- (CompareCardRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CompareCardRequest_Builder*) builder;
+ (CompareCardRequest_Builder*) builder;
+ (CompareCardRequest_Builder*) builderWithPrototype:(CompareCardRequest*) prototype;

+ (CompareCardRequest*) parseFromData:(NSData*) data;
+ (CompareCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CompareCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CompareCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardRequest_Builder : PBGeneratedMessage_Builder {
@private
  CompareCardRequest* result;
}

- (CompareCardRequest*) defaultInstance;

- (CompareCardRequest_Builder*) clear;
- (CompareCardRequest_Builder*) clone;

- (CompareCardRequest*) build;
- (CompareCardRequest*) buildPartial;

- (CompareCardRequest_Builder*) mergeFrom:(CompareCardRequest*) other;
- (CompareCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CompareCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasToUserId;
- (NSString*) toUserId;
- (CompareCardRequest_Builder*) setToUserId:(NSString*) value;
- (CompareCardRequest_Builder*) clearToUserId;
@end

@interface CompareCardResponse : PBGeneratedMessage {
@private
  NSMutableArray* mutableUserResultList;
}
- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;

+ (CompareCardResponse*) defaultInstance;
- (CompareCardResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CompareCardResponse_Builder*) builder;
+ (CompareCardResponse_Builder*) builder;
+ (CompareCardResponse_Builder*) builderWithPrototype:(CompareCardResponse*) prototype;

+ (CompareCardResponse*) parseFromData:(NSData*) data;
+ (CompareCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CompareCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CompareCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardResponse_Builder : PBGeneratedMessage_Builder {
@private
  CompareCardResponse* result;
}

- (CompareCardResponse*) defaultInstance;

- (CompareCardResponse_Builder*) clear;
- (CompareCardResponse_Builder*) clone;

- (CompareCardResponse*) build;
- (CompareCardResponse*) buildPartial;

- (CompareCardResponse_Builder*) mergeFrom:(CompareCardResponse*) other;
- (CompareCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CompareCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;
- (CompareCardResponse_Builder*) replaceUserResultAtIndex:(int32_t) index with:(PBUserResult*) value;
- (CompareCardResponse_Builder*) addUserResult:(PBUserResult*) value;
- (CompareCardResponse_Builder*) addAllUserResult:(NSArray*) values;
- (CompareCardResponse_Builder*) clearUserResultList;
@end

@interface ChangeCardRequest : PBGeneratedMessage {
@private
  BOOL hasCardId_:1;
  int32_t cardId;
}
- (BOOL) hasCardId;
@property (readonly) int32_t cardId;

+ (ChangeCardRequest*) defaultInstance;
- (ChangeCardRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChangeCardRequest_Builder*) builder;
+ (ChangeCardRequest_Builder*) builder;
+ (ChangeCardRequest_Builder*) builderWithPrototype:(ChangeCardRequest*) prototype;

+ (ChangeCardRequest*) parseFromData:(NSData*) data;
+ (ChangeCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (ChangeCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChangeCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChangeCardRequest_Builder : PBGeneratedMessage_Builder {
@private
  ChangeCardRequest* result;
}

- (ChangeCardRequest*) defaultInstance;

- (ChangeCardRequest_Builder*) clear;
- (ChangeCardRequest_Builder*) clone;

- (ChangeCardRequest*) build;
- (ChangeCardRequest*) buildPartial;

- (ChangeCardRequest_Builder*) mergeFrom:(ChangeCardRequest*) other;
- (ChangeCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChangeCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCardId;
- (int32_t) cardId;
- (ChangeCardRequest_Builder*) setCardId:(int32_t) value;
- (ChangeCardRequest_Builder*) clearCardId;
@end

@interface ChangeCardResponse : PBGeneratedMessage {
@private
  BOOL hasOldCardId_:1;
  BOOL hasNewPoker_:1;
  BOOL hasCardType_:1;
  int32_t oldCardId;
  PBPoker* newPoker;
  PBZJHCardType cardType;
}
- (BOOL) hasOldCardId;
- (BOOL) hasNewPoker;
- (BOOL) hasCardType;
@property (readonly) int32_t oldCardId;
@property (readonly, retain) PBPoker* newPoker;
@property (readonly) PBZJHCardType cardType;

+ (ChangeCardResponse*) defaultInstance;
- (ChangeCardResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChangeCardResponse_Builder*) builder;
+ (ChangeCardResponse_Builder*) builder;
+ (ChangeCardResponse_Builder*) builderWithPrototype:(ChangeCardResponse*) prototype;

+ (ChangeCardResponse*) parseFromData:(NSData*) data;
+ (ChangeCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ChangeCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChangeCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChangeCardResponse_Builder : PBGeneratedMessage_Builder {
@private
  ChangeCardResponse* result;
}

- (ChangeCardResponse*) defaultInstance;

- (ChangeCardResponse_Builder*) clear;
- (ChangeCardResponse_Builder*) clone;

- (ChangeCardResponse*) build;
- (ChangeCardResponse*) buildPartial;

- (ChangeCardResponse_Builder*) mergeFrom:(ChangeCardResponse*) other;
- (ChangeCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChangeCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOldCardId;
- (int32_t) oldCardId;
- (ChangeCardResponse_Builder*) setOldCardId:(int32_t) value;
- (ChangeCardResponse_Builder*) clearOldCardId;

- (BOOL) hasNewPoker;
- (PBPoker*) newPoker;
- (ChangeCardResponse_Builder*) setNewPoker:(PBPoker*) value;
- (ChangeCardResponse_Builder*) setNewPokerBuilder:(PBPoker_Builder*) builderForValue;
- (ChangeCardResponse_Builder*) mergeNewPoker:(PBPoker*) value;
- (ChangeCardResponse_Builder*) clearNewPoker;

- (BOOL) hasCardType;
- (PBZJHCardType) cardType;
- (ChangeCardResponse_Builder*) setCardType:(PBZJHCardType) value;
- (ChangeCardResponse_Builder*) clearCardType;
@end

@interface JoinGameRequest : PBGeneratedMessage {
@private
  BOOL hasIsRobot_:1;
  BOOL hasGender_:1;
  BOOL hasSessionToBeChange_:1;
  BOOL hasVersion_:1;
  BOOL hasRuleType_:1;
  BOOL hasUserLevel_:1;
  BOOL hasGuessDifficultLevel_:1;
  BOOL hasTargetSessionId_:1;
  BOOL hasAutoNew_:1;
  BOOL hasAvatar_:1;
  BOOL hasNickName_:1;
  BOOL hasRoomId_:1;
  BOOL hasRoomName_:1;
  BOOL hasLocation_:1;
  BOOL hasGameId_:1;
  BOOL hasUserId_:1;
  BOOL hasUser_:1;
  BOOL isRobot_:1;
  BOOL gender_:1;
  int64_t sessionToBeChange;
  int32_t version;
  int32_t ruleType;
  int32_t userLevel;
  int32_t guessDifficultLevel;
  int32_t targetSessionId;
  int32_t autoNew;
  NSString* avatar;
  NSString* nickName;
  NSString* roomId;
  NSString* roomName;
  NSString* location;
  NSString* gameId;
  NSString* userId;
  PBGameUser* user;
  NSMutableArray* mutableExcludeSessionIdList;
  NSMutableArray* mutableSnsUsersList;
}
- (BOOL) hasUserId;
- (BOOL) hasGameId;
- (BOOL) hasAutoNew;
- (BOOL) hasNickName;
- (BOOL) hasAvatar;
- (BOOL) hasSessionToBeChange;
- (BOOL) hasGender;
- (BOOL) hasIsRobot;
- (BOOL) hasTargetSessionId;
- (BOOL) hasGuessDifficultLevel;
- (BOOL) hasRoomId;
- (BOOL) hasRoomName;
- (BOOL) hasLocation;
- (BOOL) hasUserLevel;
- (BOOL) hasUser;
- (BOOL) hasRuleType;
- (BOOL) hasVersion;
@property (readonly, retain) NSString* userId;
@property (readonly, retain) NSString* gameId;
@property (readonly) int32_t autoNew;
@property (readonly, retain) NSString* nickName;
@property (readonly, retain) NSString* avatar;
@property (readonly) int64_t sessionToBeChange;
- (BOOL) gender;
- (BOOL) isRobot;
@property (readonly) int32_t targetSessionId;
@property (readonly) int32_t guessDifficultLevel;
@property (readonly, retain) NSString* roomId;
@property (readonly, retain) NSString* roomName;
@property (readonly, retain) NSString* location;
@property (readonly) int32_t userLevel;
@property (readonly, retain) PBGameUser* user;
@property (readonly) int32_t ruleType;
@property (readonly) int32_t version;
- (NSArray*) excludeSessionIdList;
- (int64_t) excludeSessionIdAtIndex:(int32_t) index;
- (NSArray*) snsUsersList;
- (PBSNSUser*) snsUsersAtIndex:(int32_t) index;

+ (JoinGameRequest*) defaultInstance;
- (JoinGameRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (JoinGameRequest_Builder*) builder;
+ (JoinGameRequest_Builder*) builder;
+ (JoinGameRequest_Builder*) builderWithPrototype:(JoinGameRequest*) prototype;

+ (JoinGameRequest*) parseFromData:(NSData*) data;
+ (JoinGameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input;
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface JoinGameRequest_Builder : PBGeneratedMessage_Builder {
@private
  JoinGameRequest* result;
}

- (JoinGameRequest*) defaultInstance;

- (JoinGameRequest_Builder*) clear;
- (JoinGameRequest_Builder*) clone;

- (JoinGameRequest*) build;
- (JoinGameRequest*) buildPartial;

- (JoinGameRequest_Builder*) mergeFrom:(JoinGameRequest*) other;
- (JoinGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (JoinGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (JoinGameRequest_Builder*) setUserId:(NSString*) value;
- (JoinGameRequest_Builder*) clearUserId;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (JoinGameRequest_Builder*) setGameId:(NSString*) value;
- (JoinGameRequest_Builder*) clearGameId;

- (BOOL) hasAutoNew;
- (int32_t) autoNew;
- (JoinGameRequest_Builder*) setAutoNew:(int32_t) value;
- (JoinGameRequest_Builder*) clearAutoNew;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (JoinGameRequest_Builder*) setNickName:(NSString*) value;
- (JoinGameRequest_Builder*) clearNickName;

- (BOOL) hasAvatar;
- (NSString*) avatar;
- (JoinGameRequest_Builder*) setAvatar:(NSString*) value;
- (JoinGameRequest_Builder*) clearAvatar;

- (NSArray*) excludeSessionIdList;
- (int64_t) excludeSessionIdAtIndex:(int32_t) index;
- (JoinGameRequest_Builder*) replaceExcludeSessionIdAtIndex:(int32_t) index with:(int64_t) value;
- (JoinGameRequest_Builder*) addExcludeSessionId:(int64_t) value;
- (JoinGameRequest_Builder*) addAllExcludeSessionId:(NSArray*) values;
- (JoinGameRequest_Builder*) clearExcludeSessionIdList;

- (BOOL) hasSessionToBeChange;
- (int64_t) sessionToBeChange;
- (JoinGameRequest_Builder*) setSessionToBeChange:(int64_t) value;
- (JoinGameRequest_Builder*) clearSessionToBeChange;

- (BOOL) hasGender;
- (BOOL) gender;
- (JoinGameRequest_Builder*) setGender:(BOOL) value;
- (JoinGameRequest_Builder*) clearGender;

- (BOOL) hasIsRobot;
- (BOOL) isRobot;
- (JoinGameRequest_Builder*) setIsRobot:(BOOL) value;
- (JoinGameRequest_Builder*) clearIsRobot;

- (BOOL) hasTargetSessionId;
- (int32_t) targetSessionId;
- (JoinGameRequest_Builder*) setTargetSessionId:(int32_t) value;
- (JoinGameRequest_Builder*) clearTargetSessionId;

- (BOOL) hasGuessDifficultLevel;
- (int32_t) guessDifficultLevel;
- (JoinGameRequest_Builder*) setGuessDifficultLevel:(int32_t) value;
- (JoinGameRequest_Builder*) clearGuessDifficultLevel;

- (BOOL) hasRoomId;
- (NSString*) roomId;
- (JoinGameRequest_Builder*) setRoomId:(NSString*) value;
- (JoinGameRequest_Builder*) clearRoomId;

- (BOOL) hasRoomName;
- (NSString*) roomName;
- (JoinGameRequest_Builder*) setRoomName:(NSString*) value;
- (JoinGameRequest_Builder*) clearRoomName;

- (NSArray*) snsUsersList;
- (PBSNSUser*) snsUsersAtIndex:(int32_t) index;
- (JoinGameRequest_Builder*) replaceSnsUsersAtIndex:(int32_t) index with:(PBSNSUser*) value;
- (JoinGameRequest_Builder*) addSnsUsers:(PBSNSUser*) value;
- (JoinGameRequest_Builder*) addAllSnsUsers:(NSArray*) values;
- (JoinGameRequest_Builder*) clearSnsUsersList;

- (BOOL) hasLocation;
- (NSString*) location;
- (JoinGameRequest_Builder*) setLocation:(NSString*) value;
- (JoinGameRequest_Builder*) clearLocation;

- (BOOL) hasUserLevel;
- (int32_t) userLevel;
- (JoinGameRequest_Builder*) setUserLevel:(int32_t) value;
- (JoinGameRequest_Builder*) clearUserLevel;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (JoinGameRequest_Builder*) setUser:(PBGameUser*) value;
- (JoinGameRequest_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue;
- (JoinGameRequest_Builder*) mergeUser:(PBGameUser*) value;
- (JoinGameRequest_Builder*) clearUser;

- (BOOL) hasRuleType;
- (int32_t) ruleType;
- (JoinGameRequest_Builder*) setRuleType:(int32_t) value;
- (JoinGameRequest_Builder*) clearRuleType;

- (BOOL) hasVersion;
- (int32_t) version;
- (JoinGameRequest_Builder*) setVersion:(int32_t) value;
- (JoinGameRequest_Builder*) clearVersion;
@end

@interface JoinGameResponse : PBGeneratedMessage {
@private
  BOOL hasGameSession_:1;
  BOOL hasZjhGameState_:1;
  PBGameSession* gameSession;
  PBZJHGameState* zjhGameState;
}
- (BOOL) hasGameSession;
- (BOOL) hasZjhGameState;
@property (readonly, retain) PBGameSession* gameSession;
@property (readonly, retain) PBZJHGameState* zjhGameState;

+ (JoinGameResponse*) defaultInstance;
- (JoinGameResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (JoinGameResponse_Builder*) builder;
+ (JoinGameResponse_Builder*) builder;
+ (JoinGameResponse_Builder*) builderWithPrototype:(JoinGameResponse*) prototype;

+ (JoinGameResponse*) parseFromData:(NSData*) data;
+ (JoinGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface JoinGameResponse_Builder : PBGeneratedMessage_Builder {
@private
  JoinGameResponse* result;
}

- (JoinGameResponse*) defaultInstance;

- (JoinGameResponse_Builder*) clear;
- (JoinGameResponse_Builder*) clone;

- (JoinGameResponse*) build;
- (JoinGameResponse*) buildPartial;

- (JoinGameResponse_Builder*) mergeFrom:(JoinGameResponse*) other;
- (JoinGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (JoinGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameSession;
- (PBGameSession*) gameSession;
- (JoinGameResponse_Builder*) setGameSession:(PBGameSession*) value;
- (JoinGameResponse_Builder*) setGameSessionBuilder:(PBGameSession_Builder*) builderForValue;
- (JoinGameResponse_Builder*) mergeGameSession:(PBGameSession*) value;
- (JoinGameResponse_Builder*) clearGameSession;

- (BOOL) hasZjhGameState;
- (PBZJHGameState*) zjhGameState;
- (JoinGameResponse_Builder*) setZjhGameState:(PBZJHGameState*) value;
- (JoinGameResponse_Builder*) setZjhGameStateBuilder:(PBZJHGameState_Builder*) builderForValue;
- (JoinGameResponse_Builder*) mergeZjhGameState:(PBZJHGameState*) value;
- (JoinGameResponse_Builder*) clearZjhGameState;
@end

@interface StartGameRequest : PBGeneratedMessage {
@private
}

+ (StartGameRequest*) defaultInstance;
- (StartGameRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StartGameRequest_Builder*) builder;
+ (StartGameRequest_Builder*) builder;
+ (StartGameRequest_Builder*) builderWithPrototype:(StartGameRequest*) prototype;

+ (StartGameRequest*) parseFromData:(NSData*) data;
+ (StartGameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameRequest*) parseFromInputStream:(NSInputStream*) input;
+ (StartGameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StartGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameRequest_Builder : PBGeneratedMessage_Builder {
@private
  StartGameRequest* result;
}

- (StartGameRequest*) defaultInstance;

- (StartGameRequest_Builder*) clear;
- (StartGameRequest_Builder*) clone;

- (StartGameRequest*) build;
- (StartGameRequest*) buildPartial;

- (StartGameRequest_Builder*) mergeFrom:(StartGameRequest*) other;
- (StartGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StartGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameResponse : PBGeneratedMessage {
@private
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
}
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
@property (readonly, retain) NSString* currentPlayUserId;
@property (readonly, retain) NSString* nextPlayUserId;

+ (StartGameResponse*) defaultInstance;
- (StartGameResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StartGameResponse_Builder*) builder;
+ (StartGameResponse_Builder*) builder;
+ (StartGameResponse_Builder*) builderWithPrototype:(StartGameResponse*) prototype;

+ (StartGameResponse*) parseFromData:(NSData*) data;
+ (StartGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (StartGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StartGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameResponse_Builder : PBGeneratedMessage_Builder {
@private
  StartGameResponse* result;
}

- (StartGameResponse*) defaultInstance;

- (StartGameResponse_Builder*) clear;
- (StartGameResponse_Builder*) clone;

- (StartGameResponse*) build;
- (StartGameResponse*) buildPartial;

- (StartGameResponse_Builder*) mergeFrom:(StartGameResponse*) other;
- (StartGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StartGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (StartGameResponse_Builder*) setCurrentPlayUserId:(NSString*) value;
- (StartGameResponse_Builder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (StartGameResponse_Builder*) setNextPlayUserId:(NSString*) value;
- (StartGameResponse_Builder*) clearNextPlayUserId;
@end

@interface RoomNotificationRequest : PBGeneratedMessage {
@private
  NSMutableArray* mutableSessionIdsDeletedList;
  NSMutableArray* mutableSessionsChangedList;
  NSMutableArray* mutableSessionsAddedList;
}
- (NSArray*) sessionsChangedList;
- (PBGameSessionChanged*) sessionsChangedAtIndex:(int32_t) index;
- (NSArray*) sessionsAddedList;
- (PBGameSession*) sessionsAddedAtIndex:(int32_t) index;
- (NSArray*) sessionIdsDeletedList;
- (int32_t) sessionIdsDeletedAtIndex:(int32_t) index;

+ (RoomNotificationRequest*) defaultInstance;
- (RoomNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomNotificationRequest_Builder*) builder;
+ (RoomNotificationRequest_Builder*) builder;
+ (RoomNotificationRequest_Builder*) builderWithPrototype:(RoomNotificationRequest*) prototype;

+ (RoomNotificationRequest*) parseFromData:(NSData*) data;
+ (RoomNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RoomNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  RoomNotificationRequest* result;
}

- (RoomNotificationRequest*) defaultInstance;

- (RoomNotificationRequest_Builder*) clear;
- (RoomNotificationRequest_Builder*) clone;

- (RoomNotificationRequest*) build;
- (RoomNotificationRequest*) buildPartial;

- (RoomNotificationRequest_Builder*) mergeFrom:(RoomNotificationRequest*) other;
- (RoomNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) sessionsChangedList;
- (PBGameSessionChanged*) sessionsChangedAtIndex:(int32_t) index;
- (RoomNotificationRequest_Builder*) replaceSessionsChangedAtIndex:(int32_t) index with:(PBGameSessionChanged*) value;
- (RoomNotificationRequest_Builder*) addSessionsChanged:(PBGameSessionChanged*) value;
- (RoomNotificationRequest_Builder*) addAllSessionsChanged:(NSArray*) values;
- (RoomNotificationRequest_Builder*) clearSessionsChangedList;

- (NSArray*) sessionsAddedList;
- (PBGameSession*) sessionsAddedAtIndex:(int32_t) index;
- (RoomNotificationRequest_Builder*) replaceSessionsAddedAtIndex:(int32_t) index with:(PBGameSession*) value;
- (RoomNotificationRequest_Builder*) addSessionsAdded:(PBGameSession*) value;
- (RoomNotificationRequest_Builder*) addAllSessionsAdded:(NSArray*) values;
- (RoomNotificationRequest_Builder*) clearSessionsAddedList;

- (NSArray*) sessionIdsDeletedList;
- (int32_t) sessionIdsDeletedAtIndex:(int32_t) index;
- (RoomNotificationRequest_Builder*) replaceSessionIdsDeletedAtIndex:(int32_t) index with:(int32_t) value;
- (RoomNotificationRequest_Builder*) addSessionIdsDeleted:(int32_t) value;
- (RoomNotificationRequest_Builder*) addAllSessionIdsDeleted:(NSArray*) values;
- (RoomNotificationRequest_Builder*) clearSessionIdsDeletedList;
@end

@interface RoomNotificationResponse : PBGeneratedMessage {
@private
}

+ (RoomNotificationResponse*) defaultInstance;
- (RoomNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomNotificationResponse_Builder*) builder;
+ (RoomNotificationResponse_Builder*) builder;
+ (RoomNotificationResponse_Builder*) builderWithPrototype:(RoomNotificationResponse*) prototype;

+ (RoomNotificationResponse*) parseFromData:(NSData*) data;
+ (RoomNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RoomNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  RoomNotificationResponse* result;
}

- (RoomNotificationResponse*) defaultInstance;

- (RoomNotificationResponse_Builder*) clear;
- (RoomNotificationResponse_Builder*) clone;

- (RoomNotificationResponse*) build;
- (RoomNotificationResponse*) buildPartial;

- (RoomNotificationResponse_Builder*) mergeFrom:(RoomNotificationResponse*) other;
- (RoomNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationRequest : PBGeneratedMessage {
@private
}

+ (RollDiceBeginNotificationRequest*) defaultInstance;
- (RollDiceBeginNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceBeginNotificationRequest_Builder*) builder;
+ (RollDiceBeginNotificationRequest_Builder*) builder;
+ (RollDiceBeginNotificationRequest_Builder*) builderWithPrototype:(RollDiceBeginNotificationRequest*) prototype;

+ (RollDiceBeginNotificationRequest*) parseFromData:(NSData*) data;
+ (RollDiceBeginNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceBeginNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceBeginNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  RollDiceBeginNotificationRequest* result;
}

- (RollDiceBeginNotificationRequest*) defaultInstance;

- (RollDiceBeginNotificationRequest_Builder*) clear;
- (RollDiceBeginNotificationRequest_Builder*) clone;

- (RollDiceBeginNotificationRequest*) build;
- (RollDiceBeginNotificationRequest*) buildPartial;

- (RollDiceBeginNotificationRequest_Builder*) mergeFrom:(RollDiceBeginNotificationRequest*) other;
- (RollDiceBeginNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceBeginNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationResponse : PBGeneratedMessage {
@private
}

+ (RollDiceBeginNotificationResponse*) defaultInstance;
- (RollDiceBeginNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceBeginNotificationResponse_Builder*) builder;
+ (RollDiceBeginNotificationResponse_Builder*) builder;
+ (RollDiceBeginNotificationResponse_Builder*) builderWithPrototype:(RollDiceBeginNotificationResponse*) prototype;

+ (RollDiceBeginNotificationResponse*) parseFromData:(NSData*) data;
+ (RollDiceBeginNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceBeginNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceBeginNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  RollDiceBeginNotificationResponse* result;
}

- (RollDiceBeginNotificationResponse*) defaultInstance;

- (RollDiceBeginNotificationResponse_Builder*) clear;
- (RollDiceBeginNotificationResponse_Builder*) clone;

- (RollDiceBeginNotificationResponse*) build;
- (RollDiceBeginNotificationResponse*) buildPartial;

- (RollDiceBeginNotificationResponse_Builder*) mergeFrom:(RollDiceBeginNotificationResponse*) other;
- (RollDiceBeginNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceBeginNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationRequest : PBGeneratedMessage {
@private
  NSMutableArray* mutableUserDiceList;
}
- (NSArray*) userDiceList;
- (PBUserDice*) userDiceAtIndex:(int32_t) index;

+ (RollDiceEndNotificationRequest*) defaultInstance;
- (RollDiceEndNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceEndNotificationRequest_Builder*) builder;
+ (RollDiceEndNotificationRequest_Builder*) builder;
+ (RollDiceEndNotificationRequest_Builder*) builderWithPrototype:(RollDiceEndNotificationRequest*) prototype;

+ (RollDiceEndNotificationRequest*) parseFromData:(NSData*) data;
+ (RollDiceEndNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceEndNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceEndNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  RollDiceEndNotificationRequest* result;
}

- (RollDiceEndNotificationRequest*) defaultInstance;

- (RollDiceEndNotificationRequest_Builder*) clear;
- (RollDiceEndNotificationRequest_Builder*) clone;

- (RollDiceEndNotificationRequest*) build;
- (RollDiceEndNotificationRequest*) buildPartial;

- (RollDiceEndNotificationRequest_Builder*) mergeFrom:(RollDiceEndNotificationRequest*) other;
- (RollDiceEndNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceEndNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userDiceList;
- (PBUserDice*) userDiceAtIndex:(int32_t) index;
- (RollDiceEndNotificationRequest_Builder*) replaceUserDiceAtIndex:(int32_t) index with:(PBUserDice*) value;
- (RollDiceEndNotificationRequest_Builder*) addUserDice:(PBUserDice*) value;
- (RollDiceEndNotificationRequest_Builder*) addAllUserDice:(NSArray*) values;
- (RollDiceEndNotificationRequest_Builder*) clearUserDiceList;
@end

@interface RollDiceEndNotificationResponse : PBGeneratedMessage {
@private
}

+ (RollDiceEndNotificationResponse*) defaultInstance;
- (RollDiceEndNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceEndNotificationResponse_Builder*) builder;
+ (RollDiceEndNotificationResponse_Builder*) builder;
+ (RollDiceEndNotificationResponse_Builder*) builderWithPrototype:(RollDiceEndNotificationResponse*) prototype;

+ (RollDiceEndNotificationResponse*) parseFromData:(NSData*) data;
+ (RollDiceEndNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceEndNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceEndNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  RollDiceEndNotificationResponse* result;
}

- (RollDiceEndNotificationResponse*) defaultInstance;

- (RollDiceEndNotificationResponse_Builder*) clear;
- (RollDiceEndNotificationResponse_Builder*) clone;

- (RollDiceEndNotificationResponse*) build;
- (RollDiceEndNotificationResponse*) buildPartial;

- (RollDiceEndNotificationResponse_Builder*) mergeFrom:(RollDiceEndNotificationResponse*) other;
- (RollDiceEndNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceEndNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationRequest : PBGeneratedMessage {
@private
  BOOL hasExpiredTime_:1;
  BOOL hasDirection_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  int32_t expiredTime;
  int32_t direction;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
}
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasExpiredTime;
- (BOOL) hasDirection;
@property (readonly, retain) NSString* currentPlayUserId;
@property (readonly, retain) NSString* nextPlayUserId;
@property (readonly) int32_t expiredTime;
@property (readonly) int32_t direction;

+ (NextPlayerStartNotificationRequest*) defaultInstance;
- (NextPlayerStartNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NextPlayerStartNotificationRequest_Builder*) builder;
+ (NextPlayerStartNotificationRequest_Builder*) builder;
+ (NextPlayerStartNotificationRequest_Builder*) builderWithPrototype:(NextPlayerStartNotificationRequest*) prototype;

+ (NextPlayerStartNotificationRequest*) parseFromData:(NSData*) data;
+ (NextPlayerStartNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (NextPlayerStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NextPlayerStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  NextPlayerStartNotificationRequest* result;
}

- (NextPlayerStartNotificationRequest*) defaultInstance;

- (NextPlayerStartNotificationRequest_Builder*) clear;
- (NextPlayerStartNotificationRequest_Builder*) clone;

- (NextPlayerStartNotificationRequest*) build;
- (NextPlayerStartNotificationRequest*) buildPartial;

- (NextPlayerStartNotificationRequest_Builder*) mergeFrom:(NextPlayerStartNotificationRequest*) other;
- (NextPlayerStartNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NextPlayerStartNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (NextPlayerStartNotificationRequest_Builder*) setCurrentPlayUserId:(NSString*) value;
- (NextPlayerStartNotificationRequest_Builder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (NextPlayerStartNotificationRequest_Builder*) setNextPlayUserId:(NSString*) value;
- (NextPlayerStartNotificationRequest_Builder*) clearNextPlayUserId;

- (BOOL) hasExpiredTime;
- (int32_t) expiredTime;
- (NextPlayerStartNotificationRequest_Builder*) setExpiredTime:(int32_t) value;
- (NextPlayerStartNotificationRequest_Builder*) clearExpiredTime;

- (BOOL) hasDirection;
- (int32_t) direction;
- (NextPlayerStartNotificationRequest_Builder*) setDirection:(int32_t) value;
- (NextPlayerStartNotificationRequest_Builder*) clearDirection;
@end

@interface NextPlayerStartNotificationResponse : PBGeneratedMessage {
@private
}

+ (NextPlayerStartNotificationResponse*) defaultInstance;
- (NextPlayerStartNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NextPlayerStartNotificationResponse_Builder*) builder;
+ (NextPlayerStartNotificationResponse_Builder*) builder;
+ (NextPlayerStartNotificationResponse_Builder*) builderWithPrototype:(NextPlayerStartNotificationResponse*) prototype;

+ (NextPlayerStartNotificationResponse*) parseFromData:(NSData*) data;
+ (NextPlayerStartNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (NextPlayerStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NextPlayerStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  NextPlayerStartNotificationResponse* result;
}

- (NextPlayerStartNotificationResponse*) defaultInstance;

- (NextPlayerStartNotificationResponse_Builder*) clear;
- (NextPlayerStartNotificationResponse_Builder*) clone;

- (NextPlayerStartNotificationResponse*) build;
- (NextPlayerStartNotificationResponse*) buildPartial;

- (NextPlayerStartNotificationResponse_Builder*) mergeFrom:(NextPlayerStartNotificationResponse*) other;
- (NextPlayerStartNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NextPlayerStartNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceRequest : PBGeneratedMessage {
@private
  BOOL hasOdds_:1;
  BOOL hasOption_:1;
  BOOL hasAnte_:1;
  Float32 odds;
  int32_t option;
  int32_t ante;
}
- (BOOL) hasOption;
- (BOOL) hasAnte;
- (BOOL) hasOdds;
@property (readonly) int32_t option;
@property (readonly) int32_t ante;
@property (readonly) Float32 odds;

+ (BetDiceRequest*) defaultInstance;
- (BetDiceRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetDiceRequest_Builder*) builder;
+ (BetDiceRequest_Builder*) builder;
+ (BetDiceRequest_Builder*) builderWithPrototype:(BetDiceRequest*) prototype;

+ (BetDiceRequest*) parseFromData:(NSData*) data;
+ (BetDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BetDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceRequest_Builder : PBGeneratedMessage_Builder {
@private
  BetDiceRequest* result;
}

- (BetDiceRequest*) defaultInstance;

- (BetDiceRequest_Builder*) clear;
- (BetDiceRequest_Builder*) clone;

- (BetDiceRequest*) build;
- (BetDiceRequest*) buildPartial;

- (BetDiceRequest_Builder*) mergeFrom:(BetDiceRequest*) other;
- (BetDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetDiceRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOption;
- (int32_t) option;
- (BetDiceRequest_Builder*) setOption:(int32_t) value;
- (BetDiceRequest_Builder*) clearOption;

- (BOOL) hasAnte;
- (int32_t) ante;
- (BetDiceRequest_Builder*) setAnte:(int32_t) value;
- (BetDiceRequest_Builder*) clearAnte;

- (BOOL) hasOdds;
- (Float32) odds;
- (BetDiceRequest_Builder*) setOdds:(Float32) value;
- (BetDiceRequest_Builder*) clearOdds;
@end

@interface BetDiceResponse : PBGeneratedMessage {
@private
}

+ (BetDiceResponse*) defaultInstance;
- (BetDiceResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetDiceResponse_Builder*) builder;
+ (BetDiceResponse_Builder*) builder;
+ (BetDiceResponse_Builder*) builderWithPrototype:(BetDiceResponse*) prototype;

+ (BetDiceResponse*) parseFromData:(NSData*) data;
+ (BetDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BetDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceResponse_Builder : PBGeneratedMessage_Builder {
@private
  BetDiceResponse* result;
}

- (BetDiceResponse*) defaultInstance;

- (BetDiceResponse_Builder*) clear;
- (BetDiceResponse_Builder*) clone;

- (BetDiceResponse*) build;
- (BetDiceResponse*) buildPartial;

- (BetDiceResponse_Builder*) mergeFrom:(BetDiceResponse*) other;
- (BetDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetDiceResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationRequest : PBGeneratedMessage {
@private
  BOOL hasGameResult_:1;
  BOOL hasZjhGameResult_:1;
  PBDiceGameResult* gameResult;
  PBZJHGameResult* zjhGameResult;
}
- (BOOL) hasGameResult;
- (BOOL) hasZjhGameResult;
@property (readonly, retain) PBDiceGameResult* gameResult;
@property (readonly, retain) PBZJHGameResult* zjhGameResult;

+ (GameOverNotificationRequest*) defaultInstance;
- (GameOverNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameOverNotificationRequest_Builder*) builder;
+ (GameOverNotificationRequest_Builder*) builder;
+ (GameOverNotificationRequest_Builder*) builderWithPrototype:(GameOverNotificationRequest*) prototype;

+ (GameOverNotificationRequest*) parseFromData:(NSData*) data;
+ (GameOverNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameOverNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameOverNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  GameOverNotificationRequest* result;
}

- (GameOverNotificationRequest*) defaultInstance;

- (GameOverNotificationRequest_Builder*) clear;
- (GameOverNotificationRequest_Builder*) clone;

- (GameOverNotificationRequest*) build;
- (GameOverNotificationRequest*) buildPartial;

- (GameOverNotificationRequest_Builder*) mergeFrom:(GameOverNotificationRequest*) other;
- (GameOverNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameOverNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameResult;
- (PBDiceGameResult*) gameResult;
- (GameOverNotificationRequest_Builder*) setGameResult:(PBDiceGameResult*) value;
- (GameOverNotificationRequest_Builder*) setGameResultBuilder:(PBDiceGameResult_Builder*) builderForValue;
- (GameOverNotificationRequest_Builder*) mergeGameResult:(PBDiceGameResult*) value;
- (GameOverNotificationRequest_Builder*) clearGameResult;

- (BOOL) hasZjhGameResult;
- (PBZJHGameResult*) zjhGameResult;
- (GameOverNotificationRequest_Builder*) setZjhGameResult:(PBZJHGameResult*) value;
- (GameOverNotificationRequest_Builder*) setZjhGameResultBuilder:(PBZJHGameResult_Builder*) builderForValue;
- (GameOverNotificationRequest_Builder*) mergeZjhGameResult:(PBZJHGameResult*) value;
- (GameOverNotificationRequest_Builder*) clearZjhGameResult;
@end

@interface GameOverNotificationResponse : PBGeneratedMessage {
@private
}

+ (GameOverNotificationResponse*) defaultInstance;
- (GameOverNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameOverNotificationResponse_Builder*) builder;
+ (GameOverNotificationResponse_Builder*) builder;
+ (GameOverNotificationResponse_Builder*) builderWithPrototype:(GameOverNotificationResponse*) prototype;

+ (GameOverNotificationResponse*) parseFromData:(NSData*) data;
+ (GameOverNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameOverNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameOverNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  GameOverNotificationResponse* result;
}

- (GameOverNotificationResponse*) defaultInstance;

- (GameOverNotificationResponse_Builder*) clear;
- (GameOverNotificationResponse_Builder*) clone;

- (GameOverNotificationResponse*) build;
- (GameOverNotificationResponse*) buildPartial;

- (GameOverNotificationResponse_Builder*) mergeFrom:(GameOverNotificationResponse*) other;
- (GameOverNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameOverNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatRequest : PBGeneratedMessage {
@private
  BOOL hasChatType_:1;
  BOOL hasContentType_:1;
  BOOL hasContent_:1;
  BOOL hasExpressionId_:1;
  BOOL hasContentVoiceId_:1;
  int32_t chatType;
  int32_t contentType;
  NSString* content;
  NSString* expressionId;
  NSString* contentVoiceId;
  NSMutableArray* mutableToUserIdList;
}
- (BOOL) hasContent;
- (BOOL) hasChatType;
- (BOOL) hasContentType;
- (BOOL) hasExpressionId;
- (BOOL) hasContentVoiceId;
@property (readonly, retain) NSString* content;
@property (readonly) int32_t chatType;
@property (readonly) int32_t contentType;
@property (readonly, retain) NSString* expressionId;
@property (readonly, retain) NSString* contentVoiceId;
- (NSArray*) toUserIdList;
- (NSString*) toUserIdAtIndex:(int32_t) index;

+ (GameChatRequest*) defaultInstance;
- (GameChatRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameChatRequest_Builder*) builder;
+ (GameChatRequest_Builder*) builder;
+ (GameChatRequest_Builder*) builderWithPrototype:(GameChatRequest*) prototype;

+ (GameChatRequest*) parseFromData:(NSData*) data;
+ (GameChatRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameChatRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatRequest_Builder : PBGeneratedMessage_Builder {
@private
  GameChatRequest* result;
}

- (GameChatRequest*) defaultInstance;

- (GameChatRequest_Builder*) clear;
- (GameChatRequest_Builder*) clone;

- (GameChatRequest*) build;
- (GameChatRequest*) buildPartial;

- (GameChatRequest_Builder*) mergeFrom:(GameChatRequest*) other;
- (GameChatRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameChatRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) toUserIdList;
- (NSString*) toUserIdAtIndex:(int32_t) index;
- (GameChatRequest_Builder*) replaceToUserIdAtIndex:(int32_t) index with:(NSString*) value;
- (GameChatRequest_Builder*) addToUserId:(NSString*) value;
- (GameChatRequest_Builder*) addAllToUserId:(NSArray*) values;
- (GameChatRequest_Builder*) clearToUserIdList;

- (BOOL) hasContent;
- (NSString*) content;
- (GameChatRequest_Builder*) setContent:(NSString*) value;
- (GameChatRequest_Builder*) clearContent;

- (BOOL) hasChatType;
- (int32_t) chatType;
- (GameChatRequest_Builder*) setChatType:(int32_t) value;
- (GameChatRequest_Builder*) clearChatType;

- (BOOL) hasContentType;
- (int32_t) contentType;
- (GameChatRequest_Builder*) setContentType:(int32_t) value;
- (GameChatRequest_Builder*) clearContentType;

- (BOOL) hasExpressionId;
- (NSString*) expressionId;
- (GameChatRequest_Builder*) setExpressionId:(NSString*) value;
- (GameChatRequest_Builder*) clearExpressionId;

- (BOOL) hasContentVoiceId;
- (NSString*) contentVoiceId;
- (GameChatRequest_Builder*) setContentVoiceId:(NSString*) value;
- (GameChatRequest_Builder*) clearContentVoiceId;
@end

@interface GameChatResponse : PBGeneratedMessage {
@private
}

+ (GameChatResponse*) defaultInstance;
- (GameChatResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameChatResponse_Builder*) builder;
+ (GameChatResponse_Builder*) builder;
+ (GameChatResponse_Builder*) builderWithPrototype:(GameChatResponse*) prototype;

+ (GameChatResponse*) parseFromData:(NSData*) data;
+ (GameChatResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameChatResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatResponse_Builder : PBGeneratedMessage_Builder {
@private
  GameChatResponse* result;
}

- (GameChatResponse*) defaultInstance;

- (GameChatResponse_Builder*) clear;
- (GameChatResponse_Builder*) clone;

- (GameChatResponse*) build;
- (GameChatResponse*) buildPartial;

- (GameChatResponse_Builder*) mergeFrom:(GameChatResponse*) other;
- (GameChatResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameChatResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataRequest : PBGeneratedMessage {
@private
  BOOL hasGuessCorrect_:1;
  BOOL hasWidth_:1;
  BOOL hasLevel_:1;
  BOOL hasLanguage_:1;
  BOOL hasColor_:1;
  BOOL hasPenType_:1;
  BOOL hasWord_:1;
  BOOL hasGuessWord_:1;
  BOOL hasGuessUserId_:1;
  BOOL hasDrawAction_:1;
  BOOL hasCanvasSize_:1;
  BOOL guessCorrect_:1;
  Float32 width;
  int32_t level;
  int32_t language;
  int32_t color;
  int32_t penType;
  NSString* word;
  NSString* guessWord;
  NSString* guessUserId;
  PBDrawAction* drawAction;
  PBSize* canvasSize;
  NSMutableArray* mutablePointsList;
  int32_t pointsMemoizedSerializedSize;
}
- (BOOL) hasWord;
- (BOOL) hasLevel;
- (BOOL) hasLanguage;
- (BOOL) hasWidth;
- (BOOL) hasColor;
- (BOOL) hasPenType;
- (BOOL) hasGuessWord;
- (BOOL) hasGuessUserId;
- (BOOL) hasGuessCorrect;
- (BOOL) hasDrawAction;
- (BOOL) hasCanvasSize;
@property (readonly, retain) NSString* word;
@property (readonly) int32_t level;
@property (readonly) int32_t language;
@property (readonly) Float32 width;
@property (readonly) int32_t color;
@property (readonly) int32_t penType;
@property (readonly, retain) NSString* guessWord;
@property (readonly, retain) NSString* guessUserId;
- (BOOL) guessCorrect;
@property (readonly, retain) PBDrawAction* drawAction;
@property (readonly, retain) PBSize* canvasSize;
- (NSArray*) pointsList;
- (int32_t) pointsAtIndex:(int32_t) index;

+ (SendDrawDataRequest*) defaultInstance;
- (SendDrawDataRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SendDrawDataRequest_Builder*) builder;
+ (SendDrawDataRequest_Builder*) builder;
+ (SendDrawDataRequest_Builder*) builderWithPrototype:(SendDrawDataRequest*) prototype;

+ (SendDrawDataRequest*) parseFromData:(NSData*) data;
+ (SendDrawDataRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataRequest*) parseFromInputStream:(NSInputStream*) input;
+ (SendDrawDataRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SendDrawDataRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataRequest_Builder : PBGeneratedMessage_Builder {
@private
  SendDrawDataRequest* result;
}

- (SendDrawDataRequest*) defaultInstance;

- (SendDrawDataRequest_Builder*) clear;
- (SendDrawDataRequest_Builder*) clone;

- (SendDrawDataRequest*) build;
- (SendDrawDataRequest*) buildPartial;

- (SendDrawDataRequest_Builder*) mergeFrom:(SendDrawDataRequest*) other;
- (SendDrawDataRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SendDrawDataRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWord;
- (NSString*) word;
- (SendDrawDataRequest_Builder*) setWord:(NSString*) value;
- (SendDrawDataRequest_Builder*) clearWord;

- (BOOL) hasLevel;
- (int32_t) level;
- (SendDrawDataRequest_Builder*) setLevel:(int32_t) value;
- (SendDrawDataRequest_Builder*) clearLevel;

- (BOOL) hasLanguage;
- (int32_t) language;
- (SendDrawDataRequest_Builder*) setLanguage:(int32_t) value;
- (SendDrawDataRequest_Builder*) clearLanguage;

- (NSArray*) pointsList;
- (int32_t) pointsAtIndex:(int32_t) index;
- (SendDrawDataRequest_Builder*) replacePointsAtIndex:(int32_t) index with:(int32_t) value;
- (SendDrawDataRequest_Builder*) addPoints:(int32_t) value;
- (SendDrawDataRequest_Builder*) addAllPoints:(NSArray*) values;
- (SendDrawDataRequest_Builder*) clearPointsList;

- (BOOL) hasWidth;
- (Float32) width;
- (SendDrawDataRequest_Builder*) setWidth:(Float32) value;
- (SendDrawDataRequest_Builder*) clearWidth;

- (BOOL) hasColor;
- (int32_t) color;
- (SendDrawDataRequest_Builder*) setColor:(int32_t) value;
- (SendDrawDataRequest_Builder*) clearColor;

- (BOOL) hasPenType;
- (int32_t) penType;
- (SendDrawDataRequest_Builder*) setPenType:(int32_t) value;
- (SendDrawDataRequest_Builder*) clearPenType;

- (BOOL) hasGuessWord;
- (NSString*) guessWord;
- (SendDrawDataRequest_Builder*) setGuessWord:(NSString*) value;
- (SendDrawDataRequest_Builder*) clearGuessWord;

- (BOOL) hasGuessUserId;
- (NSString*) guessUserId;
- (SendDrawDataRequest_Builder*) setGuessUserId:(NSString*) value;
- (SendDrawDataRequest_Builder*) clearGuessUserId;

- (BOOL) hasGuessCorrect;
- (BOOL) guessCorrect;
- (SendDrawDataRequest_Builder*) setGuessCorrect:(BOOL) value;
- (SendDrawDataRequest_Builder*) clearGuessCorrect;

- (BOOL) hasDrawAction;
- (PBDrawAction*) drawAction;
- (SendDrawDataRequest_Builder*) setDrawAction:(PBDrawAction*) value;
- (SendDrawDataRequest_Builder*) setDrawActionBuilder:(PBDrawAction_Builder*) builderForValue;
- (SendDrawDataRequest_Builder*) mergeDrawAction:(PBDrawAction*) value;
- (SendDrawDataRequest_Builder*) clearDrawAction;

- (BOOL) hasCanvasSize;
- (PBSize*) canvasSize;
- (SendDrawDataRequest_Builder*) setCanvasSize:(PBSize*) value;
- (SendDrawDataRequest_Builder*) setCanvasSizeBuilder:(PBSize_Builder*) builderForValue;
- (SendDrawDataRequest_Builder*) mergeCanvasSize:(PBSize*) value;
- (SendDrawDataRequest_Builder*) clearCanvasSize;
@end

@interface SendDrawDataResponse : PBGeneratedMessage {
@private
}

+ (SendDrawDataResponse*) defaultInstance;
- (SendDrawDataResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SendDrawDataResponse_Builder*) builder;
+ (SendDrawDataResponse_Builder*) builder;
+ (SendDrawDataResponse_Builder*) builderWithPrototype:(SendDrawDataResponse*) prototype;

+ (SendDrawDataResponse*) parseFromData:(NSData*) data;
+ (SendDrawDataResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataResponse*) parseFromInputStream:(NSInputStream*) input;
+ (SendDrawDataResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SendDrawDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataResponse_Builder : PBGeneratedMessage_Builder {
@private
  SendDrawDataResponse* result;
}

- (SendDrawDataResponse*) defaultInstance;

- (SendDrawDataResponse_Builder*) clear;
- (SendDrawDataResponse_Builder*) clone;

- (SendDrawDataResponse*) build;
- (SendDrawDataResponse*) buildPartial;

- (SendDrawDataResponse_Builder*) mergeFrom:(SendDrawDataResponse*) other;
- (SendDrawDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SendDrawDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationRequest : PBGeneratedMessage {
@private
  BOOL hasZjhGameState_:1;
  PBZJHGameState* zjhGameState;
}
- (BOOL) hasZjhGameState;
@property (readonly, retain) PBZJHGameState* zjhGameState;

+ (GameStartNotificationRequest*) defaultInstance;
- (GameStartNotificationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStartNotificationRequest_Builder*) builder;
+ (GameStartNotificationRequest_Builder*) builder;
+ (GameStartNotificationRequest_Builder*) builderWithPrototype:(GameStartNotificationRequest*) prototype;

+ (GameStartNotificationRequest*) parseFromData:(NSData*) data;
+ (GameStartNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationRequest_Builder : PBGeneratedMessage_Builder {
@private
  GameStartNotificationRequest* result;
}

- (GameStartNotificationRequest*) defaultInstance;

- (GameStartNotificationRequest_Builder*) clear;
- (GameStartNotificationRequest_Builder*) clone;

- (GameStartNotificationRequest*) build;
- (GameStartNotificationRequest*) buildPartial;

- (GameStartNotificationRequest_Builder*) mergeFrom:(GameStartNotificationRequest*) other;
- (GameStartNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStartNotificationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasZjhGameState;
- (PBZJHGameState*) zjhGameState;
- (GameStartNotificationRequest_Builder*) setZjhGameState:(PBZJHGameState*) value;
- (GameStartNotificationRequest_Builder*) setZjhGameStateBuilder:(PBZJHGameState_Builder*) builderForValue;
- (GameStartNotificationRequest_Builder*) mergeZjhGameState:(PBZJHGameState*) value;
- (GameStartNotificationRequest_Builder*) clearZjhGameState;
@end

@interface GameStartNotificationResponse : PBGeneratedMessage {
@private
}

+ (GameStartNotificationResponse*) defaultInstance;
- (GameStartNotificationResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStartNotificationResponse_Builder*) builder;
+ (GameStartNotificationResponse_Builder*) builder;
+ (GameStartNotificationResponse_Builder*) builderWithPrototype:(GameStartNotificationResponse*) prototype;

+ (GameStartNotificationResponse*) parseFromData:(NSData*) data;
+ (GameStartNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationResponse_Builder : PBGeneratedMessage_Builder {
@private
  GameStartNotificationResponse* result;
}

- (GameStartNotificationResponse*) defaultInstance;

- (GameStartNotificationResponse_Builder*) clear;
- (GameStartNotificationResponse_Builder*) clone;

- (GameStartNotificationResponse*) build;
- (GameStartNotificationResponse*) buildPartial;

- (GameStartNotificationResponse_Builder*) mergeFrom:(GameStartNotificationResponse*) other;
- (GameStartNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStartNotificationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GeneralNotification : PBGeneratedMessage {
@private
  BOOL hasGuessCorrect_:1;
  BOOL hasUserGender_:1;
  BOOL hasWidth_:1;
  BOOL hasTurnGainCoins_:1;
  BOOL hasChatType_:1;
  BOOL hasGuessGainCoins_:1;
  BOOL hasLanguage_:1;
  BOOL hasRound_:1;
  BOOL hasLevel_:1;
  BOOL hasPenType_:1;
  BOOL hasColor_:1;
  BOOL hasUserLevel_:1;
  BOOL hasSessionStatus_:1;
  BOOL hasSessionHost_:1;
  BOOL hasChatContent_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL hasGuessUserId_:1;
  BOOL hasGuessWord_:1;
  BOOL hasNewUserId_:1;
  BOOL hasQuitUserId_:1;
  BOOL hasNickName_:1;
  BOOL hasWord_:1;
  BOOL hasUserAvatar_:1;
  BOOL hasLocation_:1;
  BOOL guessCorrect_:1;
  BOOL userGender_:1;
  Float32 width;
  int32_t turnGainCoins;
  int32_t chatType;
  int32_t guessGainCoins;
  int32_t language;
  int32_t round;
  int32_t level;
  int32_t penType;
  int32_t color;
  int32_t userLevel;
  int32_t sessionStatus;
  NSString* sessionHost;
  NSString* chatContent;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
  NSString* guessUserId;
  NSString* guessWord;
  NSString* newUserId;
  NSString* quitUserId;
  NSString* nickName;
  NSString* word;
  NSString* userAvatar;
  NSString* location;
  NSMutableArray* mutablePointsList;
  int32_t pointsMemoizedSerializedSize;
  NSMutableArray* mutableChatToUserIdList;
  NSMutableArray* mutableSnsUsersList;
}
- (BOOL) hasSessionHost;
- (BOOL) hasSessionStatus;
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasNewUserId;
- (BOOL) hasQuitUserId;
- (BOOL) hasNickName;
- (BOOL) hasUserAvatar;
- (BOOL) hasUserGender;
- (BOOL) hasLocation;
- (BOOL) hasUserLevel;
- (BOOL) hasWidth;
- (BOOL) hasColor;
- (BOOL) hasPenType;
- (BOOL) hasWord;
- (BOOL) hasLevel;
- (BOOL) hasRound;
- (BOOL) hasLanguage;
- (BOOL) hasGuessWord;
- (BOOL) hasGuessUserId;
- (BOOL) hasGuessCorrect;
- (BOOL) hasGuessGainCoins;
- (BOOL) hasChatContent;
- (BOOL) hasChatType;
- (BOOL) hasTurnGainCoins;
@property (readonly, retain) NSString* sessionHost;
@property (readonly) int32_t sessionStatus;
@property (readonly, retain) NSString* currentPlayUserId;
@property (readonly, retain) NSString* nextPlayUserId;
@property (readonly, retain) NSString* newUserId;
@property (readonly, retain) NSString* quitUserId;
@property (readonly, retain) NSString* nickName;
@property (readonly, retain) NSString* userAvatar;
- (BOOL) userGender;
@property (readonly, retain) NSString* location;
@property (readonly) int32_t userLevel;
@property (readonly) Float32 width;
@property (readonly) int32_t color;
@property (readonly) int32_t penType;
@property (readonly, retain) NSString* word;
@property (readonly) int32_t level;
@property (readonly) int32_t round;
@property (readonly) int32_t language;
@property (readonly, retain) NSString* guessWord;
@property (readonly, retain) NSString* guessUserId;
- (BOOL) guessCorrect;
@property (readonly) int32_t guessGainCoins;
@property (readonly, retain) NSString* chatContent;
@property (readonly) int32_t chatType;
@property (readonly) int32_t turnGainCoins;
- (NSArray*) snsUsersList;
- (PBSNSUser*) snsUsersAtIndex:(int32_t) index;
- (NSArray*) pointsList;
- (int32_t) pointsAtIndex:(int32_t) index;
- (NSArray*) chatToUserIdList;
- (NSString*) chatToUserIdAtIndex:(int32_t) index;

+ (GeneralNotification*) defaultInstance;
- (GeneralNotification*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GeneralNotification_Builder*) builder;
+ (GeneralNotification_Builder*) builder;
+ (GeneralNotification_Builder*) builderWithPrototype:(GeneralNotification*) prototype;

+ (GeneralNotification*) parseFromData:(NSData*) data;
+ (GeneralNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GeneralNotification*) parseFromInputStream:(NSInputStream*) input;
+ (GeneralNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GeneralNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GeneralNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GeneralNotification_Builder : PBGeneratedMessage_Builder {
@private
  GeneralNotification* result;
}

- (GeneralNotification*) defaultInstance;

- (GeneralNotification_Builder*) clear;
- (GeneralNotification_Builder*) clone;

- (GeneralNotification*) build;
- (GeneralNotification*) buildPartial;

- (GeneralNotification_Builder*) mergeFrom:(GeneralNotification*) other;
- (GeneralNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GeneralNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionHost;
- (NSString*) sessionHost;
- (GeneralNotification_Builder*) setSessionHost:(NSString*) value;
- (GeneralNotification_Builder*) clearSessionHost;

- (BOOL) hasSessionStatus;
- (int32_t) sessionStatus;
- (GeneralNotification_Builder*) setSessionStatus:(int32_t) value;
- (GeneralNotification_Builder*) clearSessionStatus;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (GeneralNotification_Builder*) setCurrentPlayUserId:(NSString*) value;
- (GeneralNotification_Builder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (GeneralNotification_Builder*) setNextPlayUserId:(NSString*) value;
- (GeneralNotification_Builder*) clearNextPlayUserId;

- (BOOL) hasNewUserId;
- (NSString*) newUserId;
- (GeneralNotification_Builder*) setNewUserId:(NSString*) value;
- (GeneralNotification_Builder*) clearNewUserId;

- (BOOL) hasQuitUserId;
- (NSString*) quitUserId;
- (GeneralNotification_Builder*) setQuitUserId:(NSString*) value;
- (GeneralNotification_Builder*) clearQuitUserId;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (GeneralNotification_Builder*) setNickName:(NSString*) value;
- (GeneralNotification_Builder*) clearNickName;

- (BOOL) hasUserAvatar;
- (NSString*) userAvatar;
- (GeneralNotification_Builder*) setUserAvatar:(NSString*) value;
- (GeneralNotification_Builder*) clearUserAvatar;

- (BOOL) hasUserGender;
- (BOOL) userGender;
- (GeneralNotification_Builder*) setUserGender:(BOOL) value;
- (GeneralNotification_Builder*) clearUserGender;

- (NSArray*) snsUsersList;
- (PBSNSUser*) snsUsersAtIndex:(int32_t) index;
- (GeneralNotification_Builder*) replaceSnsUsersAtIndex:(int32_t) index with:(PBSNSUser*) value;
- (GeneralNotification_Builder*) addSnsUsers:(PBSNSUser*) value;
- (GeneralNotification_Builder*) addAllSnsUsers:(NSArray*) values;
- (GeneralNotification_Builder*) clearSnsUsersList;

- (BOOL) hasLocation;
- (NSString*) location;
- (GeneralNotification_Builder*) setLocation:(NSString*) value;
- (GeneralNotification_Builder*) clearLocation;

- (BOOL) hasUserLevel;
- (int32_t) userLevel;
- (GeneralNotification_Builder*) setUserLevel:(int32_t) value;
- (GeneralNotification_Builder*) clearUserLevel;

- (NSArray*) pointsList;
- (int32_t) pointsAtIndex:(int32_t) index;
- (GeneralNotification_Builder*) replacePointsAtIndex:(int32_t) index with:(int32_t) value;
- (GeneralNotification_Builder*) addPoints:(int32_t) value;
- (GeneralNotification_Builder*) addAllPoints:(NSArray*) values;
- (GeneralNotification_Builder*) clearPointsList;

- (BOOL) hasWidth;
- (Float32) width;
- (GeneralNotification_Builder*) setWidth:(Float32) value;
- (GeneralNotification_Builder*) clearWidth;

- (BOOL) hasColor;
- (int32_t) color;
- (GeneralNotification_Builder*) setColor:(int32_t) value;
- (GeneralNotification_Builder*) clearColor;

- (BOOL) hasPenType;
- (int32_t) penType;
- (GeneralNotification_Builder*) setPenType:(int32_t) value;
- (GeneralNotification_Builder*) clearPenType;

- (BOOL) hasWord;
- (NSString*) word;
- (GeneralNotification_Builder*) setWord:(NSString*) value;
- (GeneralNotification_Builder*) clearWord;

- (BOOL) hasLevel;
- (int32_t) level;
- (GeneralNotification_Builder*) setLevel:(int32_t) value;
- (GeneralNotification_Builder*) clearLevel;

- (BOOL) hasRound;
- (int32_t) round;
- (GeneralNotification_Builder*) setRound:(int32_t) value;
- (GeneralNotification_Builder*) clearRound;

- (BOOL) hasLanguage;
- (int32_t) language;
- (GeneralNotification_Builder*) setLanguage:(int32_t) value;
- (GeneralNotification_Builder*) clearLanguage;

- (BOOL) hasGuessWord;
- (NSString*) guessWord;
- (GeneralNotification_Builder*) setGuessWord:(NSString*) value;
- (GeneralNotification_Builder*) clearGuessWord;

- (BOOL) hasGuessUserId;
- (NSString*) guessUserId;
- (GeneralNotification_Builder*) setGuessUserId:(NSString*) value;
- (GeneralNotification_Builder*) clearGuessUserId;

- (BOOL) hasGuessCorrect;
- (BOOL) guessCorrect;
- (GeneralNotification_Builder*) setGuessCorrect:(BOOL) value;
- (GeneralNotification_Builder*) clearGuessCorrect;

- (BOOL) hasGuessGainCoins;
- (int32_t) guessGainCoins;
- (GeneralNotification_Builder*) setGuessGainCoins:(int32_t) value;
- (GeneralNotification_Builder*) clearGuessGainCoins;

- (NSArray*) chatToUserIdList;
- (NSString*) chatToUserIdAtIndex:(int32_t) index;
- (GeneralNotification_Builder*) replaceChatToUserIdAtIndex:(int32_t) index with:(NSString*) value;
- (GeneralNotification_Builder*) addChatToUserId:(NSString*) value;
- (GeneralNotification_Builder*) addAllChatToUserId:(NSArray*) values;
- (GeneralNotification_Builder*) clearChatToUserIdList;

- (BOOL) hasChatContent;
- (NSString*) chatContent;
- (GeneralNotification_Builder*) setChatContent:(NSString*) value;
- (GeneralNotification_Builder*) clearChatContent;

- (BOOL) hasChatType;
- (int32_t) chatType;
- (GeneralNotification_Builder*) setChatType:(int32_t) value;
- (GeneralNotification_Builder*) clearChatType;

- (BOOL) hasTurnGainCoins;
- (int32_t) turnGainCoins;
- (GeneralNotification_Builder*) setTurnGainCoins:(int32_t) value;
- (GeneralNotification_Builder*) clearTurnGainCoins;
@end

@interface FacetimeChatRequest : PBGeneratedMessage {
@private
  BOOL hasChatGender_:1;
  BOOL hasUser_:1;
  BOOL chatGender_:1;
  PBGameUser* user;
}
- (BOOL) hasUser;
- (BOOL) hasChatGender;
@property (readonly, retain) PBGameUser* user;
- (BOOL) chatGender;

+ (FacetimeChatRequest*) defaultInstance;
- (FacetimeChatRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FacetimeChatRequest_Builder*) builder;
+ (FacetimeChatRequest_Builder*) builder;
+ (FacetimeChatRequest_Builder*) builderWithPrototype:(FacetimeChatRequest*) prototype;

+ (FacetimeChatRequest*) parseFromData:(NSData*) data;
+ (FacetimeChatRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FacetimeChatRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FacetimeChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FacetimeChatRequest_Builder : PBGeneratedMessage_Builder {
@private
  FacetimeChatRequest* result;
}

- (FacetimeChatRequest*) defaultInstance;

- (FacetimeChatRequest_Builder*) clear;
- (FacetimeChatRequest_Builder*) clone;

- (FacetimeChatRequest*) build;
- (FacetimeChatRequest*) buildPartial;

- (FacetimeChatRequest_Builder*) mergeFrom:(FacetimeChatRequest*) other;
- (FacetimeChatRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FacetimeChatRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (FacetimeChatRequest_Builder*) setUser:(PBGameUser*) value;
- (FacetimeChatRequest_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue;
- (FacetimeChatRequest_Builder*) mergeUser:(PBGameUser*) value;
- (FacetimeChatRequest_Builder*) clearUser;

- (BOOL) hasChatGender;
- (BOOL) chatGender;
- (FacetimeChatRequest_Builder*) setChatGender:(BOOL) value;
- (FacetimeChatRequest_Builder*) clearChatGender;
@end

@interface FacetimeChatResponse : PBGeneratedMessage {
@private
  BOOL hasChosenToInitiate_:1;
  BOOL chosenToInitiate_:1;
  NSMutableArray* mutableUserList;
}
- (BOOL) hasChosenToInitiate;
- (BOOL) chosenToInitiate;
- (NSArray*) userList;
- (PBGameUser*) userAtIndex:(int32_t) index;

+ (FacetimeChatResponse*) defaultInstance;
- (FacetimeChatResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FacetimeChatResponse_Builder*) builder;
+ (FacetimeChatResponse_Builder*) builder;
+ (FacetimeChatResponse_Builder*) builderWithPrototype:(FacetimeChatResponse*) prototype;

+ (FacetimeChatResponse*) parseFromData:(NSData*) data;
+ (FacetimeChatResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FacetimeChatResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FacetimeChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FacetimeChatResponse_Builder : PBGeneratedMessage_Builder {
@private
  FacetimeChatResponse* result;
}

- (FacetimeChatResponse*) defaultInstance;

- (FacetimeChatResponse_Builder*) clear;
- (FacetimeChatResponse_Builder*) clone;

- (FacetimeChatResponse*) build;
- (FacetimeChatResponse*) buildPartial;

- (FacetimeChatResponse_Builder*) mergeFrom:(FacetimeChatResponse*) other;
- (FacetimeChatResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FacetimeChatResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userList;
- (PBGameUser*) userAtIndex:(int32_t) index;
- (FacetimeChatResponse_Builder*) replaceUserAtIndex:(int32_t) index with:(PBGameUser*) value;
- (FacetimeChatResponse_Builder*) addUser:(PBGameUser*) value;
- (FacetimeChatResponse_Builder*) addAllUser:(NSArray*) values;
- (FacetimeChatResponse_Builder*) clearUserList;

- (BOOL) hasChosenToInitiate;
- (BOOL) chosenToInitiate;
- (FacetimeChatResponse_Builder*) setChosenToInitiate:(BOOL) value;
- (FacetimeChatResponse_Builder*) clearChosenToInitiate;
@end

@interface GameMessage : PBGeneratedMessage {
@private
  BOOL hasSessionId_:1;
  BOOL hasStartOffset_:1;
  BOOL hasMessageId_:1;
  BOOL hasTimeStamp_:1;
  BOOL hasRound_:1;
  BOOL hasMaxCount_:1;
  BOOL hasOnlineUserCount_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasToUserId_:1;
  BOOL hasUserId_:1;
  BOOL hasMac_:1;
  BOOL hasBetResponse_:1;
  BOOL hasBetRequest_:1;
  BOOL hasUseItemResponse_:1;
  BOOL hasUseItemRequest_:1;
  BOOL hasBetDiceResponse_:1;
  BOOL hasBetDiceRequest_:1;
  BOOL hasUserDiceNotification_:1;
  BOOL hasUnRegisterRoomsNotificationResponse_:1;
  BOOL hasUnRegisterRoomsNotificationRequest_:1;
  BOOL hasRegisterRoomsNotificationResponse_:1;
  BOOL hasRegisterRoomsNotificationRequest_:1;
  BOOL hasGameOverNotificationResponse_:1;
  BOOL hasCheckCardRequest_:1;
  BOOL hasCheckCardResponse_:1;
  BOOL hasFoldCardRequest_:1;
  BOOL hasFoldCardResponse_:1;
  BOOL hasShowCardRequest_:1;
  BOOL hasShowCardResponse_:1;
  BOOL hasCompareCardRequest_:1;
  BOOL hasCompareCardResponse_:1;
  BOOL hasChangeCardRequest_:1;
  BOOL hasChangeCardResponse_:1;
  BOOL hasTimeoutSettingRequest_:1;
  BOOL hasTimeoutSettingResponse_:1;
  BOOL hasJoinGameRequest_:1;
  BOOL hasJoinGameResponse_:1;
  BOOL hasStartGameRequest_:1;
  BOOL hasStartGameResponse_:1;
  BOOL hasGameStartNotificationRequest_:1;
  BOOL hasGameStartNotificationResponse_:1;
  BOOL hasSendDrawDataRequest_:1;
  BOOL hasSendDrawDataResponse_:1;
  BOOL hasChatRequest_:1;
  BOOL hasChatResponse_:1;
  BOOL hasFacetimeChatRequest_:1;
  BOOL hasFacetimeChatResponse_:1;
  BOOL hasNotification_:1;
  BOOL hasGetRoomsRequest_:1;
  BOOL hasGetRoomsResponse_:1;
  BOOL hasCreateRoomRequest_:1;
  BOOL hasCreateRoomResponse_:1;
  BOOL hasSearchRoomRequest_:1;
  BOOL hasSearchRoomResponse_:1;
  BOOL hasRoomNotificationRequest_:1;
  BOOL hasRollDiceEndNotificationRequest_:1;
  BOOL hasCallDiceRequest_:1;
  BOOL hasCallDiceResponse_:1;
  BOOL hasOpenDiceRequest_:1;
  BOOL hasOpenDiceResponse_:1;
  BOOL hasGameOverNotificationRequest_:1;
  BOOL hasCompleteReason_:1;
  BOOL hasResultCode_:1;
  BOOL hasCommand_:1;
  int64_t sessionId;
  int32_t startOffset;
  int32_t messageId;
  int32_t timeStamp;
  int32_t round;
  int32_t maxCount;
  int32_t onlineUserCount;
  NSString* currentPlayUserId;
  NSString* toUserId;
  NSString* userId;
  NSString* mac;
  BetResponse* betResponse;
  BetRequest* betRequest;
  UseItemResponse* useItemResponse;
  UseItemRequest* useItemRequest;
  BetDiceResponse* betDiceResponse;
  BetDiceRequest* betDiceRequest;
  UserDiceNotification* userDiceNotification;
  UnRegisterRoomsNotificationResponse* unRegisterRoomsNotificationResponse;
  UnRegisterRoomsNotificationRequest* unRegisterRoomsNotificationRequest;
  RegisterRoomsNotificationResponse* registerRoomsNotificationResponse;
  RegisterRoomsNotificationRequest* registerRoomsNotificationRequest;
  GameOverNotificationResponse* gameOverNotificationResponse;
  CheckCardRequest* checkCardRequest;
  CheckCardResponse* checkCardResponse;
  FoldCardRequest* foldCardRequest;
  FoldCardResponse* foldCardResponse;
  ShowCardRequest* showCardRequest;
  ShowCardResponse* showCardResponse;
  CompareCardRequest* compareCardRequest;
  CompareCardResponse* compareCardResponse;
  ChangeCardRequest* changeCardRequest;
  ChangeCardResponse* changeCardResponse;
  TimeoutSettingRequest* timeoutSettingRequest;
  TimeoutSettingResponse* timeoutSettingResponse;
  JoinGameRequest* joinGameRequest;
  JoinGameResponse* joinGameResponse;
  StartGameRequest* startGameRequest;
  StartGameResponse* startGameResponse;
  GameStartNotificationRequest* gameStartNotificationRequest;
  GameStartNotificationResponse* gameStartNotificationResponse;
  SendDrawDataRequest* sendDrawDataRequest;
  SendDrawDataResponse* sendDrawDataResponse;
  GameChatRequest* chatRequest;
  GameChatResponse* chatResponse;
  FacetimeChatRequest* facetimeChatRequest;
  FacetimeChatResponse* facetimeChatResponse;
  GeneralNotification* notification;
  GetRoomsRequest* getRoomsRequest;
  GetRoomsResponse* getRoomsResponse;
  CreateRoomRequest* createRoomRequest;
  CreateRoomResponse* createRoomResponse;
  SearchRoomRequest* searchRoomRequest;
  SearchRoomResponse* searchRoomResponse;
  RoomNotificationRequest* roomNotificationRequest;
  RollDiceEndNotificationRequest* rollDiceEndNotificationRequest;
  CallDiceRequest* callDiceRequest;
  CallDiceResponse* callDiceResponse;
  OpenDiceRequest* openDiceRequest;
  OpenDiceResponse* openDiceResponse;
  GameOverNotificationRequest* gameOverNotificationRequest;
  GameCompleteReason completeReason;
  GameResultCode resultCode;
  GameCommandType command;
}
- (BOOL) hasCommand;
- (BOOL) hasMessageId;
- (BOOL) hasResultCode;
- (BOOL) hasUserId;
- (BOOL) hasSessionId;
- (BOOL) hasRound;
- (BOOL) hasCompleteReason;
- (BOOL) hasOnlineUserCount;
- (BOOL) hasToUserId;
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasJoinGameRequest;
- (BOOL) hasJoinGameResponse;
- (BOOL) hasStartGameRequest;
- (BOOL) hasStartGameResponse;
- (BOOL) hasGameStartNotificationRequest;
- (BOOL) hasGameStartNotificationResponse;
- (BOOL) hasSendDrawDataRequest;
- (BOOL) hasSendDrawDataResponse;
- (BOOL) hasChatRequest;
- (BOOL) hasChatResponse;
- (BOOL) hasFacetimeChatRequest;
- (BOOL) hasFacetimeChatResponse;
- (BOOL) hasNotification;
- (BOOL) hasGetRoomsRequest;
- (BOOL) hasGetRoomsResponse;
- (BOOL) hasCreateRoomRequest;
- (BOOL) hasCreateRoomResponse;
- (BOOL) hasSearchRoomRequest;
- (BOOL) hasSearchRoomResponse;
- (BOOL) hasRoomNotificationRequest;
- (BOOL) hasRollDiceEndNotificationRequest;
- (BOOL) hasCallDiceRequest;
- (BOOL) hasCallDiceResponse;
- (BOOL) hasOpenDiceRequest;
- (BOOL) hasOpenDiceResponse;
- (BOOL) hasGameOverNotificationRequest;
- (BOOL) hasGameOverNotificationResponse;
- (BOOL) hasRegisterRoomsNotificationRequest;
- (BOOL) hasRegisterRoomsNotificationResponse;
- (BOOL) hasUnRegisterRoomsNotificationRequest;
- (BOOL) hasUnRegisterRoomsNotificationResponse;
- (BOOL) hasUserDiceNotification;
- (BOOL) hasBetDiceRequest;
- (BOOL) hasBetDiceResponse;
- (BOOL) hasUseItemRequest;
- (BOOL) hasUseItemResponse;
- (BOOL) hasBetRequest;
- (BOOL) hasBetResponse;
- (BOOL) hasCheckCardRequest;
- (BOOL) hasCheckCardResponse;
- (BOOL) hasFoldCardRequest;
- (BOOL) hasFoldCardResponse;
- (BOOL) hasShowCardRequest;
- (BOOL) hasShowCardResponse;
- (BOOL) hasCompareCardRequest;
- (BOOL) hasCompareCardResponse;
- (BOOL) hasChangeCardRequest;
- (BOOL) hasChangeCardResponse;
- (BOOL) hasTimeoutSettingRequest;
- (BOOL) hasTimeoutSettingResponse;
- (BOOL) hasStartOffset;
- (BOOL) hasMaxCount;
- (BOOL) hasTimeStamp;
- (BOOL) hasMac;
@property (readonly) GameCommandType command;
@property (readonly) int32_t messageId;
@property (readonly) GameResultCode resultCode;
@property (readonly, retain) NSString* userId;
@property (readonly) int64_t sessionId;
@property (readonly) int32_t round;
@property (readonly) GameCompleteReason completeReason;
@property (readonly) int32_t onlineUserCount;
@property (readonly, retain) NSString* toUserId;
@property (readonly, retain) NSString* currentPlayUserId;
@property (readonly, retain) JoinGameRequest* joinGameRequest;
@property (readonly, retain) JoinGameResponse* joinGameResponse;
@property (readonly, retain) StartGameRequest* startGameRequest;
@property (readonly, retain) StartGameResponse* startGameResponse;
@property (readonly, retain) GameStartNotificationRequest* gameStartNotificationRequest;
@property (readonly, retain) GameStartNotificationResponse* gameStartNotificationResponse;
@property (readonly, retain) SendDrawDataRequest* sendDrawDataRequest;
@property (readonly, retain) SendDrawDataResponse* sendDrawDataResponse;
@property (readonly, retain) GameChatRequest* chatRequest;
@property (readonly, retain) GameChatResponse* chatResponse;
@property (readonly, retain) FacetimeChatRequest* facetimeChatRequest;
@property (readonly, retain) FacetimeChatResponse* facetimeChatResponse;
@property (readonly, retain) GeneralNotification* notification;
@property (readonly, retain) GetRoomsRequest* getRoomsRequest;
@property (readonly, retain) GetRoomsResponse* getRoomsResponse;
@property (readonly, retain) CreateRoomRequest* createRoomRequest;
@property (readonly, retain) CreateRoomResponse* createRoomResponse;
@property (readonly, retain) SearchRoomRequest* searchRoomRequest;
@property (readonly, retain) SearchRoomResponse* searchRoomResponse;
@property (readonly, retain) RoomNotificationRequest* roomNotificationRequest;
@property (readonly, retain) RollDiceEndNotificationRequest* rollDiceEndNotificationRequest;
@property (readonly, retain) CallDiceRequest* callDiceRequest;
@property (readonly, retain) CallDiceResponse* callDiceResponse;
@property (readonly, retain) OpenDiceRequest* openDiceRequest;
@property (readonly, retain) OpenDiceResponse* openDiceResponse;
@property (readonly, retain) GameOverNotificationRequest* gameOverNotificationRequest;
@property (readonly, retain) GameOverNotificationResponse* gameOverNotificationResponse;
@property (readonly, retain) RegisterRoomsNotificationRequest* registerRoomsNotificationRequest;
@property (readonly, retain) RegisterRoomsNotificationResponse* registerRoomsNotificationResponse;
@property (readonly, retain) UnRegisterRoomsNotificationRequest* unRegisterRoomsNotificationRequest;
@property (readonly, retain) UnRegisterRoomsNotificationResponse* unRegisterRoomsNotificationResponse;
@property (readonly, retain) UserDiceNotification* userDiceNotification;
@property (readonly, retain) BetDiceRequest* betDiceRequest;
@property (readonly, retain) BetDiceResponse* betDiceResponse;
@property (readonly, retain) UseItemRequest* useItemRequest;
@property (readonly, retain) UseItemResponse* useItemResponse;
@property (readonly, retain) BetRequest* betRequest;
@property (readonly, retain) BetResponse* betResponse;
@property (readonly, retain) CheckCardRequest* checkCardRequest;
@property (readonly, retain) CheckCardResponse* checkCardResponse;
@property (readonly, retain) FoldCardRequest* foldCardRequest;
@property (readonly, retain) FoldCardResponse* foldCardResponse;
@property (readonly, retain) ShowCardRequest* showCardRequest;
@property (readonly, retain) ShowCardResponse* showCardResponse;
@property (readonly, retain) CompareCardRequest* compareCardRequest;
@property (readonly, retain) CompareCardResponse* compareCardResponse;
@property (readonly, retain) ChangeCardRequest* changeCardRequest;
@property (readonly, retain) ChangeCardResponse* changeCardResponse;
@property (readonly, retain) TimeoutSettingRequest* timeoutSettingRequest;
@property (readonly, retain) TimeoutSettingResponse* timeoutSettingResponse;
@property (readonly) int32_t startOffset;
@property (readonly) int32_t maxCount;
@property (readonly) int32_t timeStamp;
@property (readonly, retain) NSString* mac;

+ (GameMessage*) defaultInstance;
- (GameMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameMessage_Builder*) builder;
+ (GameMessage_Builder*) builder;
+ (GameMessage_Builder*) builderWithPrototype:(GameMessage*) prototype;

+ (GameMessage*) parseFromData:(NSData*) data;
+ (GameMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameMessage*) parseFromInputStream:(NSInputStream*) input;
+ (GameMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameMessage_Builder : PBGeneratedMessage_Builder {
@private
  GameMessage* result;
}

- (GameMessage*) defaultInstance;

- (GameMessage_Builder*) clear;
- (GameMessage_Builder*) clone;

- (GameMessage*) build;
- (GameMessage*) buildPartial;

- (GameMessage_Builder*) mergeFrom:(GameMessage*) other;
- (GameMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCommand;
- (GameCommandType) command;
- (GameMessage_Builder*) setCommand:(GameCommandType) value;
- (GameMessage_Builder*) clearCommand;

- (BOOL) hasMessageId;
- (int32_t) messageId;
- (GameMessage_Builder*) setMessageId:(int32_t) value;
- (GameMessage_Builder*) clearMessageId;

- (BOOL) hasResultCode;
- (GameResultCode) resultCode;
- (GameMessage_Builder*) setResultCode:(GameResultCode) value;
- (GameMessage_Builder*) clearResultCode;

- (BOOL) hasUserId;
- (NSString*) userId;
- (GameMessage_Builder*) setUserId:(NSString*) value;
- (GameMessage_Builder*) clearUserId;

- (BOOL) hasSessionId;
- (int64_t) sessionId;
- (GameMessage_Builder*) setSessionId:(int64_t) value;
- (GameMessage_Builder*) clearSessionId;

- (BOOL) hasRound;
- (int32_t) round;
- (GameMessage_Builder*) setRound:(int32_t) value;
- (GameMessage_Builder*) clearRound;

- (BOOL) hasCompleteReason;
- (GameCompleteReason) completeReason;
- (GameMessage_Builder*) setCompleteReason:(GameCompleteReason) value;
- (GameMessage_Builder*) clearCompleteReason;

- (BOOL) hasOnlineUserCount;
- (int32_t) onlineUserCount;
- (GameMessage_Builder*) setOnlineUserCount:(int32_t) value;
- (GameMessage_Builder*) clearOnlineUserCount;

- (BOOL) hasToUserId;
- (NSString*) toUserId;
- (GameMessage_Builder*) setToUserId:(NSString*) value;
- (GameMessage_Builder*) clearToUserId;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (GameMessage_Builder*) setCurrentPlayUserId:(NSString*) value;
- (GameMessage_Builder*) clearCurrentPlayUserId;

- (BOOL) hasJoinGameRequest;
- (JoinGameRequest*) joinGameRequest;
- (GameMessage_Builder*) setJoinGameRequest:(JoinGameRequest*) value;
- (GameMessage_Builder*) setJoinGameRequestBuilder:(JoinGameRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeJoinGameRequest:(JoinGameRequest*) value;
- (GameMessage_Builder*) clearJoinGameRequest;

- (BOOL) hasJoinGameResponse;
- (JoinGameResponse*) joinGameResponse;
- (GameMessage_Builder*) setJoinGameResponse:(JoinGameResponse*) value;
- (GameMessage_Builder*) setJoinGameResponseBuilder:(JoinGameResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeJoinGameResponse:(JoinGameResponse*) value;
- (GameMessage_Builder*) clearJoinGameResponse;

- (BOOL) hasStartGameRequest;
- (StartGameRequest*) startGameRequest;
- (GameMessage_Builder*) setStartGameRequest:(StartGameRequest*) value;
- (GameMessage_Builder*) setStartGameRequestBuilder:(StartGameRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeStartGameRequest:(StartGameRequest*) value;
- (GameMessage_Builder*) clearStartGameRequest;

- (BOOL) hasStartGameResponse;
- (StartGameResponse*) startGameResponse;
- (GameMessage_Builder*) setStartGameResponse:(StartGameResponse*) value;
- (GameMessage_Builder*) setStartGameResponseBuilder:(StartGameResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeStartGameResponse:(StartGameResponse*) value;
- (GameMessage_Builder*) clearStartGameResponse;

- (BOOL) hasGameStartNotificationRequest;
- (GameStartNotificationRequest*) gameStartNotificationRequest;
- (GameMessage_Builder*) setGameStartNotificationRequest:(GameStartNotificationRequest*) value;
- (GameMessage_Builder*) setGameStartNotificationRequestBuilder:(GameStartNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGameStartNotificationRequest:(GameStartNotificationRequest*) value;
- (GameMessage_Builder*) clearGameStartNotificationRequest;

- (BOOL) hasGameStartNotificationResponse;
- (GameStartNotificationResponse*) gameStartNotificationResponse;
- (GameMessage_Builder*) setGameStartNotificationResponse:(GameStartNotificationResponse*) value;
- (GameMessage_Builder*) setGameStartNotificationResponseBuilder:(GameStartNotificationResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGameStartNotificationResponse:(GameStartNotificationResponse*) value;
- (GameMessage_Builder*) clearGameStartNotificationResponse;

- (BOOL) hasSendDrawDataRequest;
- (SendDrawDataRequest*) sendDrawDataRequest;
- (GameMessage_Builder*) setSendDrawDataRequest:(SendDrawDataRequest*) value;
- (GameMessage_Builder*) setSendDrawDataRequestBuilder:(SendDrawDataRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeSendDrawDataRequest:(SendDrawDataRequest*) value;
- (GameMessage_Builder*) clearSendDrawDataRequest;

- (BOOL) hasSendDrawDataResponse;
- (SendDrawDataResponse*) sendDrawDataResponse;
- (GameMessage_Builder*) setSendDrawDataResponse:(SendDrawDataResponse*) value;
- (GameMessage_Builder*) setSendDrawDataResponseBuilder:(SendDrawDataResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeSendDrawDataResponse:(SendDrawDataResponse*) value;
- (GameMessage_Builder*) clearSendDrawDataResponse;

- (BOOL) hasChatRequest;
- (GameChatRequest*) chatRequest;
- (GameMessage_Builder*) setChatRequest:(GameChatRequest*) value;
- (GameMessage_Builder*) setChatRequestBuilder:(GameChatRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeChatRequest:(GameChatRequest*) value;
- (GameMessage_Builder*) clearChatRequest;

- (BOOL) hasChatResponse;
- (GameChatResponse*) chatResponse;
- (GameMessage_Builder*) setChatResponse:(GameChatResponse*) value;
- (GameMessage_Builder*) setChatResponseBuilder:(GameChatResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeChatResponse:(GameChatResponse*) value;
- (GameMessage_Builder*) clearChatResponse;

- (BOOL) hasFacetimeChatRequest;
- (FacetimeChatRequest*) facetimeChatRequest;
- (GameMessage_Builder*) setFacetimeChatRequest:(FacetimeChatRequest*) value;
- (GameMessage_Builder*) setFacetimeChatRequestBuilder:(FacetimeChatRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeFacetimeChatRequest:(FacetimeChatRequest*) value;
- (GameMessage_Builder*) clearFacetimeChatRequest;

- (BOOL) hasFacetimeChatResponse;
- (FacetimeChatResponse*) facetimeChatResponse;
- (GameMessage_Builder*) setFacetimeChatResponse:(FacetimeChatResponse*) value;
- (GameMessage_Builder*) setFacetimeChatResponseBuilder:(FacetimeChatResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeFacetimeChatResponse:(FacetimeChatResponse*) value;
- (GameMessage_Builder*) clearFacetimeChatResponse;

- (BOOL) hasNotification;
- (GeneralNotification*) notification;
- (GameMessage_Builder*) setNotification:(GeneralNotification*) value;
- (GameMessage_Builder*) setNotificationBuilder:(GeneralNotification_Builder*) builderForValue;
- (GameMessage_Builder*) mergeNotification:(GeneralNotification*) value;
- (GameMessage_Builder*) clearNotification;

- (BOOL) hasGetRoomsRequest;
- (GetRoomsRequest*) getRoomsRequest;
- (GameMessage_Builder*) setGetRoomsRequest:(GetRoomsRequest*) value;
- (GameMessage_Builder*) setGetRoomsRequestBuilder:(GetRoomsRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGetRoomsRequest:(GetRoomsRequest*) value;
- (GameMessage_Builder*) clearGetRoomsRequest;

- (BOOL) hasGetRoomsResponse;
- (GetRoomsResponse*) getRoomsResponse;
- (GameMessage_Builder*) setGetRoomsResponse:(GetRoomsResponse*) value;
- (GameMessage_Builder*) setGetRoomsResponseBuilder:(GetRoomsResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGetRoomsResponse:(GetRoomsResponse*) value;
- (GameMessage_Builder*) clearGetRoomsResponse;

- (BOOL) hasCreateRoomRequest;
- (CreateRoomRequest*) createRoomRequest;
- (GameMessage_Builder*) setCreateRoomRequest:(CreateRoomRequest*) value;
- (GameMessage_Builder*) setCreateRoomRequestBuilder:(CreateRoomRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCreateRoomRequest:(CreateRoomRequest*) value;
- (GameMessage_Builder*) clearCreateRoomRequest;

- (BOOL) hasCreateRoomResponse;
- (CreateRoomResponse*) createRoomResponse;
- (GameMessage_Builder*) setCreateRoomResponse:(CreateRoomResponse*) value;
- (GameMessage_Builder*) setCreateRoomResponseBuilder:(CreateRoomResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCreateRoomResponse:(CreateRoomResponse*) value;
- (GameMessage_Builder*) clearCreateRoomResponse;

- (BOOL) hasSearchRoomRequest;
- (SearchRoomRequest*) searchRoomRequest;
- (GameMessage_Builder*) setSearchRoomRequest:(SearchRoomRequest*) value;
- (GameMessage_Builder*) setSearchRoomRequestBuilder:(SearchRoomRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeSearchRoomRequest:(SearchRoomRequest*) value;
- (GameMessage_Builder*) clearSearchRoomRequest;

- (BOOL) hasSearchRoomResponse;
- (SearchRoomResponse*) searchRoomResponse;
- (GameMessage_Builder*) setSearchRoomResponse:(SearchRoomResponse*) value;
- (GameMessage_Builder*) setSearchRoomResponseBuilder:(SearchRoomResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeSearchRoomResponse:(SearchRoomResponse*) value;
- (GameMessage_Builder*) clearSearchRoomResponse;

- (BOOL) hasRoomNotificationRequest;
- (RoomNotificationRequest*) roomNotificationRequest;
- (GameMessage_Builder*) setRoomNotificationRequest:(RoomNotificationRequest*) value;
- (GameMessage_Builder*) setRoomNotificationRequestBuilder:(RoomNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeRoomNotificationRequest:(RoomNotificationRequest*) value;
- (GameMessage_Builder*) clearRoomNotificationRequest;

- (BOOL) hasRollDiceEndNotificationRequest;
- (RollDiceEndNotificationRequest*) rollDiceEndNotificationRequest;
- (GameMessage_Builder*) setRollDiceEndNotificationRequest:(RollDiceEndNotificationRequest*) value;
- (GameMessage_Builder*) setRollDiceEndNotificationRequestBuilder:(RollDiceEndNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeRollDiceEndNotificationRequest:(RollDiceEndNotificationRequest*) value;
- (GameMessage_Builder*) clearRollDiceEndNotificationRequest;

- (BOOL) hasCallDiceRequest;
- (CallDiceRequest*) callDiceRequest;
- (GameMessage_Builder*) setCallDiceRequest:(CallDiceRequest*) value;
- (GameMessage_Builder*) setCallDiceRequestBuilder:(CallDiceRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCallDiceRequest:(CallDiceRequest*) value;
- (GameMessage_Builder*) clearCallDiceRequest;

- (BOOL) hasCallDiceResponse;
- (CallDiceResponse*) callDiceResponse;
- (GameMessage_Builder*) setCallDiceResponse:(CallDiceResponse*) value;
- (GameMessage_Builder*) setCallDiceResponseBuilder:(CallDiceResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCallDiceResponse:(CallDiceResponse*) value;
- (GameMessage_Builder*) clearCallDiceResponse;

- (BOOL) hasOpenDiceRequest;
- (OpenDiceRequest*) openDiceRequest;
- (GameMessage_Builder*) setOpenDiceRequest:(OpenDiceRequest*) value;
- (GameMessage_Builder*) setOpenDiceRequestBuilder:(OpenDiceRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeOpenDiceRequest:(OpenDiceRequest*) value;
- (GameMessage_Builder*) clearOpenDiceRequest;

- (BOOL) hasOpenDiceResponse;
- (OpenDiceResponse*) openDiceResponse;
- (GameMessage_Builder*) setOpenDiceResponse:(OpenDiceResponse*) value;
- (GameMessage_Builder*) setOpenDiceResponseBuilder:(OpenDiceResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeOpenDiceResponse:(OpenDiceResponse*) value;
- (GameMessage_Builder*) clearOpenDiceResponse;

- (BOOL) hasGameOverNotificationRequest;
- (GameOverNotificationRequest*) gameOverNotificationRequest;
- (GameMessage_Builder*) setGameOverNotificationRequest:(GameOverNotificationRequest*) value;
- (GameMessage_Builder*) setGameOverNotificationRequestBuilder:(GameOverNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGameOverNotificationRequest:(GameOverNotificationRequest*) value;
- (GameMessage_Builder*) clearGameOverNotificationRequest;

- (BOOL) hasGameOverNotificationResponse;
- (GameOverNotificationResponse*) gameOverNotificationResponse;
- (GameMessage_Builder*) setGameOverNotificationResponse:(GameOverNotificationResponse*) value;
- (GameMessage_Builder*) setGameOverNotificationResponseBuilder:(GameOverNotificationResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeGameOverNotificationResponse:(GameOverNotificationResponse*) value;
- (GameMessage_Builder*) clearGameOverNotificationResponse;

- (BOOL) hasRegisterRoomsNotificationRequest;
- (RegisterRoomsNotificationRequest*) registerRoomsNotificationRequest;
- (GameMessage_Builder*) setRegisterRoomsNotificationRequest:(RegisterRoomsNotificationRequest*) value;
- (GameMessage_Builder*) setRegisterRoomsNotificationRequestBuilder:(RegisterRoomsNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeRegisterRoomsNotificationRequest:(RegisterRoomsNotificationRequest*) value;
- (GameMessage_Builder*) clearRegisterRoomsNotificationRequest;

- (BOOL) hasRegisterRoomsNotificationResponse;
- (RegisterRoomsNotificationResponse*) registerRoomsNotificationResponse;
- (GameMessage_Builder*) setRegisterRoomsNotificationResponse:(RegisterRoomsNotificationResponse*) value;
- (GameMessage_Builder*) setRegisterRoomsNotificationResponseBuilder:(RegisterRoomsNotificationResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeRegisterRoomsNotificationResponse:(RegisterRoomsNotificationResponse*) value;
- (GameMessage_Builder*) clearRegisterRoomsNotificationResponse;

- (BOOL) hasUnRegisterRoomsNotificationRequest;
- (UnRegisterRoomsNotificationRequest*) unRegisterRoomsNotificationRequest;
- (GameMessage_Builder*) setUnRegisterRoomsNotificationRequest:(UnRegisterRoomsNotificationRequest*) value;
- (GameMessage_Builder*) setUnRegisterRoomsNotificationRequestBuilder:(UnRegisterRoomsNotificationRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeUnRegisterRoomsNotificationRequest:(UnRegisterRoomsNotificationRequest*) value;
- (GameMessage_Builder*) clearUnRegisterRoomsNotificationRequest;

- (BOOL) hasUnRegisterRoomsNotificationResponse;
- (UnRegisterRoomsNotificationResponse*) unRegisterRoomsNotificationResponse;
- (GameMessage_Builder*) setUnRegisterRoomsNotificationResponse:(UnRegisterRoomsNotificationResponse*) value;
- (GameMessage_Builder*) setUnRegisterRoomsNotificationResponseBuilder:(UnRegisterRoomsNotificationResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeUnRegisterRoomsNotificationResponse:(UnRegisterRoomsNotificationResponse*) value;
- (GameMessage_Builder*) clearUnRegisterRoomsNotificationResponse;

- (BOOL) hasUserDiceNotification;
- (UserDiceNotification*) userDiceNotification;
- (GameMessage_Builder*) setUserDiceNotification:(UserDiceNotification*) value;
- (GameMessage_Builder*) setUserDiceNotificationBuilder:(UserDiceNotification_Builder*) builderForValue;
- (GameMessage_Builder*) mergeUserDiceNotification:(UserDiceNotification*) value;
- (GameMessage_Builder*) clearUserDiceNotification;

- (BOOL) hasBetDiceRequest;
- (BetDiceRequest*) betDiceRequest;
- (GameMessage_Builder*) setBetDiceRequest:(BetDiceRequest*) value;
- (GameMessage_Builder*) setBetDiceRequestBuilder:(BetDiceRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeBetDiceRequest:(BetDiceRequest*) value;
- (GameMessage_Builder*) clearBetDiceRequest;

- (BOOL) hasBetDiceResponse;
- (BetDiceResponse*) betDiceResponse;
- (GameMessage_Builder*) setBetDiceResponse:(BetDiceResponse*) value;
- (GameMessage_Builder*) setBetDiceResponseBuilder:(BetDiceResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeBetDiceResponse:(BetDiceResponse*) value;
- (GameMessage_Builder*) clearBetDiceResponse;

- (BOOL) hasUseItemRequest;
- (UseItemRequest*) useItemRequest;
- (GameMessage_Builder*) setUseItemRequest:(UseItemRequest*) value;
- (GameMessage_Builder*) setUseItemRequestBuilder:(UseItemRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeUseItemRequest:(UseItemRequest*) value;
- (GameMessage_Builder*) clearUseItemRequest;

- (BOOL) hasUseItemResponse;
- (UseItemResponse*) useItemResponse;
- (GameMessage_Builder*) setUseItemResponse:(UseItemResponse*) value;
- (GameMessage_Builder*) setUseItemResponseBuilder:(UseItemResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeUseItemResponse:(UseItemResponse*) value;
- (GameMessage_Builder*) clearUseItemResponse;

- (BOOL) hasBetRequest;
- (BetRequest*) betRequest;
- (GameMessage_Builder*) setBetRequest:(BetRequest*) value;
- (GameMessage_Builder*) setBetRequestBuilder:(BetRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeBetRequest:(BetRequest*) value;
- (GameMessage_Builder*) clearBetRequest;

- (BOOL) hasBetResponse;
- (BetResponse*) betResponse;
- (GameMessage_Builder*) setBetResponse:(BetResponse*) value;
- (GameMessage_Builder*) setBetResponseBuilder:(BetResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeBetResponse:(BetResponse*) value;
- (GameMessage_Builder*) clearBetResponse;

- (BOOL) hasCheckCardRequest;
- (CheckCardRequest*) checkCardRequest;
- (GameMessage_Builder*) setCheckCardRequest:(CheckCardRequest*) value;
- (GameMessage_Builder*) setCheckCardRequestBuilder:(CheckCardRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCheckCardRequest:(CheckCardRequest*) value;
- (GameMessage_Builder*) clearCheckCardRequest;

- (BOOL) hasCheckCardResponse;
- (CheckCardResponse*) checkCardResponse;
- (GameMessage_Builder*) setCheckCardResponse:(CheckCardResponse*) value;
- (GameMessage_Builder*) setCheckCardResponseBuilder:(CheckCardResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCheckCardResponse:(CheckCardResponse*) value;
- (GameMessage_Builder*) clearCheckCardResponse;

- (BOOL) hasFoldCardRequest;
- (FoldCardRequest*) foldCardRequest;
- (GameMessage_Builder*) setFoldCardRequest:(FoldCardRequest*) value;
- (GameMessage_Builder*) setFoldCardRequestBuilder:(FoldCardRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeFoldCardRequest:(FoldCardRequest*) value;
- (GameMessage_Builder*) clearFoldCardRequest;

- (BOOL) hasFoldCardResponse;
- (FoldCardResponse*) foldCardResponse;
- (GameMessage_Builder*) setFoldCardResponse:(FoldCardResponse*) value;
- (GameMessage_Builder*) setFoldCardResponseBuilder:(FoldCardResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeFoldCardResponse:(FoldCardResponse*) value;
- (GameMessage_Builder*) clearFoldCardResponse;

- (BOOL) hasShowCardRequest;
- (ShowCardRequest*) showCardRequest;
- (GameMessage_Builder*) setShowCardRequest:(ShowCardRequest*) value;
- (GameMessage_Builder*) setShowCardRequestBuilder:(ShowCardRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeShowCardRequest:(ShowCardRequest*) value;
- (GameMessage_Builder*) clearShowCardRequest;

- (BOOL) hasShowCardResponse;
- (ShowCardResponse*) showCardResponse;
- (GameMessage_Builder*) setShowCardResponse:(ShowCardResponse*) value;
- (GameMessage_Builder*) setShowCardResponseBuilder:(ShowCardResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeShowCardResponse:(ShowCardResponse*) value;
- (GameMessage_Builder*) clearShowCardResponse;

- (BOOL) hasCompareCardRequest;
- (CompareCardRequest*) compareCardRequest;
- (GameMessage_Builder*) setCompareCardRequest:(CompareCardRequest*) value;
- (GameMessage_Builder*) setCompareCardRequestBuilder:(CompareCardRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCompareCardRequest:(CompareCardRequest*) value;
- (GameMessage_Builder*) clearCompareCardRequest;

- (BOOL) hasCompareCardResponse;
- (CompareCardResponse*) compareCardResponse;
- (GameMessage_Builder*) setCompareCardResponse:(CompareCardResponse*) value;
- (GameMessage_Builder*) setCompareCardResponseBuilder:(CompareCardResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeCompareCardResponse:(CompareCardResponse*) value;
- (GameMessage_Builder*) clearCompareCardResponse;

- (BOOL) hasChangeCardRequest;
- (ChangeCardRequest*) changeCardRequest;
- (GameMessage_Builder*) setChangeCardRequest:(ChangeCardRequest*) value;
- (GameMessage_Builder*) setChangeCardRequestBuilder:(ChangeCardRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeChangeCardRequest:(ChangeCardRequest*) value;
- (GameMessage_Builder*) clearChangeCardRequest;

- (BOOL) hasChangeCardResponse;
- (ChangeCardResponse*) changeCardResponse;
- (GameMessage_Builder*) setChangeCardResponse:(ChangeCardResponse*) value;
- (GameMessage_Builder*) setChangeCardResponseBuilder:(ChangeCardResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeChangeCardResponse:(ChangeCardResponse*) value;
- (GameMessage_Builder*) clearChangeCardResponse;

- (BOOL) hasTimeoutSettingRequest;
- (TimeoutSettingRequest*) timeoutSettingRequest;
- (GameMessage_Builder*) setTimeoutSettingRequest:(TimeoutSettingRequest*) value;
- (GameMessage_Builder*) setTimeoutSettingRequestBuilder:(TimeoutSettingRequest_Builder*) builderForValue;
- (GameMessage_Builder*) mergeTimeoutSettingRequest:(TimeoutSettingRequest*) value;
- (GameMessage_Builder*) clearTimeoutSettingRequest;

- (BOOL) hasTimeoutSettingResponse;
- (TimeoutSettingResponse*) timeoutSettingResponse;
- (GameMessage_Builder*) setTimeoutSettingResponse:(TimeoutSettingResponse*) value;
- (GameMessage_Builder*) setTimeoutSettingResponseBuilder:(TimeoutSettingResponse_Builder*) builderForValue;
- (GameMessage_Builder*) mergeTimeoutSettingResponse:(TimeoutSettingResponse*) value;
- (GameMessage_Builder*) clearTimeoutSettingResponse;

- (BOOL) hasStartOffset;
- (int32_t) startOffset;
- (GameMessage_Builder*) setStartOffset:(int32_t) value;
- (GameMessage_Builder*) clearStartOffset;

- (BOOL) hasMaxCount;
- (int32_t) maxCount;
- (GameMessage_Builder*) setMaxCount:(int32_t) value;
- (GameMessage_Builder*) clearMaxCount;

- (BOOL) hasTimeStamp;
- (int32_t) timeStamp;
- (GameMessage_Builder*) setTimeStamp:(int32_t) value;
- (GameMessage_Builder*) clearTimeStamp;

- (BOOL) hasMac;
- (NSString*) mac;
- (GameMessage_Builder*) setMac:(NSString*) value;
- (GameMessage_Builder*) clearMac;
@end

@interface DataQueryResponse : PBGeneratedMessage {
@private
  BOOL hasResultCode_:1;
  BOOL hasTotalCount_:1;
  BOOL hasVersion_:1;
  BOOL hasUserRelation_:1;
  BOOL hasSongs_:1;
  BOOL hasOpus_:1;
  BOOL hasUser_:1;
  BOOL hasUserPhoto_:1;
  BOOL hasWall_:1;
  BOOL hasBbsDrawData_:1;
  int32_t resultCode;
  int32_t totalCount;
  int32_t version;
  int32_t userRelation;
  PBSongList* songs;
  PBOpus* opus;
  PBGameUser* user;
  PBUserPhoto* userPhoto;
  PBWall* wall;
  PBBBSDraw* bbsDrawData;
  NSMutableArray* mutableIdListList;
  NSMutableArray* mutableBbsActionList;
  NSMutableArray* mutableBbsPrivilegeListList;
  NSMutableArray* mutableBbsUserListList;
  NSMutableArray* mutableWallListList;
  NSMutableArray* mutableBbsPostList;
  NSMutableArray* mutableBbsBoardList;
  NSMutableArray* mutableUserPhotoListList;
  NSMutableArray* mutableFeedList;
  NSMutableArray* mutableMessageStatList;
  NSMutableArray* mutableMessageList;
  NSMutableArray* mutableOpusListList;
  NSMutableArray* mutableDrawDataList;
}
- (BOOL) hasResultCode;
- (BOOL) hasTotalCount;
- (BOOL) hasVersion;
- (BOOL) hasBbsDrawData;
- (BOOL) hasWall;
- (BOOL) hasUserPhoto;
- (BOOL) hasUser;
- (BOOL) hasUserRelation;
- (BOOL) hasOpus;
- (BOOL) hasSongs;
@property (readonly) int32_t resultCode;
@property (readonly) int32_t totalCount;
@property (readonly) int32_t version;
@property (readonly, retain) PBBBSDraw* bbsDrawData;
@property (readonly, retain) PBWall* wall;
@property (readonly, retain) PBUserPhoto* userPhoto;
@property (readonly, retain) PBGameUser* user;
@property (readonly) int32_t userRelation;
@property (readonly, retain) PBOpus* opus;
@property (readonly, retain) PBSongList* songs;
- (NSArray*) drawDataList;
- (PBDraw*) drawDataAtIndex:(int32_t) index;
- (NSArray*) messageList;
- (PBMessage*) messageAtIndex:(int32_t) index;
- (NSArray*) messageStatList;
- (PBMessageStat*) messageStatAtIndex:(int32_t) index;
- (NSArray*) feedList;
- (PBFeed*) feedAtIndex:(int32_t) index;
- (NSArray*) bbsBoardList;
- (PBBBSBoard*) bbsBoardAtIndex:(int32_t) index;
- (NSArray*) bbsPostList;
- (PBBBSPost*) bbsPostAtIndex:(int32_t) index;
- (NSArray*) bbsActionList;
- (PBBBSAction*) bbsActionAtIndex:(int32_t) index;
- (NSArray*) bbsPrivilegeListList;
- (PBBBSPrivilege*) bbsPrivilegeListAtIndex:(int32_t) index;
- (NSArray*) bbsUserListList;
- (PBBBSUser*) bbsUserListAtIndex:(int32_t) index;
- (NSArray*) wallListList;
- (PBWall*) wallListAtIndex:(int32_t) index;
- (NSArray*) userPhotoListList;
- (PBUserPhoto*) userPhotoListAtIndex:(int32_t) index;
- (NSArray*) opusListList;
- (PBOpus*) opusListAtIndex:(int32_t) index;
- (NSArray*) idListList;
- (NSString*) idListAtIndex:(int32_t) index;

+ (DataQueryResponse*) defaultInstance;
- (DataQueryResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DataQueryResponse_Builder*) builder;
+ (DataQueryResponse_Builder*) builder;
+ (DataQueryResponse_Builder*) builderWithPrototype:(DataQueryResponse*) prototype;

+ (DataQueryResponse*) parseFromData:(NSData*) data;
+ (DataQueryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataQueryResponse*) parseFromInputStream:(NSInputStream*) input;
+ (DataQueryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataQueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DataQueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DataQueryResponse_Builder : PBGeneratedMessage_Builder {
@private
  DataQueryResponse* result;
}

- (DataQueryResponse*) defaultInstance;

- (DataQueryResponse_Builder*) clear;
- (DataQueryResponse_Builder*) clone;

- (DataQueryResponse*) build;
- (DataQueryResponse*) buildPartial;

- (DataQueryResponse_Builder*) mergeFrom:(DataQueryResponse*) other;
- (DataQueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DataQueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResultCode;
- (int32_t) resultCode;
- (DataQueryResponse_Builder*) setResultCode:(int32_t) value;
- (DataQueryResponse_Builder*) clearResultCode;

- (BOOL) hasTotalCount;
- (int32_t) totalCount;
- (DataQueryResponse_Builder*) setTotalCount:(int32_t) value;
- (DataQueryResponse_Builder*) clearTotalCount;

- (BOOL) hasVersion;
- (int32_t) version;
- (DataQueryResponse_Builder*) setVersion:(int32_t) value;
- (DataQueryResponse_Builder*) clearVersion;

- (NSArray*) drawDataList;
- (PBDraw*) drawDataAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceDrawDataAtIndex:(int32_t) index with:(PBDraw*) value;
- (DataQueryResponse_Builder*) addDrawData:(PBDraw*) value;
- (DataQueryResponse_Builder*) addAllDrawData:(NSArray*) values;
- (DataQueryResponse_Builder*) clearDrawDataList;

- (NSArray*) messageList;
- (PBMessage*) messageAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceMessageAtIndex:(int32_t) index with:(PBMessage*) value;
- (DataQueryResponse_Builder*) addMessage:(PBMessage*) value;
- (DataQueryResponse_Builder*) addAllMessage:(NSArray*) values;
- (DataQueryResponse_Builder*) clearMessageList;

- (NSArray*) messageStatList;
- (PBMessageStat*) messageStatAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceMessageStatAtIndex:(int32_t) index with:(PBMessageStat*) value;
- (DataQueryResponse_Builder*) addMessageStat:(PBMessageStat*) value;
- (DataQueryResponse_Builder*) addAllMessageStat:(NSArray*) values;
- (DataQueryResponse_Builder*) clearMessageStatList;

- (NSArray*) feedList;
- (PBFeed*) feedAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceFeedAtIndex:(int32_t) index with:(PBFeed*) value;
- (DataQueryResponse_Builder*) addFeed:(PBFeed*) value;
- (DataQueryResponse_Builder*) addAllFeed:(NSArray*) values;
- (DataQueryResponse_Builder*) clearFeedList;

- (NSArray*) bbsBoardList;
- (PBBBSBoard*) bbsBoardAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceBbsBoardAtIndex:(int32_t) index with:(PBBBSBoard*) value;
- (DataQueryResponse_Builder*) addBbsBoard:(PBBBSBoard*) value;
- (DataQueryResponse_Builder*) addAllBbsBoard:(NSArray*) values;
- (DataQueryResponse_Builder*) clearBbsBoardList;

- (NSArray*) bbsPostList;
- (PBBBSPost*) bbsPostAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceBbsPostAtIndex:(int32_t) index with:(PBBBSPost*) value;
- (DataQueryResponse_Builder*) addBbsPost:(PBBBSPost*) value;
- (DataQueryResponse_Builder*) addAllBbsPost:(NSArray*) values;
- (DataQueryResponse_Builder*) clearBbsPostList;

- (NSArray*) bbsActionList;
- (PBBBSAction*) bbsActionAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceBbsActionAtIndex:(int32_t) index with:(PBBBSAction*) value;
- (DataQueryResponse_Builder*) addBbsAction:(PBBBSAction*) value;
- (DataQueryResponse_Builder*) addAllBbsAction:(NSArray*) values;
- (DataQueryResponse_Builder*) clearBbsActionList;

- (BOOL) hasBbsDrawData;
- (PBBBSDraw*) bbsDrawData;
- (DataQueryResponse_Builder*) setBbsDrawData:(PBBBSDraw*) value;
- (DataQueryResponse_Builder*) setBbsDrawDataBuilder:(PBBBSDraw_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeBbsDrawData:(PBBBSDraw*) value;
- (DataQueryResponse_Builder*) clearBbsDrawData;

- (NSArray*) bbsPrivilegeListList;
- (PBBBSPrivilege*) bbsPrivilegeListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceBbsPrivilegeListAtIndex:(int32_t) index with:(PBBBSPrivilege*) value;
- (DataQueryResponse_Builder*) addBbsPrivilegeList:(PBBBSPrivilege*) value;
- (DataQueryResponse_Builder*) addAllBbsPrivilegeList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearBbsPrivilegeListList;

- (NSArray*) bbsUserListList;
- (PBBBSUser*) bbsUserListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceBbsUserListAtIndex:(int32_t) index with:(PBBBSUser*) value;
- (DataQueryResponse_Builder*) addBbsUserList:(PBBBSUser*) value;
- (DataQueryResponse_Builder*) addAllBbsUserList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearBbsUserListList;

- (NSArray*) wallListList;
- (PBWall*) wallListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceWallListAtIndex:(int32_t) index with:(PBWall*) value;
- (DataQueryResponse_Builder*) addWallList:(PBWall*) value;
- (DataQueryResponse_Builder*) addAllWallList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearWallListList;

- (BOOL) hasWall;
- (PBWall*) wall;
- (DataQueryResponse_Builder*) setWall:(PBWall*) value;
- (DataQueryResponse_Builder*) setWallBuilder:(PBWall_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeWall:(PBWall*) value;
- (DataQueryResponse_Builder*) clearWall;

- (BOOL) hasUserPhoto;
- (PBUserPhoto*) userPhoto;
- (DataQueryResponse_Builder*) setUserPhoto:(PBUserPhoto*) value;
- (DataQueryResponse_Builder*) setUserPhotoBuilder:(PBUserPhoto_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeUserPhoto:(PBUserPhoto*) value;
- (DataQueryResponse_Builder*) clearUserPhoto;

- (NSArray*) userPhotoListList;
- (PBUserPhoto*) userPhotoListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceUserPhotoListAtIndex:(int32_t) index with:(PBUserPhoto*) value;
- (DataQueryResponse_Builder*) addUserPhotoList:(PBUserPhoto*) value;
- (DataQueryResponse_Builder*) addAllUserPhotoList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearUserPhotoListList;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (DataQueryResponse_Builder*) setUser:(PBGameUser*) value;
- (DataQueryResponse_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeUser:(PBGameUser*) value;
- (DataQueryResponse_Builder*) clearUser;

- (BOOL) hasUserRelation;
- (int32_t) userRelation;
- (DataQueryResponse_Builder*) setUserRelation:(int32_t) value;
- (DataQueryResponse_Builder*) clearUserRelation;

- (BOOL) hasOpus;
- (PBOpus*) opus;
- (DataQueryResponse_Builder*) setOpus:(PBOpus*) value;
- (DataQueryResponse_Builder*) setOpusBuilder:(PBOpus_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeOpus:(PBOpus*) value;
- (DataQueryResponse_Builder*) clearOpus;

- (NSArray*) opusListList;
- (PBOpus*) opusListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceOpusListAtIndex:(int32_t) index with:(PBOpus*) value;
- (DataQueryResponse_Builder*) addOpusList:(PBOpus*) value;
- (DataQueryResponse_Builder*) addAllOpusList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearOpusListList;

- (NSArray*) idListList;
- (NSString*) idListAtIndex:(int32_t) index;
- (DataQueryResponse_Builder*) replaceIdListAtIndex:(int32_t) index with:(NSString*) value;
- (DataQueryResponse_Builder*) addIdList:(NSString*) value;
- (DataQueryResponse_Builder*) addAllIdList:(NSArray*) values;
- (DataQueryResponse_Builder*) clearIdListList;

- (BOOL) hasSongs;
- (PBSongList*) songs;
- (DataQueryResponse_Builder*) setSongs:(PBSongList*) value;
- (DataQueryResponse_Builder*) setSongsBuilder:(PBSongList_Builder*) builderForValue;
- (DataQueryResponse_Builder*) mergeSongs:(PBSongList*) value;
- (DataQueryResponse_Builder*) clearSongs;
@end

