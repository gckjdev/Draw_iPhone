// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameConstants.pb.h"
#import "GameBasic.pb.h"
#import "Draw.pb.h"
#import "Dice.pb.h"
#import "ZhaJinHua.pb.h"
#import "BBS.pb.h"
#import "Opus.pb.h"
#import "Photo.pb.h"
#import "Sing.pb.h"
#import "Group.pb.h"
#import "Tutorial.pb.h"
// @@protoc_insertion_point(imports)

@class BetDiceRequest;
@class BetDiceRequestBuilder;
@class BetDiceResponse;
@class BetDiceResponseBuilder;
@class BetRequest;
@class BetRequestBuilder;
@class BetResponse;
@class BetResponseBuilder;
@class CallDiceRequest;
@class CallDiceRequestBuilder;
@class CallDiceResponse;
@class CallDiceResponseBuilder;
@class ChangeCardRequest;
@class ChangeCardRequestBuilder;
@class ChangeCardResponse;
@class ChangeCardResponseBuilder;
@class CheckCardRequest;
@class CheckCardRequestBuilder;
@class CheckCardResponse;
@class CheckCardResponseBuilder;
@class CompareCardRequest;
@class CompareCardRequestBuilder;
@class CompareCardResponse;
@class CompareCardResponseBuilder;
@class CreateRoomRequest;
@class CreateRoomRequestBuilder;
@class CreateRoomResponse;
@class CreateRoomResponseBuilder;
@class DataQueryResponse;
@class DataQueryResponseBuilder;
@class FacetimeChatRequest;
@class FacetimeChatRequestBuilder;
@class FacetimeChatResponse;
@class FacetimeChatResponseBuilder;
@class FoldCardRequest;
@class FoldCardRequestBuilder;
@class FoldCardResponse;
@class FoldCardResponseBuilder;
@class GameChatRequest;
@class GameChatRequestBuilder;
@class GameChatResponse;
@class GameChatResponseBuilder;
@class GameMessage;
@class GameMessageBuilder;
@class GameOverNotificationRequest;
@class GameOverNotificationRequestBuilder;
@class GameOverNotificationResponse;
@class GameOverNotificationResponseBuilder;
@class GameStartNotificationRequest;
@class GameStartNotificationRequestBuilder;
@class GameStartNotificationResponse;
@class GameStartNotificationResponseBuilder;
@class GeneralNotification;
@class GeneralNotificationBuilder;
@class GetRoomsRequest;
@class GetRoomsRequestBuilder;
@class GetRoomsResponse;
@class GetRoomsResponseBuilder;
@class JoinGameRequest;
@class JoinGameRequestBuilder;
@class JoinGameResponse;
@class JoinGameResponseBuilder;
@class NextPlayerStartNotificationRequest;
@class NextPlayerStartNotificationRequestBuilder;
@class NextPlayerStartNotificationResponse;
@class NextPlayerStartNotificationResponseBuilder;
@class OpenDiceRequest;
@class OpenDiceRequestBuilder;
@class OpenDiceResponse;
@class OpenDiceResponseBuilder;
@class PBApp;
@class PBAppBuilder;
@class PBAskPs;
@class PBAskPsBuilder;
@class PBAskPsOpus;
@class PBAskPsOpusBuilder;
@class PBBBSAction;
@class PBBBSActionBuilder;
@class PBBBSActionSource;
@class PBBBSActionSourceBuilder;
@class PBBBSBoard;
@class PBBBSBoardBuilder;
@class PBBBSContent;
@class PBBBSContentBuilder;
@class PBBBSDraw;
@class PBBBSDrawBuilder;
@class PBBBSPost;
@class PBBBSPostBuilder;
@class PBBBSPrivilege;
@class PBBBSPrivilegeBuilder;
@class PBBBSReward;
@class PBBBSRewardBuilder;
@class PBBBSUser;
@class PBBBSUserBuilder;
@class PBChapter;
@class PBChapterBuilder;
@class PBClass;
@class PBClassBuilder;
@class PBColor;
@class PBColorBuilder;
@class PBCommentInfo;
@class PBCommentInfoBuilder;
@class PBContest;
@class PBContestBuilder;
@class PBContestList;
@class PBContestListBuilder;
@class PBDice;
@class PBDiceAction;
@class PBDiceActionBuilder;
@class PBDiceBuilder;
@class PBDiceFinalCount;
@class PBDiceFinalCountBuilder;
@class PBDiceGameResult;
@class PBDiceGameResultBuilder;
@class PBDraw;
@class PBDrawAction;
@class PBDrawActionBuilder;
@class PBDrawBg;
@class PBDrawBgBuilder;
@class PBDrawBgGroup;
@class PBDrawBgGroupBuilder;
@class PBDrawBgMeta;
@class PBDrawBgMetaBuilder;
@class PBDrawBuilder;
@class PBDrawOpus;
@class PBDrawOpusBuilder;
@class PBFeed;
@class PBFeedBuilder;
@class PBFeedTimes;
@class PBFeedTimesBuilder;
@class PBFrame;
@class PBFrameBuilder;
@class PBFrameList;
@class PBFrameListBuilder;
@class PBGameItem;
@class PBGameItemBuilder;
@class PBGameItemList;
@class PBGameItemListBuilder;
@class PBGameSession;
@class PBGameSessionBuilder;
@class PBGameSessionChanged;
@class PBGameSessionChangedBuilder;
@class PBGameUser;
@class PBGameUserBuilder;
@class PBGradient;
@class PBGradientBuilder;
@class PBGroup;
@class PBGroupBuilder;
@class PBGroupNotice;
@class PBGroupNoticeBuilder;
@class PBGroupTitle;
@class PBGroupTitleBuilder;
@class PBGroupUser;
@class PBGroupUserBuilder;
@class PBGroupUserRole;
@class PBGroupUserRoleBuilder;
@class PBGroupUsersByTitle;
@class PBGroupUsersByTitleBuilder;
@class PBGuessContest;
@class PBGuessContestBuilder;
@class PBGuessRank;
@class PBGuessRankBuilder;
@class PBHotWord;
@class PBHotWordBuilder;
@class PBHotWordList;
@class PBHotWordListBuilder;
@class PBIAPProduct;
@class PBIAPProductBuilder;
@class PBIAPProductList;
@class PBIAPProductListBuilder;
@class PBIAPProductPrice;
@class PBIAPProductPriceBuilder;
@class PBImageShapeGroup;
@class PBImageShapeGroupBuilder;
@class PBImageShapeGroupMeta;
@class PBImageShapeGroupMetaBuilder;
@class PBIntKeyIntValue;
@class PBIntKeyIntValueBuilder;
@class PBIntKeyValue;
@class PBIntKeyValueBuilder;
@class PBItemPriceInfo;
@class PBItemPriceInfoBuilder;
@class PBKeyValue;
@class PBKeyValueBuilder;
@class PBLabelInfo;
@class PBLabelInfoBuilder;
@class PBLayer;
@class PBLayerBuilder;
@class PBLayout;
@class PBLayoutBuilder;
@class PBLayoutList;
@class PBLayoutListBuilder;
@class PBLearnDraw;
@class PBLearnDrawBuilder;
@class PBLocalizeString;
@class PBLocalizeStringBuilder;
@class PBMessage;
@class PBMessageBuilder;
@class PBMessageStat;
@class PBMessageStatBuilder;
@class PBNoCompressDrawAction;
@class PBNoCompressDrawActionBuilder;
@class PBNoCompressDrawData;
@class PBNoCompressDrawDataBuilder;
@class PBOpus;
@class PBOpusBuilder;
@class PBOpusGuess;
@class PBOpusGuessBuilder;
@class PBOpusList;
@class PBOpusListBuilder;
@class PBOpusRank;
@class PBOpusRankBuilder;
@class PBPoint;
@class PBPointBuilder;
@class PBPoker;
@class PBPokerBuilder;
@class PBPromotionInfo;
@class PBPromotionInfoBuilder;
@class PBRect;
@class PBRectBuilder;
@class PBSNSUser;
@class PBSNSUserBuilder;
@class PBSNSUserCredential;
@class PBSNSUserCredentialBuilder;
@class PBSimpleGroup;
@class PBSimpleGroupBuilder;
@class PBSingOpus;
@class PBSingOpusBuilder;
@class PBSize;
@class PBSizeBuilder;
@class PBSong;
@class PBSongBuilder;
@class PBSongCategory;
@class PBSongCategoryBuilder;
@class PBSongCategoryList;
@class PBSongCategoryListBuilder;
@class PBSongList;
@class PBSongListBuilder;
@class PBStage;
@class PBStageBuilder;
@class PBTask;
@class PBTaskBuilder;
@class PBTip;
@class PBTipBuilder;
@class PBTutorial;
@class PBTutorialBuilder;
@class PBTutorialCore;
@class PBTutorialCoreBuilder;
@class PBUserAward;
@class PBUserAwardBuilder;
@class PBUserBasicInfo;
@class PBUserBasicInfoBuilder;
@class PBUserDice;
@class PBUserDiceBuilder;
@class PBUserItem;
@class PBUserItemBuilder;
@class PBUserItemList;
@class PBUserItemListBuilder;
@class PBUserLevel;
@class PBUserLevelBuilder;
@class PBUserPhoto;
@class PBUserPhotoBuilder;
@class PBUserPhotoList;
@class PBUserPhotoListBuilder;
@class PBUserResult;
@class PBUserResultBuilder;
@class PBUserStage;
@class PBUserStageBuilder;
@class PBUserStageOpus;
@class PBUserStageOpusBuilder;
@class PBUserTutorial;
@class PBUserTutorialBuilder;
@class PBWall;
@class PBWallBuilder;
@class PBWallOpus;
@class PBWallOpusBuilder;
@class PBZJHGameResult;
@class PBZJHGameResultBuilder;
@class PBZJHGameState;
@class PBZJHGameStateBuilder;
@class PBZJHPoker;
@class PBZJHPokerBuilder;
@class PBZJHUserPlayInfo;
@class PBZJHUserPlayInfoBuilder;
@class PBZJHUserPoker;
@class PBZJHUserPokerBuilder;
@class RegisterRoomsNotificationRequest;
@class RegisterRoomsNotificationRequestBuilder;
@class RegisterRoomsNotificationResponse;
@class RegisterRoomsNotificationResponseBuilder;
@class RollDiceBeginNotificationRequest;
@class RollDiceBeginNotificationRequestBuilder;
@class RollDiceBeginNotificationResponse;
@class RollDiceBeginNotificationResponseBuilder;
@class RollDiceEndNotificationRequest;
@class RollDiceEndNotificationRequestBuilder;
@class RollDiceEndNotificationResponse;
@class RollDiceEndNotificationResponseBuilder;
@class RoomNotificationRequest;
@class RoomNotificationRequestBuilder;
@class RoomNotificationResponse;
@class RoomNotificationResponseBuilder;
@class SearchRoomRequest;
@class SearchRoomRequestBuilder;
@class SearchRoomResponse;
@class SearchRoomResponseBuilder;
@class SendDrawDataRequest;
@class SendDrawDataRequestBuilder;
@class SendDrawDataResponse;
@class SendDrawDataResponseBuilder;
@class ShowCardRequest;
@class ShowCardRequestBuilder;
@class ShowCardResponse;
@class ShowCardResponseBuilder;
@class StartGameRequest;
@class StartGameRequestBuilder;
@class StartGameResponse;
@class StartGameResponseBuilder;
@class TimeoutSettingRequest;
@class TimeoutSettingRequestBuilder;
@class TimeoutSettingResponse;
@class TimeoutSettingResponseBuilder;
@class UnRegisterRoomsNotificationRequest;
@class UnRegisterRoomsNotificationRequestBuilder;
@class UnRegisterRoomsNotificationResponse;
@class UnRegisterRoomsNotificationResponseBuilder;
@class UseItemRequest;
@class UseItemRequestBuilder;
@class UseItemResponse;
@class UseItemResponseBuilder;
@class UserDiceNotification;
@class UserDiceNotificationBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, BetType) {
  BetTypeBetTypeCall = 1,
  BetTypeBetTypeRaise = 2,
};

BOOL BetTypeIsValidValue(BetType value);
NSString *NSStringFromBetType(BetType value);


@interface GameMessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface GetRoomsRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRoomType_:1;
  BOOL hasGameId_:1;
  BOOL hasKeyword_:1;
  SInt32 roomType;
  NSString* gameId;
  NSString* keyword;
}
- (BOOL) hasGameId;
- (BOOL) hasRoomType;
- (BOOL) hasKeyword;
@property (readonly, strong) NSString* gameId;
@property (readonly) SInt32 roomType;
@property (readonly, strong) NSString* keyword;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GetRoomsRequestBuilder*) builder;
+ (GetRoomsRequestBuilder*) builder;
+ (GetRoomsRequestBuilder*) builderWithPrototype:(GetRoomsRequest*) prototype;
- (GetRoomsRequestBuilder*) toBuilder;

+ (GetRoomsRequest*) parseFromData:(NSData*) data;
+ (GetRoomsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GetRoomsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GetRoomsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GetRoomsRequestBuilder : PBGeneratedMessageBuilder {
@private
  GetRoomsRequest* resultGetRoomsRequest;
}

- (GetRoomsRequest*) defaultInstance;

- (GetRoomsRequestBuilder*) clear;
- (GetRoomsRequestBuilder*) clone;

- (GetRoomsRequest*) build;
- (GetRoomsRequest*) buildPartial;

- (GetRoomsRequestBuilder*) mergeFrom:(GetRoomsRequest*) other;
- (GetRoomsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GetRoomsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (GetRoomsRequestBuilder*) setGameId:(NSString*) value;
- (GetRoomsRequestBuilder*) clearGameId;

- (BOOL) hasRoomType;
- (SInt32) roomType;
- (GetRoomsRequestBuilder*) setRoomType:(SInt32) value;
- (GetRoomsRequestBuilder*) clearRoomType;

- (BOOL) hasKeyword;
- (NSString*) keyword;
- (GetRoomsRequestBuilder*) setKeyword:(NSString*) value;
- (GetRoomsRequestBuilder*) clearKeyword;
@end

@interface GetRoomsResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRuleType_:1;
  SInt32 ruleType;
  NSMutableArray * sessionsArray;
}
- (BOOL) hasRuleType;
@property (readonly, strong) NSArray * sessions;
@property (readonly) SInt32 ruleType;
- (PBGameSession*)sessionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GetRoomsResponseBuilder*) builder;
+ (GetRoomsResponseBuilder*) builder;
+ (GetRoomsResponseBuilder*) builderWithPrototype:(GetRoomsResponse*) prototype;
- (GetRoomsResponseBuilder*) toBuilder;

+ (GetRoomsResponse*) parseFromData:(NSData*) data;
+ (GetRoomsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GetRoomsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetRoomsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GetRoomsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GetRoomsResponseBuilder : PBGeneratedMessageBuilder {
@private
  GetRoomsResponse* resultGetRoomsResponse;
}

- (GetRoomsResponse*) defaultInstance;

- (GetRoomsResponseBuilder*) clear;
- (GetRoomsResponseBuilder*) clone;

- (GetRoomsResponse*) build;
- (GetRoomsResponse*) buildPartial;

- (GetRoomsResponseBuilder*) mergeFrom:(GetRoomsResponse*) other;
- (GetRoomsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GetRoomsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)sessions;
- (PBGameSession*)sessionsAtIndex:(NSUInteger)index;
- (GetRoomsResponseBuilder *)addSessions:(PBGameSession*)value;
- (GetRoomsResponseBuilder *)setSessionsArray:(NSArray *)array;
- (GetRoomsResponseBuilder *)clearSessions;

- (BOOL) hasRuleType;
- (SInt32) ruleType;
- (GetRoomsResponseBuilder*) setRuleType:(SInt32) value;
- (GetRoomsResponseBuilder*) clearRuleType;
@end

@interface CreateRoomRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRuleType_:1;
  BOOL hasVersion_:1;
  BOOL hasGameId_:1;
  BOOL hasRoomName_:1;
  BOOL hasPassword_:1;
  BOOL hasUser_:1;
  SInt32 ruleType;
  SInt32 version;
  NSString* gameId;
  NSString* roomName;
  NSString* password;
  PBGameUser* user;
}
- (BOOL) hasGameId;
- (BOOL) hasUser;
- (BOOL) hasRoomName;
- (BOOL) hasPassword;
- (BOOL) hasRuleType;
- (BOOL) hasVersion;
@property (readonly, strong) NSString* gameId;
@property (readonly, strong) PBGameUser* user;
@property (readonly, strong) NSString* roomName;
@property (readonly, strong) NSString* password;
@property (readonly) SInt32 ruleType;
@property (readonly) SInt32 version;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CreateRoomRequestBuilder*) builder;
+ (CreateRoomRequestBuilder*) builder;
+ (CreateRoomRequestBuilder*) builderWithPrototype:(CreateRoomRequest*) prototype;
- (CreateRoomRequestBuilder*) toBuilder;

+ (CreateRoomRequest*) parseFromData:(NSData*) data;
+ (CreateRoomRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CreateRoomRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CreateRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CreateRoomRequestBuilder : PBGeneratedMessageBuilder {
@private
  CreateRoomRequest* resultCreateRoomRequest;
}

- (CreateRoomRequest*) defaultInstance;

- (CreateRoomRequestBuilder*) clear;
- (CreateRoomRequestBuilder*) clone;

- (CreateRoomRequest*) build;
- (CreateRoomRequest*) buildPartial;

- (CreateRoomRequestBuilder*) mergeFrom:(CreateRoomRequest*) other;
- (CreateRoomRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CreateRoomRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (CreateRoomRequestBuilder*) setGameId:(NSString*) value;
- (CreateRoomRequestBuilder*) clearGameId;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (CreateRoomRequestBuilder*) setUser:(PBGameUser*) value;
- (CreateRoomRequestBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (CreateRoomRequestBuilder*) mergeUser:(PBGameUser*) value;
- (CreateRoomRequestBuilder*) clearUser;

- (BOOL) hasRoomName;
- (NSString*) roomName;
- (CreateRoomRequestBuilder*) setRoomName:(NSString*) value;
- (CreateRoomRequestBuilder*) clearRoomName;

- (BOOL) hasPassword;
- (NSString*) password;
- (CreateRoomRequestBuilder*) setPassword:(NSString*) value;
- (CreateRoomRequestBuilder*) clearPassword;

- (BOOL) hasRuleType;
- (SInt32) ruleType;
- (CreateRoomRequestBuilder*) setRuleType:(SInt32) value;
- (CreateRoomRequestBuilder*) clearRuleType;

- (BOOL) hasVersion;
- (SInt32) version;
- (CreateRoomRequestBuilder*) setVersion:(SInt32) value;
- (CreateRoomRequestBuilder*) clearVersion;
@end

@interface CreateRoomResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGameSession_:1;
  PBGameSession* gameSession;
}
- (BOOL) hasGameSession;
@property (readonly, strong) PBGameSession* gameSession;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CreateRoomResponseBuilder*) builder;
+ (CreateRoomResponseBuilder*) builder;
+ (CreateRoomResponseBuilder*) builderWithPrototype:(CreateRoomResponse*) prototype;
- (CreateRoomResponseBuilder*) toBuilder;

+ (CreateRoomResponse*) parseFromData:(NSData*) data;
+ (CreateRoomResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CreateRoomResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CreateRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CreateRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CreateRoomResponseBuilder : PBGeneratedMessageBuilder {
@private
  CreateRoomResponse* resultCreateRoomResponse;
}

- (CreateRoomResponse*) defaultInstance;

- (CreateRoomResponseBuilder*) clear;
- (CreateRoomResponseBuilder*) clone;

- (CreateRoomResponse*) build;
- (CreateRoomResponse*) buildPartial;

- (CreateRoomResponseBuilder*) mergeFrom:(CreateRoomResponse*) other;
- (CreateRoomResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CreateRoomResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameSession;
- (PBGameSession*) gameSession;
- (CreateRoomResponseBuilder*) setGameSession:(PBGameSession*) value;
- (CreateRoomResponseBuilder*) setGameSessionBuilder:(PBGameSessionBuilder*) builderForValue;
- (CreateRoomResponseBuilder*) mergeGameSession:(PBGameSession*) value;
- (CreateRoomResponseBuilder*) clearGameSession;
@end

@interface SearchRoomRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRangeType_:1;
  BOOL hasKeyword_:1;
  SInt32 rangeType;
  NSString* keyword;
}
- (BOOL) hasKeyword;
- (BOOL) hasRangeType;
@property (readonly, strong) NSString* keyword;
@property (readonly) SInt32 rangeType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SearchRoomRequestBuilder*) builder;
+ (SearchRoomRequestBuilder*) builder;
+ (SearchRoomRequestBuilder*) builderWithPrototype:(SearchRoomRequest*) prototype;
- (SearchRoomRequestBuilder*) toBuilder;

+ (SearchRoomRequest*) parseFromData:(NSData*) data;
+ (SearchRoomRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomRequest*) parseFromInputStream:(NSInputStream*) input;
+ (SearchRoomRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SearchRoomRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SearchRoomRequestBuilder : PBGeneratedMessageBuilder {
@private
  SearchRoomRequest* resultSearchRoomRequest;
}

- (SearchRoomRequest*) defaultInstance;

- (SearchRoomRequestBuilder*) clear;
- (SearchRoomRequestBuilder*) clone;

- (SearchRoomRequest*) build;
- (SearchRoomRequest*) buildPartial;

- (SearchRoomRequestBuilder*) mergeFrom:(SearchRoomRequest*) other;
- (SearchRoomRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SearchRoomRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKeyword;
- (NSString*) keyword;
- (SearchRoomRequestBuilder*) setKeyword:(NSString*) value;
- (SearchRoomRequestBuilder*) clearKeyword;

- (BOOL) hasRangeType;
- (SInt32) rangeType;
- (SearchRoomRequestBuilder*) setRangeType:(SInt32) value;
- (SearchRoomRequestBuilder*) clearRangeType;
@end

@interface SearchRoomResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * sessionsArray;
}
@property (readonly, strong) NSArray * sessions;
- (PBGameSession*)sessionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SearchRoomResponseBuilder*) builder;
+ (SearchRoomResponseBuilder*) builder;
+ (SearchRoomResponseBuilder*) builderWithPrototype:(SearchRoomResponse*) prototype;
- (SearchRoomResponseBuilder*) toBuilder;

+ (SearchRoomResponse*) parseFromData:(NSData*) data;
+ (SearchRoomResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomResponse*) parseFromInputStream:(NSInputStream*) input;
+ (SearchRoomResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SearchRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SearchRoomResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SearchRoomResponseBuilder : PBGeneratedMessageBuilder {
@private
  SearchRoomResponse* resultSearchRoomResponse;
}

- (SearchRoomResponse*) defaultInstance;

- (SearchRoomResponseBuilder*) clear;
- (SearchRoomResponseBuilder*) clone;

- (SearchRoomResponse*) build;
- (SearchRoomResponse*) buildPartial;

- (SearchRoomResponseBuilder*) mergeFrom:(SearchRoomResponse*) other;
- (SearchRoomResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SearchRoomResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)sessions;
- (PBGameSession*)sessionsAtIndex:(NSUInteger)index;
- (SearchRoomResponseBuilder *)addSessions:(PBGameSession*)value;
- (SearchRoomResponseBuilder *)setSessionsArray:(NSArray *)array;
- (SearchRoomResponseBuilder *)clearSessions;
@end

@interface RegisterRoomsNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  PBAppendableArray * sessionIdsArray;
  SInt32 sessionIdsMemoizedSerializedSize;
}
@property (readonly, strong) PBArray * sessionIds;
- (SInt32)sessionIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RegisterRoomsNotificationRequestBuilder*) builder;
+ (RegisterRoomsNotificationRequestBuilder*) builder;
+ (RegisterRoomsNotificationRequestBuilder*) builderWithPrototype:(RegisterRoomsNotificationRequest*) prototype;
- (RegisterRoomsNotificationRequestBuilder*) toBuilder;

+ (RegisterRoomsNotificationRequest*) parseFromData:(NSData*) data;
+ (RegisterRoomsNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RegisterRoomsNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  RegisterRoomsNotificationRequest* resultRegisterRoomsNotificationRequest;
}

- (RegisterRoomsNotificationRequest*) defaultInstance;

- (RegisterRoomsNotificationRequestBuilder*) clear;
- (RegisterRoomsNotificationRequestBuilder*) clone;

- (RegisterRoomsNotificationRequest*) build;
- (RegisterRoomsNotificationRequest*) buildPartial;

- (RegisterRoomsNotificationRequestBuilder*) mergeFrom:(RegisterRoomsNotificationRequest*) other;
- (RegisterRoomsNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RegisterRoomsNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)sessionIds;
- (SInt32)sessionIdsAtIndex:(NSUInteger)index;
- (RegisterRoomsNotificationRequestBuilder *)addSessionIds:(SInt32)value;
- (RegisterRoomsNotificationRequestBuilder *)setSessionIdsArray:(NSArray *)array;
- (RegisterRoomsNotificationRequestBuilder *)setSessionIdsValues:(const SInt32 *)values count:(NSUInteger)count;
- (RegisterRoomsNotificationRequestBuilder *)clearSessionIds;
@end

@interface RegisterRoomsNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RegisterRoomsNotificationResponseBuilder*) builder;
+ (RegisterRoomsNotificationResponseBuilder*) builder;
+ (RegisterRoomsNotificationResponseBuilder*) builderWithPrototype:(RegisterRoomsNotificationResponse*) prototype;
- (RegisterRoomsNotificationResponseBuilder*) toBuilder;

+ (RegisterRoomsNotificationResponse*) parseFromData:(NSData*) data;
+ (RegisterRoomsNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RegisterRoomsNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  RegisterRoomsNotificationResponse* resultRegisterRoomsNotificationResponse;
}

- (RegisterRoomsNotificationResponse*) defaultInstance;

- (RegisterRoomsNotificationResponseBuilder*) clear;
- (RegisterRoomsNotificationResponseBuilder*) clone;

- (RegisterRoomsNotificationResponse*) build;
- (RegisterRoomsNotificationResponse*) buildPartial;

- (RegisterRoomsNotificationResponseBuilder*) mergeFrom:(RegisterRoomsNotificationResponse*) other;
- (RegisterRoomsNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RegisterRoomsNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  PBAppendableArray * sessionIdsArray;
  SInt32 sessionIdsMemoizedSerializedSize;
}
@property (readonly, strong) PBArray * sessionIds;
- (SInt32)sessionIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnRegisterRoomsNotificationRequestBuilder*) builder;
+ (UnRegisterRoomsNotificationRequestBuilder*) builder;
+ (UnRegisterRoomsNotificationRequestBuilder*) builderWithPrototype:(UnRegisterRoomsNotificationRequest*) prototype;
- (UnRegisterRoomsNotificationRequestBuilder*) toBuilder;

+ (UnRegisterRoomsNotificationRequest*) parseFromData:(NSData*) data;
+ (UnRegisterRoomsNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (UnRegisterRoomsNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnRegisterRoomsNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  UnRegisterRoomsNotificationRequest* resultUnRegisterRoomsNotificationRequest;
}

- (UnRegisterRoomsNotificationRequest*) defaultInstance;

- (UnRegisterRoomsNotificationRequestBuilder*) clear;
- (UnRegisterRoomsNotificationRequestBuilder*) clone;

- (UnRegisterRoomsNotificationRequest*) build;
- (UnRegisterRoomsNotificationRequest*) buildPartial;

- (UnRegisterRoomsNotificationRequestBuilder*) mergeFrom:(UnRegisterRoomsNotificationRequest*) other;
- (UnRegisterRoomsNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnRegisterRoomsNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)sessionIds;
- (SInt32)sessionIdsAtIndex:(NSUInteger)index;
- (UnRegisterRoomsNotificationRequestBuilder *)addSessionIds:(SInt32)value;
- (UnRegisterRoomsNotificationRequestBuilder *)setSessionIdsArray:(NSArray *)array;
- (UnRegisterRoomsNotificationRequestBuilder *)setSessionIdsValues:(const SInt32 *)values count:(NSUInteger)count;
- (UnRegisterRoomsNotificationRequestBuilder *)clearSessionIds;
@end

@interface UnRegisterRoomsNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnRegisterRoomsNotificationResponseBuilder*) builder;
+ (UnRegisterRoomsNotificationResponseBuilder*) builder;
+ (UnRegisterRoomsNotificationResponseBuilder*) builderWithPrototype:(UnRegisterRoomsNotificationResponse*) prototype;
- (UnRegisterRoomsNotificationResponseBuilder*) toBuilder;

+ (UnRegisterRoomsNotificationResponse*) parseFromData:(NSData*) data;
+ (UnRegisterRoomsNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (UnRegisterRoomsNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnRegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnRegisterRoomsNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnRegisterRoomsNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  UnRegisterRoomsNotificationResponse* resultUnRegisterRoomsNotificationResponse;
}

- (UnRegisterRoomsNotificationResponse*) defaultInstance;

- (UnRegisterRoomsNotificationResponseBuilder*) clear;
- (UnRegisterRoomsNotificationResponseBuilder*) clone;

- (UnRegisterRoomsNotificationResponse*) build;
- (UnRegisterRoomsNotificationResponse*) buildPartial;

- (UnRegisterRoomsNotificationResponseBuilder*) mergeFrom:(UnRegisterRoomsNotificationResponse*) other;
- (UnRegisterRoomsNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnRegisterRoomsNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasWilds_:1;
  BOOL hasNum_:1;
  BOOL hasDice_:1;
  BOOL wilds_:1;
  SInt32 num;
  SInt32 dice;
}
- (BOOL) hasNum;
- (BOOL) hasDice;
- (BOOL) hasWilds;
@property (readonly) SInt32 num;
@property (readonly) SInt32 dice;
- (BOOL) wilds;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CallDiceRequestBuilder*) builder;
+ (CallDiceRequestBuilder*) builder;
+ (CallDiceRequestBuilder*) builderWithPrototype:(CallDiceRequest*) prototype;
- (CallDiceRequestBuilder*) toBuilder;

+ (CallDiceRequest*) parseFromData:(NSData*) data;
+ (CallDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CallDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CallDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceRequestBuilder : PBGeneratedMessageBuilder {
@private
  CallDiceRequest* resultCallDiceRequest;
}

- (CallDiceRequest*) defaultInstance;

- (CallDiceRequestBuilder*) clear;
- (CallDiceRequestBuilder*) clone;

- (CallDiceRequest*) build;
- (CallDiceRequest*) buildPartial;

- (CallDiceRequestBuilder*) mergeFrom:(CallDiceRequest*) other;
- (CallDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CallDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNum;
- (SInt32) num;
- (CallDiceRequestBuilder*) setNum:(SInt32) value;
- (CallDiceRequestBuilder*) clearNum;

- (BOOL) hasDice;
- (SInt32) dice;
- (CallDiceRequestBuilder*) setDice:(SInt32) value;
- (CallDiceRequestBuilder*) clearDice;

- (BOOL) hasWilds;
- (BOOL) wilds;
- (CallDiceRequestBuilder*) setWilds:(BOOL) value;
- (CallDiceRequestBuilder*) clearWilds;
@end

@interface CallDiceResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CallDiceResponseBuilder*) builder;
+ (CallDiceResponseBuilder*) builder;
+ (CallDiceResponseBuilder*) builderWithPrototype:(CallDiceResponse*) prototype;
- (CallDiceResponseBuilder*) toBuilder;

+ (CallDiceResponse*) parseFromData:(NSData*) data;
+ (CallDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CallDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CallDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CallDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CallDiceResponseBuilder : PBGeneratedMessageBuilder {
@private
  CallDiceResponse* resultCallDiceResponse;
}

- (CallDiceResponse*) defaultInstance;

- (CallDiceResponseBuilder*) clear;
- (CallDiceResponseBuilder*) clone;

- (CallDiceResponse*) build;
- (CallDiceResponse*) buildPartial;

- (CallDiceResponseBuilder*) mergeFrom:(CallDiceResponse*) other;
- (CallDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CallDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOpenType_:1;
  BOOL hasMultiple_:1;
  SInt32 openType;
  SInt32 multiple;
}
- (BOOL) hasOpenType;
- (BOOL) hasMultiple;
@property (readonly) SInt32 openType;
@property (readonly) SInt32 multiple;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OpenDiceRequestBuilder*) builder;
+ (OpenDiceRequestBuilder*) builder;
+ (OpenDiceRequestBuilder*) builderWithPrototype:(OpenDiceRequest*) prototype;
- (OpenDiceRequestBuilder*) toBuilder;

+ (OpenDiceRequest*) parseFromData:(NSData*) data;
+ (OpenDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (OpenDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OpenDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceRequestBuilder : PBGeneratedMessageBuilder {
@private
  OpenDiceRequest* resultOpenDiceRequest;
}

- (OpenDiceRequest*) defaultInstance;

- (OpenDiceRequestBuilder*) clear;
- (OpenDiceRequestBuilder*) clone;

- (OpenDiceRequest*) build;
- (OpenDiceRequest*) buildPartial;

- (OpenDiceRequestBuilder*) mergeFrom:(OpenDiceRequest*) other;
- (OpenDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OpenDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOpenType;
- (SInt32) openType;
- (OpenDiceRequestBuilder*) setOpenType:(SInt32) value;
- (OpenDiceRequestBuilder*) clearOpenType;

- (BOOL) hasMultiple;
- (SInt32) multiple;
- (OpenDiceRequestBuilder*) setMultiple:(SInt32) value;
- (OpenDiceRequestBuilder*) clearMultiple;
@end

@interface OpenDiceResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OpenDiceResponseBuilder*) builder;
+ (OpenDiceResponseBuilder*) builder;
+ (OpenDiceResponseBuilder*) builderWithPrototype:(OpenDiceResponse*) prototype;
- (OpenDiceResponseBuilder*) toBuilder;

+ (OpenDiceResponse*) parseFromData:(NSData*) data;
+ (OpenDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (OpenDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OpenDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OpenDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OpenDiceResponseBuilder : PBGeneratedMessageBuilder {
@private
  OpenDiceResponse* resultOpenDiceResponse;
}

- (OpenDiceResponse*) defaultInstance;

- (OpenDiceResponseBuilder*) clear;
- (OpenDiceResponseBuilder*) clone;

- (OpenDiceResponse*) build;
- (OpenDiceResponse*) buildPartial;

- (OpenDiceResponseBuilder*) mergeFrom:(OpenDiceResponse*) other;
- (OpenDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OpenDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDecreaseTimeForNextPlayUser_:1;
  BOOL hasItemId_:1;
  BOOL hasExtendTime_:1;
  BOOL hasDirection_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL decreaseTimeForNextPlayUser_:1;
  SInt32 itemId;
  SInt32 extendTime;
  SInt32 direction;
  NSString* nextPlayUserId;
}
- (BOOL) hasItemId;
- (BOOL) hasExtendTime;
- (BOOL) hasDirection;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasDecreaseTimeForNextPlayUser;
@property (readonly) SInt32 itemId;
@property (readonly) SInt32 extendTime;
@property (readonly) SInt32 direction;
@property (readonly, strong) NSString* nextPlayUserId;
- (BOOL) decreaseTimeForNextPlayUser;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UseItemRequestBuilder*) builder;
+ (UseItemRequestBuilder*) builder;
+ (UseItemRequestBuilder*) builderWithPrototype:(UseItemRequest*) prototype;
- (UseItemRequestBuilder*) toBuilder;

+ (UseItemRequest*) parseFromData:(NSData*) data;
+ (UseItemRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemRequest*) parseFromInputStream:(NSInputStream*) input;
+ (UseItemRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UseItemRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemRequestBuilder : PBGeneratedMessageBuilder {
@private
  UseItemRequest* resultUseItemRequest;
}

- (UseItemRequest*) defaultInstance;

- (UseItemRequestBuilder*) clear;
- (UseItemRequestBuilder*) clone;

- (UseItemRequest*) build;
- (UseItemRequest*) buildPartial;

- (UseItemRequestBuilder*) mergeFrom:(UseItemRequest*) other;
- (UseItemRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UseItemRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (SInt32) itemId;
- (UseItemRequestBuilder*) setItemId:(SInt32) value;
- (UseItemRequestBuilder*) clearItemId;

- (BOOL) hasExtendTime;
- (SInt32) extendTime;
- (UseItemRequestBuilder*) setExtendTime:(SInt32) value;
- (UseItemRequestBuilder*) clearExtendTime;

- (BOOL) hasDirection;
- (SInt32) direction;
- (UseItemRequestBuilder*) setDirection:(SInt32) value;
- (UseItemRequestBuilder*) clearDirection;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (UseItemRequestBuilder*) setNextPlayUserId:(NSString*) value;
- (UseItemRequestBuilder*) clearNextPlayUserId;

- (BOOL) hasDecreaseTimeForNextPlayUser;
- (BOOL) decreaseTimeForNextPlayUser;
- (UseItemRequestBuilder*) setDecreaseTimeForNextPlayUser:(BOOL) value;
- (UseItemRequestBuilder*) clearDecreaseTimeForNextPlayUser;
@end

@interface UseItemResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDecreaseTimeForNextPlayUser_:1;
  BOOL hasItemId_:1;
  BOOL hasDirection_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL hasAction_:1;
  BOOL decreaseTimeForNextPlayUser_:1;
  SInt32 itemId;
  SInt32 direction;
  NSString* nextPlayUserId;
  PBDiceAction* action;
  NSMutableArray * dicesArray;
}
- (BOOL) hasItemId;
- (BOOL) hasAction;
- (BOOL) hasDirection;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasDecreaseTimeForNextPlayUser;
@property (readonly) SInt32 itemId;
@property (readonly, strong) NSArray * dices;
@property (readonly, strong) PBDiceAction* action;
@property (readonly) SInt32 direction;
@property (readonly, strong) NSString* nextPlayUserId;
- (BOOL) decreaseTimeForNextPlayUser;
- (PBDice*)dicesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UseItemResponseBuilder*) builder;
+ (UseItemResponseBuilder*) builder;
+ (UseItemResponseBuilder*) builderWithPrototype:(UseItemResponse*) prototype;
- (UseItemResponseBuilder*) toBuilder;

+ (UseItemResponse*) parseFromData:(NSData*) data;
+ (UseItemResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemResponse*) parseFromInputStream:(NSInputStream*) input;
+ (UseItemResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UseItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UseItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UseItemResponseBuilder : PBGeneratedMessageBuilder {
@private
  UseItemResponse* resultUseItemResponse;
}

- (UseItemResponse*) defaultInstance;

- (UseItemResponseBuilder*) clear;
- (UseItemResponseBuilder*) clone;

- (UseItemResponse*) build;
- (UseItemResponse*) buildPartial;

- (UseItemResponseBuilder*) mergeFrom:(UseItemResponse*) other;
- (UseItemResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UseItemResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (SInt32) itemId;
- (UseItemResponseBuilder*) setItemId:(SInt32) value;
- (UseItemResponseBuilder*) clearItemId;

- (NSMutableArray *)dices;
- (PBDice*)dicesAtIndex:(NSUInteger)index;
- (UseItemResponseBuilder *)addDices:(PBDice*)value;
- (UseItemResponseBuilder *)setDicesArray:(NSArray *)array;
- (UseItemResponseBuilder *)clearDices;

- (BOOL) hasAction;
- (PBDiceAction*) action;
- (UseItemResponseBuilder*) setAction:(PBDiceAction*) value;
- (UseItemResponseBuilder*) setActionBuilder:(PBDiceActionBuilder*) builderForValue;
- (UseItemResponseBuilder*) mergeAction:(PBDiceAction*) value;
- (UseItemResponseBuilder*) clearAction;

- (BOOL) hasDirection;
- (SInt32) direction;
- (UseItemResponseBuilder*) setDirection:(SInt32) value;
- (UseItemResponseBuilder*) clearDirection;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (UseItemResponseBuilder*) setNextPlayUserId:(NSString*) value;
- (UseItemResponseBuilder*) clearNextPlayUserId;

- (BOOL) hasDecreaseTimeForNextPlayUser;
- (BOOL) decreaseTimeForNextPlayUser;
- (UseItemResponseBuilder*) setDecreaseTimeForNextPlayUser:(BOOL) value;
- (UseItemResponseBuilder*) clearDecreaseTimeForNextPlayUser;
@end

@interface UserDiceNotification : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCleanAll_:1;
  BOOL hasIsWild_:1;
  BOOL cleanAll_:1;
  BOOL isWild_:1;
  NSMutableArray * userDiceArray;
}
- (BOOL) hasCleanAll;
- (BOOL) hasIsWild;
@property (readonly, strong) NSArray * userDice;
- (BOOL) cleanAll;
- (BOOL) isWild;
- (PBUserDice*)userDiceAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserDiceNotificationBuilder*) builder;
+ (UserDiceNotificationBuilder*) builder;
+ (UserDiceNotificationBuilder*) builderWithPrototype:(UserDiceNotification*) prototype;
- (UserDiceNotificationBuilder*) toBuilder;

+ (UserDiceNotification*) parseFromData:(NSData*) data;
+ (UserDiceNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserDiceNotification*) parseFromInputStream:(NSInputStream*) input;
+ (UserDiceNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserDiceNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserDiceNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserDiceNotificationBuilder : PBGeneratedMessageBuilder {
@private
  UserDiceNotification* resultUserDiceNotification;
}

- (UserDiceNotification*) defaultInstance;

- (UserDiceNotificationBuilder*) clear;
- (UserDiceNotificationBuilder*) clone;

- (UserDiceNotification*) build;
- (UserDiceNotification*) buildPartial;

- (UserDiceNotificationBuilder*) mergeFrom:(UserDiceNotification*) other;
- (UserDiceNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserDiceNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userDice;
- (PBUserDice*)userDiceAtIndex:(NSUInteger)index;
- (UserDiceNotificationBuilder *)addUserDice:(PBUserDice*)value;
- (UserDiceNotificationBuilder *)setUserDiceArray:(NSArray *)array;
- (UserDiceNotificationBuilder *)clearUserDice;

- (BOOL) hasCleanAll;
- (BOOL) cleanAll;
- (UserDiceNotificationBuilder*) setCleanAll:(BOOL) value;
- (UserDiceNotificationBuilder*) clearCleanAll;

- (BOOL) hasIsWild;
- (BOOL) isWild;
- (UserDiceNotificationBuilder*) setIsWild:(BOOL) value;
- (UserDiceNotificationBuilder*) clearIsWild;
@end

@interface TimeoutSettingRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAction_:1;
  PBZJHUserAction action;
}
- (BOOL) hasAction;
@property (readonly) PBZJHUserAction action;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TimeoutSettingRequestBuilder*) builder;
+ (TimeoutSettingRequestBuilder*) builder;
+ (TimeoutSettingRequestBuilder*) builderWithPrototype:(TimeoutSettingRequest*) prototype;
- (TimeoutSettingRequestBuilder*) toBuilder;

+ (TimeoutSettingRequest*) parseFromData:(NSData*) data;
+ (TimeoutSettingRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingRequest*) parseFromInputStream:(NSInputStream*) input;
+ (TimeoutSettingRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TimeoutSettingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TimeoutSettingRequestBuilder : PBGeneratedMessageBuilder {
@private
  TimeoutSettingRequest* resultTimeoutSettingRequest;
}

- (TimeoutSettingRequest*) defaultInstance;

- (TimeoutSettingRequestBuilder*) clear;
- (TimeoutSettingRequestBuilder*) clone;

- (TimeoutSettingRequest*) build;
- (TimeoutSettingRequest*) buildPartial;

- (TimeoutSettingRequestBuilder*) mergeFrom:(TimeoutSettingRequest*) other;
- (TimeoutSettingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TimeoutSettingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAction;
- (PBZJHUserAction) action;
- (TimeoutSettingRequestBuilder*) setAction:(PBZJHUserAction) value;
- (TimeoutSettingRequestBuilder*) clearAction;
@end

@interface TimeoutSettingResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TimeoutSettingResponseBuilder*) builder;
+ (TimeoutSettingResponseBuilder*) builder;
+ (TimeoutSettingResponseBuilder*) builderWithPrototype:(TimeoutSettingResponse*) prototype;
- (TimeoutSettingResponseBuilder*) toBuilder;

+ (TimeoutSettingResponse*) parseFromData:(NSData*) data;
+ (TimeoutSettingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingResponse*) parseFromInputStream:(NSInputStream*) input;
+ (TimeoutSettingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TimeoutSettingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TimeoutSettingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TimeoutSettingResponseBuilder : PBGeneratedMessageBuilder {
@private
  TimeoutSettingResponse* resultTimeoutSettingResponse;
}

- (TimeoutSettingResponse*) defaultInstance;

- (TimeoutSettingResponseBuilder*) clear;
- (TimeoutSettingResponseBuilder*) clone;

- (TimeoutSettingResponse*) build;
- (TimeoutSettingResponse*) buildPartial;

- (TimeoutSettingResponseBuilder*) mergeFrom:(TimeoutSettingResponse*) other;
- (TimeoutSettingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TimeoutSettingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsAutoBet_:1;
  BOOL hasSingleBet_:1;
  BOOL hasCount_:1;
  BOOL isAutoBet_:1;
  SInt32 singleBet;
  SInt32 count;
}
- (BOOL) hasSingleBet;
- (BOOL) hasCount;
- (BOOL) hasIsAutoBet;
@property (readonly) SInt32 singleBet;
@property (readonly) SInt32 count;
- (BOOL) isAutoBet;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetRequestBuilder*) builder;
+ (BetRequestBuilder*) builder;
+ (BetRequestBuilder*) builderWithPrototype:(BetRequest*) prototype;
- (BetRequestBuilder*) toBuilder;

+ (BetRequest*) parseFromData:(NSData*) data;
+ (BetRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BetRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetRequestBuilder : PBGeneratedMessageBuilder {
@private
  BetRequest* resultBetRequest;
}

- (BetRequest*) defaultInstance;

- (BetRequestBuilder*) clear;
- (BetRequestBuilder*) clone;

- (BetRequest*) build;
- (BetRequest*) buildPartial;

- (BetRequestBuilder*) mergeFrom:(BetRequest*) other;
- (BetRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSingleBet;
- (SInt32) singleBet;
- (BetRequestBuilder*) setSingleBet:(SInt32) value;
- (BetRequestBuilder*) clearSingleBet;

- (BOOL) hasCount;
- (SInt32) count;
- (BetRequestBuilder*) setCount:(SInt32) value;
- (BetRequestBuilder*) clearCount;

- (BOOL) hasIsAutoBet;
- (BOOL) isAutoBet;
- (BetRequestBuilder*) setIsAutoBet:(BOOL) value;
- (BetRequestBuilder*) clearIsAutoBet;
@end

@interface BetResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetResponseBuilder*) builder;
+ (BetResponseBuilder*) builder;
+ (BetResponseBuilder*) builderWithPrototype:(BetResponse*) prototype;
- (BetResponseBuilder*) toBuilder;

+ (BetResponse*) parseFromData:(NSData*) data;
+ (BetResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BetResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetResponseBuilder : PBGeneratedMessageBuilder {
@private
  BetResponse* resultBetResponse;
}

- (BetResponse*) defaultInstance;

- (BetResponseBuilder*) clear;
- (BetResponseBuilder*) clone;

- (BetResponse*) build;
- (BetResponse*) buildPartial;

- (BetResponseBuilder*) mergeFrom:(BetResponse*) other;
- (BetResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CheckCardRequestBuilder*) builder;
+ (CheckCardRequestBuilder*) builder;
+ (CheckCardRequestBuilder*) builderWithPrototype:(CheckCardRequest*) prototype;
- (CheckCardRequestBuilder*) toBuilder;

+ (CheckCardRequest*) parseFromData:(NSData*) data;
+ (CheckCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CheckCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CheckCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardRequestBuilder : PBGeneratedMessageBuilder {
@private
  CheckCardRequest* resultCheckCardRequest;
}

- (CheckCardRequest*) defaultInstance;

- (CheckCardRequestBuilder*) clear;
- (CheckCardRequestBuilder*) clone;

- (CheckCardRequest*) build;
- (CheckCardRequest*) buildPartial;

- (CheckCardRequestBuilder*) mergeFrom:(CheckCardRequest*) other;
- (CheckCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CheckCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CheckCardResponseBuilder*) builder;
+ (CheckCardResponseBuilder*) builder;
+ (CheckCardResponseBuilder*) builderWithPrototype:(CheckCardResponse*) prototype;
- (CheckCardResponseBuilder*) toBuilder;

+ (CheckCardResponse*) parseFromData:(NSData*) data;
+ (CheckCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CheckCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CheckCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CheckCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CheckCardResponseBuilder : PBGeneratedMessageBuilder {
@private
  CheckCardResponse* resultCheckCardResponse;
}

- (CheckCardResponse*) defaultInstance;

- (CheckCardResponseBuilder*) clear;
- (CheckCardResponseBuilder*) clone;

- (CheckCardResponse*) build;
- (CheckCardResponse*) buildPartial;

- (CheckCardResponseBuilder*) mergeFrom:(CheckCardResponse*) other;
- (CheckCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CheckCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FoldCardRequestBuilder*) builder;
+ (FoldCardRequestBuilder*) builder;
+ (FoldCardRequestBuilder*) builderWithPrototype:(FoldCardRequest*) prototype;
- (FoldCardRequestBuilder*) toBuilder;

+ (FoldCardRequest*) parseFromData:(NSData*) data;
+ (FoldCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FoldCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FoldCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardRequestBuilder : PBGeneratedMessageBuilder {
@private
  FoldCardRequest* resultFoldCardRequest;
}

- (FoldCardRequest*) defaultInstance;

- (FoldCardRequestBuilder*) clear;
- (FoldCardRequestBuilder*) clone;

- (FoldCardRequest*) build;
- (FoldCardRequest*) buildPartial;

- (FoldCardRequestBuilder*) mergeFrom:(FoldCardRequest*) other;
- (FoldCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FoldCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FoldCardResponseBuilder*) builder;
+ (FoldCardResponseBuilder*) builder;
+ (FoldCardResponseBuilder*) builderWithPrototype:(FoldCardResponse*) prototype;
- (FoldCardResponseBuilder*) toBuilder;

+ (FoldCardResponse*) parseFromData:(NSData*) data;
+ (FoldCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FoldCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FoldCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FoldCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FoldCardResponseBuilder : PBGeneratedMessageBuilder {
@private
  FoldCardResponse* resultFoldCardResponse;
}

- (FoldCardResponse*) defaultInstance;

- (FoldCardResponseBuilder*) clear;
- (FoldCardResponseBuilder*) clone;

- (FoldCardResponse*) build;
- (FoldCardResponse*) buildPartial;

- (FoldCardResponseBuilder*) mergeFrom:(FoldCardResponse*) other;
- (FoldCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FoldCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  PBAppendableArray * cardIdsArray;
  SInt32 cardIdsMemoizedSerializedSize;
}
@property (readonly, strong) PBArray * cardIds;
- (SInt32)cardIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShowCardRequestBuilder*) builder;
+ (ShowCardRequestBuilder*) builder;
+ (ShowCardRequestBuilder*) builderWithPrototype:(ShowCardRequest*) prototype;
- (ShowCardRequestBuilder*) toBuilder;

+ (ShowCardRequest*) parseFromData:(NSData*) data;
+ (ShowCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (ShowCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ShowCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardRequestBuilder : PBGeneratedMessageBuilder {
@private
  ShowCardRequest* resultShowCardRequest;
}

- (ShowCardRequest*) defaultInstance;

- (ShowCardRequestBuilder*) clear;
- (ShowCardRequestBuilder*) clone;

- (ShowCardRequest*) build;
- (ShowCardRequest*) buildPartial;

- (ShowCardRequestBuilder*) mergeFrom:(ShowCardRequest*) other;
- (ShowCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShowCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)cardIds;
- (SInt32)cardIdsAtIndex:(NSUInteger)index;
- (ShowCardRequestBuilder *)addCardIds:(SInt32)value;
- (ShowCardRequestBuilder *)setCardIdsArray:(NSArray *)array;
- (ShowCardRequestBuilder *)setCardIdsValues:(const SInt32 *)values count:(NSUInteger)count;
- (ShowCardRequestBuilder *)clearCardIds;
@end

@interface ShowCardResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShowCardResponseBuilder*) builder;
+ (ShowCardResponseBuilder*) builder;
+ (ShowCardResponseBuilder*) builderWithPrototype:(ShowCardResponse*) prototype;
- (ShowCardResponseBuilder*) toBuilder;

+ (ShowCardResponse*) parseFromData:(NSData*) data;
+ (ShowCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ShowCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShowCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ShowCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShowCardResponseBuilder : PBGeneratedMessageBuilder {
@private
  ShowCardResponse* resultShowCardResponse;
}

- (ShowCardResponse*) defaultInstance;

- (ShowCardResponseBuilder*) clear;
- (ShowCardResponseBuilder*) clone;

- (ShowCardResponse*) build;
- (ShowCardResponse*) buildPartial;

- (ShowCardResponseBuilder*) mergeFrom:(ShowCardResponse*) other;
- (ShowCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShowCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasToUserId_:1;
  NSString* toUserId;
}
- (BOOL) hasToUserId;
@property (readonly, strong) NSString* toUserId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CompareCardRequestBuilder*) builder;
+ (CompareCardRequestBuilder*) builder;
+ (CompareCardRequestBuilder*) builderWithPrototype:(CompareCardRequest*) prototype;
- (CompareCardRequestBuilder*) toBuilder;

+ (CompareCardRequest*) parseFromData:(NSData*) data;
+ (CompareCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CompareCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CompareCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardRequestBuilder : PBGeneratedMessageBuilder {
@private
  CompareCardRequest* resultCompareCardRequest;
}

- (CompareCardRequest*) defaultInstance;

- (CompareCardRequestBuilder*) clear;
- (CompareCardRequestBuilder*) clone;

- (CompareCardRequest*) build;
- (CompareCardRequest*) buildPartial;

- (CompareCardRequestBuilder*) mergeFrom:(CompareCardRequest*) other;
- (CompareCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CompareCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasToUserId;
- (NSString*) toUserId;
- (CompareCardRequestBuilder*) setToUserId:(NSString*) value;
- (CompareCardRequestBuilder*) clearToUserId;
@end

@interface CompareCardResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * userResultArray;
}
@property (readonly, strong) NSArray * userResult;
- (PBUserResult*)userResultAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CompareCardResponseBuilder*) builder;
+ (CompareCardResponseBuilder*) builder;
+ (CompareCardResponseBuilder*) builderWithPrototype:(CompareCardResponse*) prototype;
- (CompareCardResponseBuilder*) toBuilder;

+ (CompareCardResponse*) parseFromData:(NSData*) data;
+ (CompareCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CompareCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CompareCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CompareCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CompareCardResponseBuilder : PBGeneratedMessageBuilder {
@private
  CompareCardResponse* resultCompareCardResponse;
}

- (CompareCardResponse*) defaultInstance;

- (CompareCardResponseBuilder*) clear;
- (CompareCardResponseBuilder*) clone;

- (CompareCardResponse*) build;
- (CompareCardResponse*) buildPartial;

- (CompareCardResponseBuilder*) mergeFrom:(CompareCardResponse*) other;
- (CompareCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CompareCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userResult;
- (PBUserResult*)userResultAtIndex:(NSUInteger)index;
- (CompareCardResponseBuilder *)addUserResult:(PBUserResult*)value;
- (CompareCardResponseBuilder *)setUserResultArray:(NSArray *)array;
- (CompareCardResponseBuilder *)clearUserResult;
@end

@interface ChangeCardRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCardId_:1;
  SInt32 cardId;
}
- (BOOL) hasCardId;
@property (readonly) SInt32 cardId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChangeCardRequestBuilder*) builder;
+ (ChangeCardRequestBuilder*) builder;
+ (ChangeCardRequestBuilder*) builderWithPrototype:(ChangeCardRequest*) prototype;
- (ChangeCardRequestBuilder*) toBuilder;

+ (ChangeCardRequest*) parseFromData:(NSData*) data;
+ (ChangeCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardRequest*) parseFromInputStream:(NSInputStream*) input;
+ (ChangeCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChangeCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChangeCardRequestBuilder : PBGeneratedMessageBuilder {
@private
  ChangeCardRequest* resultChangeCardRequest;
}

- (ChangeCardRequest*) defaultInstance;

- (ChangeCardRequestBuilder*) clear;
- (ChangeCardRequestBuilder*) clone;

- (ChangeCardRequest*) build;
- (ChangeCardRequest*) buildPartial;

- (ChangeCardRequestBuilder*) mergeFrom:(ChangeCardRequest*) other;
- (ChangeCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChangeCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCardId;
- (SInt32) cardId;
- (ChangeCardRequestBuilder*) setCardId:(SInt32) value;
- (ChangeCardRequestBuilder*) clearCardId;
@end

@interface ChangeCardResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOldCardId_:1;
  BOOL hasNewPoker_:1;
  BOOL hasCardType_:1;
  SInt32 oldCardId;
  PBPoker* newPoker NS_RETURNS_NOT_RETAINED;
  PBZJHCardType cardType;
}
- (BOOL) hasOldCardId;
- (BOOL) hasNewPoker;
- (BOOL) hasCardType;
@property (readonly) SInt32 oldCardId;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED PBPoker* newPoker;
@property (readonly) PBZJHCardType cardType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChangeCardResponseBuilder*) builder;
+ (ChangeCardResponseBuilder*) builder;
+ (ChangeCardResponseBuilder*) builderWithPrototype:(ChangeCardResponse*) prototype;
- (ChangeCardResponseBuilder*) toBuilder;

+ (ChangeCardResponse*) parseFromData:(NSData*) data;
+ (ChangeCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ChangeCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChangeCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChangeCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChangeCardResponseBuilder : PBGeneratedMessageBuilder {
@private
  ChangeCardResponse* resultChangeCardResponse;
}

- (ChangeCardResponse*) defaultInstance;

- (ChangeCardResponseBuilder*) clear;
- (ChangeCardResponseBuilder*) clone;

- (ChangeCardResponse*) build;
- (ChangeCardResponse*) buildPartial;

- (ChangeCardResponseBuilder*) mergeFrom:(ChangeCardResponse*) other;
- (ChangeCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChangeCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOldCardId;
- (SInt32) oldCardId;
- (ChangeCardResponseBuilder*) setOldCardId:(SInt32) value;
- (ChangeCardResponseBuilder*) clearOldCardId;

- (BOOL) hasNewPoker;
- (PBPoker*) newPoker;
- (ChangeCardResponseBuilder*) setNewPoker:(PBPoker*) value;
- (ChangeCardResponseBuilder*) setNewPokerBuilder:(PBPokerBuilder*) builderForValue;
- (ChangeCardResponseBuilder*) mergeNewPoker:(PBPoker*) value;
- (ChangeCardResponseBuilder*) clearNewPoker;

- (BOOL) hasCardType;
- (PBZJHCardType) cardType;
- (ChangeCardResponseBuilder*) setCardType:(PBZJHCardType) value;
- (ChangeCardResponseBuilder*) clearCardType;
@end

@interface JoinGameRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGender_:1;
  BOOL hasIsRobot_:1;
  BOOL hasSessionToBeChange_:1;
  BOOL hasAutoNew_:1;
  BOOL hasTargetSessionId_:1;
  BOOL hasGuessDifficultLevel_:1;
  BOOL hasUserLevel_:1;
  BOOL hasRuleType_:1;
  BOOL hasVersion_:1;
  BOOL hasUserId_:1;
  BOOL hasGameId_:1;
  BOOL hasNickName_:1;
  BOOL hasAvatar_:1;
  BOOL hasRoomId_:1;
  BOOL hasRoomName_:1;
  BOOL hasLocation_:1;
  BOOL hasUser_:1;
  BOOL gender_:1;
  BOOL isRobot_:1;
  SInt64 sessionToBeChange;
  SInt32 autoNew;
  SInt32 targetSessionId;
  SInt32 guessDifficultLevel;
  SInt32 userLevel;
  SInt32 ruleType;
  SInt32 version;
  NSString* userId;
  NSString* gameId;
  NSString* nickName;
  NSString* avatar;
  NSString* roomId;
  NSString* roomName;
  NSString* location;
  PBGameUser* user;
  PBAppendableArray * excludeSessionIdArray;
  NSMutableArray * snsUsersArray;
}
- (BOOL) hasUserId;
- (BOOL) hasGameId;
- (BOOL) hasAutoNew;
- (BOOL) hasNickName;
- (BOOL) hasAvatar;
- (BOOL) hasSessionToBeChange;
- (BOOL) hasGender;
- (BOOL) hasIsRobot;
- (BOOL) hasTargetSessionId;
- (BOOL) hasGuessDifficultLevel;
- (BOOL) hasRoomId;
- (BOOL) hasRoomName;
- (BOOL) hasLocation;
- (BOOL) hasUserLevel;
- (BOOL) hasUser;
- (BOOL) hasRuleType;
- (BOOL) hasVersion;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* gameId;
@property (readonly) SInt32 autoNew;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* avatar;
@property (readonly, strong) PBArray * excludeSessionId;
@property (readonly) SInt64 sessionToBeChange;
- (BOOL) gender;
- (BOOL) isRobot;
@property (readonly) SInt32 targetSessionId;
@property (readonly) SInt32 guessDifficultLevel;
@property (readonly, strong) NSString* roomId;
@property (readonly, strong) NSString* roomName;
@property (readonly, strong) NSArray * snsUsers;
@property (readonly, strong) NSString* location;
@property (readonly) SInt32 userLevel;
@property (readonly, strong) PBGameUser* user;
@property (readonly) SInt32 ruleType;
@property (readonly) SInt32 version;
- (SInt64)excludeSessionIdAtIndex:(NSUInteger)index;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (JoinGameRequestBuilder*) builder;
+ (JoinGameRequestBuilder*) builder;
+ (JoinGameRequestBuilder*) builderWithPrototype:(JoinGameRequest*) prototype;
- (JoinGameRequestBuilder*) toBuilder;

+ (JoinGameRequest*) parseFromData:(NSData*) data;
+ (JoinGameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input;
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface JoinGameRequestBuilder : PBGeneratedMessageBuilder {
@private
  JoinGameRequest* resultJoinGameRequest;
}

- (JoinGameRequest*) defaultInstance;

- (JoinGameRequestBuilder*) clear;
- (JoinGameRequestBuilder*) clone;

- (JoinGameRequest*) build;
- (JoinGameRequest*) buildPartial;

- (JoinGameRequestBuilder*) mergeFrom:(JoinGameRequest*) other;
- (JoinGameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (JoinGameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (JoinGameRequestBuilder*) setUserId:(NSString*) value;
- (JoinGameRequestBuilder*) clearUserId;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (JoinGameRequestBuilder*) setGameId:(NSString*) value;
- (JoinGameRequestBuilder*) clearGameId;

- (BOOL) hasAutoNew;
- (SInt32) autoNew;
- (JoinGameRequestBuilder*) setAutoNew:(SInt32) value;
- (JoinGameRequestBuilder*) clearAutoNew;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (JoinGameRequestBuilder*) setNickName:(NSString*) value;
- (JoinGameRequestBuilder*) clearNickName;

- (BOOL) hasAvatar;
- (NSString*) avatar;
- (JoinGameRequestBuilder*) setAvatar:(NSString*) value;
- (JoinGameRequestBuilder*) clearAvatar;

- (PBAppendableArray *)excludeSessionId;
- (SInt64)excludeSessionIdAtIndex:(NSUInteger)index;
- (JoinGameRequestBuilder *)addExcludeSessionId:(SInt64)value;
- (JoinGameRequestBuilder *)setExcludeSessionIdArray:(NSArray *)array;
- (JoinGameRequestBuilder *)setExcludeSessionIdValues:(const SInt64 *)values count:(NSUInteger)count;
- (JoinGameRequestBuilder *)clearExcludeSessionId;

- (BOOL) hasSessionToBeChange;
- (SInt64) sessionToBeChange;
- (JoinGameRequestBuilder*) setSessionToBeChange:(SInt64) value;
- (JoinGameRequestBuilder*) clearSessionToBeChange;

- (BOOL) hasGender;
- (BOOL) gender;
- (JoinGameRequestBuilder*) setGender:(BOOL) value;
- (JoinGameRequestBuilder*) clearGender;

- (BOOL) hasIsRobot;
- (BOOL) isRobot;
- (JoinGameRequestBuilder*) setIsRobot:(BOOL) value;
- (JoinGameRequestBuilder*) clearIsRobot;

- (BOOL) hasTargetSessionId;
- (SInt32) targetSessionId;
- (JoinGameRequestBuilder*) setTargetSessionId:(SInt32) value;
- (JoinGameRequestBuilder*) clearTargetSessionId;

- (BOOL) hasGuessDifficultLevel;
- (SInt32) guessDifficultLevel;
- (JoinGameRequestBuilder*) setGuessDifficultLevel:(SInt32) value;
- (JoinGameRequestBuilder*) clearGuessDifficultLevel;

- (BOOL) hasRoomId;
- (NSString*) roomId;
- (JoinGameRequestBuilder*) setRoomId:(NSString*) value;
- (JoinGameRequestBuilder*) clearRoomId;

- (BOOL) hasRoomName;
- (NSString*) roomName;
- (JoinGameRequestBuilder*) setRoomName:(NSString*) value;
- (JoinGameRequestBuilder*) clearRoomName;

- (NSMutableArray *)snsUsers;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;
- (JoinGameRequestBuilder *)addSnsUsers:(PBSNSUser*)value;
- (JoinGameRequestBuilder *)setSnsUsersArray:(NSArray *)array;
- (JoinGameRequestBuilder *)clearSnsUsers;

- (BOOL) hasLocation;
- (NSString*) location;
- (JoinGameRequestBuilder*) setLocation:(NSString*) value;
- (JoinGameRequestBuilder*) clearLocation;

- (BOOL) hasUserLevel;
- (SInt32) userLevel;
- (JoinGameRequestBuilder*) setUserLevel:(SInt32) value;
- (JoinGameRequestBuilder*) clearUserLevel;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (JoinGameRequestBuilder*) setUser:(PBGameUser*) value;
- (JoinGameRequestBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (JoinGameRequestBuilder*) mergeUser:(PBGameUser*) value;
- (JoinGameRequestBuilder*) clearUser;

- (BOOL) hasRuleType;
- (SInt32) ruleType;
- (JoinGameRequestBuilder*) setRuleType:(SInt32) value;
- (JoinGameRequestBuilder*) clearRuleType;

- (BOOL) hasVersion;
- (SInt32) version;
- (JoinGameRequestBuilder*) setVersion:(SInt32) value;
- (JoinGameRequestBuilder*) clearVersion;
@end

@interface JoinGameResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGameSession_:1;
  BOOL hasZjhGameState_:1;
  PBGameSession* gameSession;
  PBZJHGameState* zjhGameState;
}
- (BOOL) hasGameSession;
- (BOOL) hasZjhGameState;
@property (readonly, strong) PBGameSession* gameSession;
@property (readonly, strong) PBZJHGameState* zjhGameState;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (JoinGameResponseBuilder*) builder;
+ (JoinGameResponseBuilder*) builder;
+ (JoinGameResponseBuilder*) builderWithPrototype:(JoinGameResponse*) prototype;
- (JoinGameResponseBuilder*) toBuilder;

+ (JoinGameResponse*) parseFromData:(NSData*) data;
+ (JoinGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface JoinGameResponseBuilder : PBGeneratedMessageBuilder {
@private
  JoinGameResponse* resultJoinGameResponse;
}

- (JoinGameResponse*) defaultInstance;

- (JoinGameResponseBuilder*) clear;
- (JoinGameResponseBuilder*) clone;

- (JoinGameResponse*) build;
- (JoinGameResponse*) buildPartial;

- (JoinGameResponseBuilder*) mergeFrom:(JoinGameResponse*) other;
- (JoinGameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (JoinGameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameSession;
- (PBGameSession*) gameSession;
- (JoinGameResponseBuilder*) setGameSession:(PBGameSession*) value;
- (JoinGameResponseBuilder*) setGameSessionBuilder:(PBGameSessionBuilder*) builderForValue;
- (JoinGameResponseBuilder*) mergeGameSession:(PBGameSession*) value;
- (JoinGameResponseBuilder*) clearGameSession;

- (BOOL) hasZjhGameState;
- (PBZJHGameState*) zjhGameState;
- (JoinGameResponseBuilder*) setZjhGameState:(PBZJHGameState*) value;
- (JoinGameResponseBuilder*) setZjhGameStateBuilder:(PBZJHGameStateBuilder*) builderForValue;
- (JoinGameResponseBuilder*) mergeZjhGameState:(PBZJHGameState*) value;
- (JoinGameResponseBuilder*) clearZjhGameState;
@end

@interface StartGameRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StartGameRequestBuilder*) builder;
+ (StartGameRequestBuilder*) builder;
+ (StartGameRequestBuilder*) builderWithPrototype:(StartGameRequest*) prototype;
- (StartGameRequestBuilder*) toBuilder;

+ (StartGameRequest*) parseFromData:(NSData*) data;
+ (StartGameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameRequest*) parseFromInputStream:(NSInputStream*) input;
+ (StartGameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StartGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameRequestBuilder : PBGeneratedMessageBuilder {
@private
  StartGameRequest* resultStartGameRequest;
}

- (StartGameRequest*) defaultInstance;

- (StartGameRequestBuilder*) clear;
- (StartGameRequestBuilder*) clone;

- (StartGameRequest*) build;
- (StartGameRequest*) buildPartial;

- (StartGameRequestBuilder*) mergeFrom:(StartGameRequest*) other;
- (StartGameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StartGameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
}
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) NSString* nextPlayUserId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StartGameResponseBuilder*) builder;
+ (StartGameResponseBuilder*) builder;
+ (StartGameResponseBuilder*) builderWithPrototype:(StartGameResponse*) prototype;
- (StartGameResponseBuilder*) toBuilder;

+ (StartGameResponse*) parseFromData:(NSData*) data;
+ (StartGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (StartGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StartGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StartGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StartGameResponseBuilder : PBGeneratedMessageBuilder {
@private
  StartGameResponse* resultStartGameResponse;
}

- (StartGameResponse*) defaultInstance;

- (StartGameResponseBuilder*) clear;
- (StartGameResponseBuilder*) clone;

- (StartGameResponse*) build;
- (StartGameResponse*) buildPartial;

- (StartGameResponseBuilder*) mergeFrom:(StartGameResponse*) other;
- (StartGameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StartGameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (StartGameResponseBuilder*) setCurrentPlayUserId:(NSString*) value;
- (StartGameResponseBuilder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (StartGameResponseBuilder*) setNextPlayUserId:(NSString*) value;
- (StartGameResponseBuilder*) clearNextPlayUserId;
@end

@interface RoomNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  PBAppendableArray * sessionIdsDeletedArray;
  NSMutableArray * sessionsChangedArray;
  NSMutableArray * sessionsAddedArray;
}
@property (readonly, strong) NSArray * sessionsChanged;
@property (readonly, strong) NSArray * sessionsAdded;
@property (readonly, strong) PBArray * sessionIdsDeleted;
- (PBGameSessionChanged*)sessionsChangedAtIndex:(NSUInteger)index;
- (PBGameSession*)sessionsAddedAtIndex:(NSUInteger)index;
- (SInt32)sessionIdsDeletedAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomNotificationRequestBuilder*) builder;
+ (RoomNotificationRequestBuilder*) builder;
+ (RoomNotificationRequestBuilder*) builderWithPrototype:(RoomNotificationRequest*) prototype;
- (RoomNotificationRequestBuilder*) toBuilder;

+ (RoomNotificationRequest*) parseFromData:(NSData*) data;
+ (RoomNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RoomNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  RoomNotificationRequest* resultRoomNotificationRequest;
}

- (RoomNotificationRequest*) defaultInstance;

- (RoomNotificationRequestBuilder*) clear;
- (RoomNotificationRequestBuilder*) clone;

- (RoomNotificationRequest*) build;
- (RoomNotificationRequest*) buildPartial;

- (RoomNotificationRequestBuilder*) mergeFrom:(RoomNotificationRequest*) other;
- (RoomNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)sessionsChanged;
- (PBGameSessionChanged*)sessionsChangedAtIndex:(NSUInteger)index;
- (RoomNotificationRequestBuilder *)addSessionsChanged:(PBGameSessionChanged*)value;
- (RoomNotificationRequestBuilder *)setSessionsChangedArray:(NSArray *)array;
- (RoomNotificationRequestBuilder *)clearSessionsChanged;

- (NSMutableArray *)sessionsAdded;
- (PBGameSession*)sessionsAddedAtIndex:(NSUInteger)index;
- (RoomNotificationRequestBuilder *)addSessionsAdded:(PBGameSession*)value;
- (RoomNotificationRequestBuilder *)setSessionsAddedArray:(NSArray *)array;
- (RoomNotificationRequestBuilder *)clearSessionsAdded;

- (PBAppendableArray *)sessionIdsDeleted;
- (SInt32)sessionIdsDeletedAtIndex:(NSUInteger)index;
- (RoomNotificationRequestBuilder *)addSessionIdsDeleted:(SInt32)value;
- (RoomNotificationRequestBuilder *)setSessionIdsDeletedArray:(NSArray *)array;
- (RoomNotificationRequestBuilder *)setSessionIdsDeletedValues:(const SInt32 *)values count:(NSUInteger)count;
- (RoomNotificationRequestBuilder *)clearSessionIdsDeleted;
@end

@interface RoomNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomNotificationResponseBuilder*) builder;
+ (RoomNotificationResponseBuilder*) builder;
+ (RoomNotificationResponseBuilder*) builderWithPrototype:(RoomNotificationResponse*) prototype;
- (RoomNotificationResponseBuilder*) toBuilder;

+ (RoomNotificationResponse*) parseFromData:(NSData*) data;
+ (RoomNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RoomNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  RoomNotificationResponse* resultRoomNotificationResponse;
}

- (RoomNotificationResponse*) defaultInstance;

- (RoomNotificationResponseBuilder*) clear;
- (RoomNotificationResponseBuilder*) clone;

- (RoomNotificationResponse*) build;
- (RoomNotificationResponse*) buildPartial;

- (RoomNotificationResponseBuilder*) mergeFrom:(RoomNotificationResponse*) other;
- (RoomNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceBeginNotificationRequestBuilder*) builder;
+ (RollDiceBeginNotificationRequestBuilder*) builder;
+ (RollDiceBeginNotificationRequestBuilder*) builderWithPrototype:(RollDiceBeginNotificationRequest*) prototype;
- (RollDiceBeginNotificationRequestBuilder*) toBuilder;

+ (RollDiceBeginNotificationRequest*) parseFromData:(NSData*) data;
+ (RollDiceBeginNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceBeginNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceBeginNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  RollDiceBeginNotificationRequest* resultRollDiceBeginNotificationRequest;
}

- (RollDiceBeginNotificationRequest*) defaultInstance;

- (RollDiceBeginNotificationRequestBuilder*) clear;
- (RollDiceBeginNotificationRequestBuilder*) clone;

- (RollDiceBeginNotificationRequest*) build;
- (RollDiceBeginNotificationRequest*) buildPartial;

- (RollDiceBeginNotificationRequestBuilder*) mergeFrom:(RollDiceBeginNotificationRequest*) other;
- (RollDiceBeginNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceBeginNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceBeginNotificationResponseBuilder*) builder;
+ (RollDiceBeginNotificationResponseBuilder*) builder;
+ (RollDiceBeginNotificationResponseBuilder*) builderWithPrototype:(RollDiceBeginNotificationResponse*) prototype;
- (RollDiceBeginNotificationResponseBuilder*) toBuilder;

+ (RollDiceBeginNotificationResponse*) parseFromData:(NSData*) data;
+ (RollDiceBeginNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceBeginNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceBeginNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceBeginNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceBeginNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  RollDiceBeginNotificationResponse* resultRollDiceBeginNotificationResponse;
}

- (RollDiceBeginNotificationResponse*) defaultInstance;

- (RollDiceBeginNotificationResponseBuilder*) clear;
- (RollDiceBeginNotificationResponseBuilder*) clone;

- (RollDiceBeginNotificationResponse*) build;
- (RollDiceBeginNotificationResponse*) buildPartial;

- (RollDiceBeginNotificationResponseBuilder*) mergeFrom:(RollDiceBeginNotificationResponse*) other;
- (RollDiceBeginNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceBeginNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * userDiceArray;
}
@property (readonly, strong) NSArray * userDice;
- (PBUserDice*)userDiceAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceEndNotificationRequestBuilder*) builder;
+ (RollDiceEndNotificationRequestBuilder*) builder;
+ (RollDiceEndNotificationRequestBuilder*) builderWithPrototype:(RollDiceEndNotificationRequest*) prototype;
- (RollDiceEndNotificationRequestBuilder*) toBuilder;

+ (RollDiceEndNotificationRequest*) parseFromData:(NSData*) data;
+ (RollDiceEndNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceEndNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceEndNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  RollDiceEndNotificationRequest* resultRollDiceEndNotificationRequest;
}

- (RollDiceEndNotificationRequest*) defaultInstance;

- (RollDiceEndNotificationRequestBuilder*) clear;
- (RollDiceEndNotificationRequestBuilder*) clone;

- (RollDiceEndNotificationRequest*) build;
- (RollDiceEndNotificationRequest*) buildPartial;

- (RollDiceEndNotificationRequestBuilder*) mergeFrom:(RollDiceEndNotificationRequest*) other;
- (RollDiceEndNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceEndNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userDice;
- (PBUserDice*)userDiceAtIndex:(NSUInteger)index;
- (RollDiceEndNotificationRequestBuilder *)addUserDice:(PBUserDice*)value;
- (RollDiceEndNotificationRequestBuilder *)setUserDiceArray:(NSArray *)array;
- (RollDiceEndNotificationRequestBuilder *)clearUserDice;
@end

@interface RollDiceEndNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RollDiceEndNotificationResponseBuilder*) builder;
+ (RollDiceEndNotificationResponseBuilder*) builder;
+ (RollDiceEndNotificationResponseBuilder*) builderWithPrototype:(RollDiceEndNotificationResponse*) prototype;
- (RollDiceEndNotificationResponseBuilder*) toBuilder;

+ (RollDiceEndNotificationResponse*) parseFromData:(NSData*) data;
+ (RollDiceEndNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (RollDiceEndNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RollDiceEndNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RollDiceEndNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RollDiceEndNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  RollDiceEndNotificationResponse* resultRollDiceEndNotificationResponse;
}

- (RollDiceEndNotificationResponse*) defaultInstance;

- (RollDiceEndNotificationResponseBuilder*) clear;
- (RollDiceEndNotificationResponseBuilder*) clone;

- (RollDiceEndNotificationResponse*) build;
- (RollDiceEndNotificationResponse*) buildPartial;

- (RollDiceEndNotificationResponseBuilder*) mergeFrom:(RollDiceEndNotificationResponse*) other;
- (RollDiceEndNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RollDiceEndNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasExpiredTime_:1;
  BOOL hasDirection_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  SInt32 expiredTime;
  SInt32 direction;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
}
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasExpiredTime;
- (BOOL) hasDirection;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) NSString* nextPlayUserId;
@property (readonly) SInt32 expiredTime;
@property (readonly) SInt32 direction;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NextPlayerStartNotificationRequestBuilder*) builder;
+ (NextPlayerStartNotificationRequestBuilder*) builder;
+ (NextPlayerStartNotificationRequestBuilder*) builderWithPrototype:(NextPlayerStartNotificationRequest*) prototype;
- (NextPlayerStartNotificationRequestBuilder*) toBuilder;

+ (NextPlayerStartNotificationRequest*) parseFromData:(NSData*) data;
+ (NextPlayerStartNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (NextPlayerStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NextPlayerStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  NextPlayerStartNotificationRequest* resultNextPlayerStartNotificationRequest;
}

- (NextPlayerStartNotificationRequest*) defaultInstance;

- (NextPlayerStartNotificationRequestBuilder*) clear;
- (NextPlayerStartNotificationRequestBuilder*) clone;

- (NextPlayerStartNotificationRequest*) build;
- (NextPlayerStartNotificationRequest*) buildPartial;

- (NextPlayerStartNotificationRequestBuilder*) mergeFrom:(NextPlayerStartNotificationRequest*) other;
- (NextPlayerStartNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NextPlayerStartNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (NextPlayerStartNotificationRequestBuilder*) setCurrentPlayUserId:(NSString*) value;
- (NextPlayerStartNotificationRequestBuilder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (NextPlayerStartNotificationRequestBuilder*) setNextPlayUserId:(NSString*) value;
- (NextPlayerStartNotificationRequestBuilder*) clearNextPlayUserId;

- (BOOL) hasExpiredTime;
- (SInt32) expiredTime;
- (NextPlayerStartNotificationRequestBuilder*) setExpiredTime:(SInt32) value;
- (NextPlayerStartNotificationRequestBuilder*) clearExpiredTime;

- (BOOL) hasDirection;
- (SInt32) direction;
- (NextPlayerStartNotificationRequestBuilder*) setDirection:(SInt32) value;
- (NextPlayerStartNotificationRequestBuilder*) clearDirection;
@end

@interface NextPlayerStartNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NextPlayerStartNotificationResponseBuilder*) builder;
+ (NextPlayerStartNotificationResponseBuilder*) builder;
+ (NextPlayerStartNotificationResponseBuilder*) builderWithPrototype:(NextPlayerStartNotificationResponse*) prototype;
- (NextPlayerStartNotificationResponseBuilder*) toBuilder;

+ (NextPlayerStartNotificationResponse*) parseFromData:(NSData*) data;
+ (NextPlayerStartNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (NextPlayerStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NextPlayerStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NextPlayerStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NextPlayerStartNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  NextPlayerStartNotificationResponse* resultNextPlayerStartNotificationResponse;
}

- (NextPlayerStartNotificationResponse*) defaultInstance;

- (NextPlayerStartNotificationResponseBuilder*) clear;
- (NextPlayerStartNotificationResponseBuilder*) clone;

- (NextPlayerStartNotificationResponse*) build;
- (NextPlayerStartNotificationResponse*) buildPartial;

- (NextPlayerStartNotificationResponseBuilder*) mergeFrom:(NextPlayerStartNotificationResponse*) other;
- (NextPlayerStartNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NextPlayerStartNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOdds_:1;
  BOOL hasOption_:1;
  BOOL hasAnte_:1;
  Float32 odds;
  SInt32 option;
  SInt32 ante;
}
- (BOOL) hasOption;
- (BOOL) hasAnte;
- (BOOL) hasOdds;
@property (readonly) SInt32 option;
@property (readonly) SInt32 ante;
@property (readonly) Float32 odds;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetDiceRequestBuilder*) builder;
+ (BetDiceRequestBuilder*) builder;
+ (BetDiceRequestBuilder*) builderWithPrototype:(BetDiceRequest*) prototype;
- (BetDiceRequestBuilder*) toBuilder;

+ (BetDiceRequest*) parseFromData:(NSData*) data;
+ (BetDiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BetDiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetDiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceRequestBuilder : PBGeneratedMessageBuilder {
@private
  BetDiceRequest* resultBetDiceRequest;
}

- (BetDiceRequest*) defaultInstance;

- (BetDiceRequestBuilder*) clear;
- (BetDiceRequestBuilder*) clone;

- (BetDiceRequest*) build;
- (BetDiceRequest*) buildPartial;

- (BetDiceRequestBuilder*) mergeFrom:(BetDiceRequest*) other;
- (BetDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetDiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOption;
- (SInt32) option;
- (BetDiceRequestBuilder*) setOption:(SInt32) value;
- (BetDiceRequestBuilder*) clearOption;

- (BOOL) hasAnte;
- (SInt32) ante;
- (BetDiceRequestBuilder*) setAnte:(SInt32) value;
- (BetDiceRequestBuilder*) clearAnte;

- (BOOL) hasOdds;
- (Float32) odds;
- (BetDiceRequestBuilder*) setOdds:(Float32) value;
- (BetDiceRequestBuilder*) clearOdds;
@end

@interface BetDiceResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BetDiceResponseBuilder*) builder;
+ (BetDiceResponseBuilder*) builder;
+ (BetDiceResponseBuilder*) builderWithPrototype:(BetDiceResponse*) prototype;
- (BetDiceResponseBuilder*) toBuilder;

+ (BetDiceResponse*) parseFromData:(NSData*) data;
+ (BetDiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BetDiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BetDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BetDiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BetDiceResponseBuilder : PBGeneratedMessageBuilder {
@private
  BetDiceResponse* resultBetDiceResponse;
}

- (BetDiceResponse*) defaultInstance;

- (BetDiceResponseBuilder*) clear;
- (BetDiceResponseBuilder*) clone;

- (BetDiceResponse*) build;
- (BetDiceResponse*) buildPartial;

- (BetDiceResponseBuilder*) mergeFrom:(BetDiceResponse*) other;
- (BetDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BetDiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGameResult_:1;
  BOOL hasZjhGameResult_:1;
  PBDiceGameResult* gameResult;
  PBZJHGameResult* zjhGameResult;
}
- (BOOL) hasGameResult;
- (BOOL) hasZjhGameResult;
@property (readonly, strong) PBDiceGameResult* gameResult;
@property (readonly, strong) PBZJHGameResult* zjhGameResult;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameOverNotificationRequestBuilder*) builder;
+ (GameOverNotificationRequestBuilder*) builder;
+ (GameOverNotificationRequestBuilder*) builderWithPrototype:(GameOverNotificationRequest*) prototype;
- (GameOverNotificationRequestBuilder*) toBuilder;

+ (GameOverNotificationRequest*) parseFromData:(NSData*) data;
+ (GameOverNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameOverNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameOverNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  GameOverNotificationRequest* resultGameOverNotificationRequest;
}

- (GameOverNotificationRequest*) defaultInstance;

- (GameOverNotificationRequestBuilder*) clear;
- (GameOverNotificationRequestBuilder*) clone;

- (GameOverNotificationRequest*) build;
- (GameOverNotificationRequest*) buildPartial;

- (GameOverNotificationRequestBuilder*) mergeFrom:(GameOverNotificationRequest*) other;
- (GameOverNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameOverNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameResult;
- (PBDiceGameResult*) gameResult;
- (GameOverNotificationRequestBuilder*) setGameResult:(PBDiceGameResult*) value;
- (GameOverNotificationRequestBuilder*) setGameResultBuilder:(PBDiceGameResultBuilder*) builderForValue;
- (GameOverNotificationRequestBuilder*) mergeGameResult:(PBDiceGameResult*) value;
- (GameOverNotificationRequestBuilder*) clearGameResult;

- (BOOL) hasZjhGameResult;
- (PBZJHGameResult*) zjhGameResult;
- (GameOverNotificationRequestBuilder*) setZjhGameResult:(PBZJHGameResult*) value;
- (GameOverNotificationRequestBuilder*) setZjhGameResultBuilder:(PBZJHGameResultBuilder*) builderForValue;
- (GameOverNotificationRequestBuilder*) mergeZjhGameResult:(PBZJHGameResult*) value;
- (GameOverNotificationRequestBuilder*) clearZjhGameResult;
@end

@interface GameOverNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameOverNotificationResponseBuilder*) builder;
+ (GameOverNotificationResponseBuilder*) builder;
+ (GameOverNotificationResponseBuilder*) builderWithPrototype:(GameOverNotificationResponse*) prototype;
- (GameOverNotificationResponseBuilder*) toBuilder;

+ (GameOverNotificationResponse*) parseFromData:(NSData*) data;
+ (GameOverNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameOverNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameOverNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameOverNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameOverNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  GameOverNotificationResponse* resultGameOverNotificationResponse;
}

- (GameOverNotificationResponse*) defaultInstance;

- (GameOverNotificationResponseBuilder*) clear;
- (GameOverNotificationResponseBuilder*) clone;

- (GameOverNotificationResponse*) build;
- (GameOverNotificationResponse*) buildPartial;

- (GameOverNotificationResponseBuilder*) mergeFrom:(GameOverNotificationResponse*) other;
- (GameOverNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameOverNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChatType_:1;
  BOOL hasContentType_:1;
  BOOL hasContent_:1;
  BOOL hasExpressionId_:1;
  BOOL hasContentVoiceId_:1;
  SInt32 chatType;
  SInt32 contentType;
  NSString* content;
  NSString* expressionId;
  NSString* contentVoiceId;
  NSMutableArray * toUserIdArray;
}
- (BOOL) hasContent;
- (BOOL) hasChatType;
- (BOOL) hasContentType;
- (BOOL) hasExpressionId;
- (BOOL) hasContentVoiceId;
@property (readonly, strong) NSArray * toUserId;
@property (readonly, strong) NSString* content;
@property (readonly) SInt32 chatType;
@property (readonly) SInt32 contentType;
@property (readonly, strong) NSString* expressionId;
@property (readonly, strong) NSString* contentVoiceId;
- (NSString*)toUserIdAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameChatRequestBuilder*) builder;
+ (GameChatRequestBuilder*) builder;
+ (GameChatRequestBuilder*) builderWithPrototype:(GameChatRequest*) prototype;
- (GameChatRequestBuilder*) toBuilder;

+ (GameChatRequest*) parseFromData:(NSData*) data;
+ (GameChatRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameChatRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatRequestBuilder : PBGeneratedMessageBuilder {
@private
  GameChatRequest* resultGameChatRequest;
}

- (GameChatRequest*) defaultInstance;

- (GameChatRequestBuilder*) clear;
- (GameChatRequestBuilder*) clone;

- (GameChatRequest*) build;
- (GameChatRequest*) buildPartial;

- (GameChatRequestBuilder*) mergeFrom:(GameChatRequest*) other;
- (GameChatRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameChatRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)toUserId;
- (NSString*)toUserIdAtIndex:(NSUInteger)index;
- (GameChatRequestBuilder *)addToUserId:(NSString*)value;
- (GameChatRequestBuilder *)setToUserIdArray:(NSArray *)array;
- (GameChatRequestBuilder *)clearToUserId;

- (BOOL) hasContent;
- (NSString*) content;
- (GameChatRequestBuilder*) setContent:(NSString*) value;
- (GameChatRequestBuilder*) clearContent;

- (BOOL) hasChatType;
- (SInt32) chatType;
- (GameChatRequestBuilder*) setChatType:(SInt32) value;
- (GameChatRequestBuilder*) clearChatType;

- (BOOL) hasContentType;
- (SInt32) contentType;
- (GameChatRequestBuilder*) setContentType:(SInt32) value;
- (GameChatRequestBuilder*) clearContentType;

- (BOOL) hasExpressionId;
- (NSString*) expressionId;
- (GameChatRequestBuilder*) setExpressionId:(NSString*) value;
- (GameChatRequestBuilder*) clearExpressionId;

- (BOOL) hasContentVoiceId;
- (NSString*) contentVoiceId;
- (GameChatRequestBuilder*) setContentVoiceId:(NSString*) value;
- (GameChatRequestBuilder*) clearContentVoiceId;
@end

@interface GameChatResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameChatResponseBuilder*) builder;
+ (GameChatResponseBuilder*) builder;
+ (GameChatResponseBuilder*) builderWithPrototype:(GameChatResponse*) prototype;
- (GameChatResponseBuilder*) toBuilder;

+ (GameChatResponse*) parseFromData:(NSData*) data;
+ (GameChatResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameChatResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameChatResponseBuilder : PBGeneratedMessageBuilder {
@private
  GameChatResponse* resultGameChatResponse;
}

- (GameChatResponse*) defaultInstance;

- (GameChatResponseBuilder*) clear;
- (GameChatResponseBuilder*) clone;

- (GameChatResponse*) build;
- (GameChatResponse*) buildPartial;

- (GameChatResponseBuilder*) mergeFrom:(GameChatResponse*) other;
- (GameChatResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameChatResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGuessCorrect_:1;
  BOOL hasWidth_:1;
  BOOL hasLevel_:1;
  BOOL hasLanguage_:1;
  BOOL hasColor_:1;
  BOOL hasPenType_:1;
  BOOL hasWord_:1;
  BOOL hasGuessWord_:1;
  BOOL hasGuessUserId_:1;
  BOOL hasDrawAction_:1;
  BOOL hasCanvasSize_:1;
  BOOL guessCorrect_:1;
  Float32 width;
  SInt32 level;
  SInt32 language;
  SInt32 color;
  SInt32 penType;
  NSString* word;
  NSString* guessWord;
  NSString* guessUserId;
  PBDrawAction* drawAction;
  PBSize* canvasSize;
  PBAppendableArray * pointsArray;
  SInt32 pointsMemoizedSerializedSize;
}
- (BOOL) hasWord;
- (BOOL) hasLevel;
- (BOOL) hasLanguage;
- (BOOL) hasWidth;
- (BOOL) hasColor;
- (BOOL) hasPenType;
- (BOOL) hasGuessWord;
- (BOOL) hasGuessUserId;
- (BOOL) hasGuessCorrect;
- (BOOL) hasDrawAction;
- (BOOL) hasCanvasSize;
@property (readonly, strong) NSString* word;
@property (readonly) SInt32 level;
@property (readonly) SInt32 language;
@property (readonly, strong) PBArray * points;
@property (readonly) Float32 width;
@property (readonly) SInt32 color;
@property (readonly) SInt32 penType;
@property (readonly, strong) NSString* guessWord;
@property (readonly, strong) NSString* guessUserId;
- (BOOL) guessCorrect;
@property (readonly, strong) PBDrawAction* drawAction;
@property (readonly, strong) PBSize* canvasSize;
- (SInt32)pointsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SendDrawDataRequestBuilder*) builder;
+ (SendDrawDataRequestBuilder*) builder;
+ (SendDrawDataRequestBuilder*) builderWithPrototype:(SendDrawDataRequest*) prototype;
- (SendDrawDataRequestBuilder*) toBuilder;

+ (SendDrawDataRequest*) parseFromData:(NSData*) data;
+ (SendDrawDataRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataRequest*) parseFromInputStream:(NSInputStream*) input;
+ (SendDrawDataRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SendDrawDataRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataRequestBuilder : PBGeneratedMessageBuilder {
@private
  SendDrawDataRequest* resultSendDrawDataRequest;
}

- (SendDrawDataRequest*) defaultInstance;

- (SendDrawDataRequestBuilder*) clear;
- (SendDrawDataRequestBuilder*) clone;

- (SendDrawDataRequest*) build;
- (SendDrawDataRequest*) buildPartial;

- (SendDrawDataRequestBuilder*) mergeFrom:(SendDrawDataRequest*) other;
- (SendDrawDataRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SendDrawDataRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWord;
- (NSString*) word;
- (SendDrawDataRequestBuilder*) setWord:(NSString*) value;
- (SendDrawDataRequestBuilder*) clearWord;

- (BOOL) hasLevel;
- (SInt32) level;
- (SendDrawDataRequestBuilder*) setLevel:(SInt32) value;
- (SendDrawDataRequestBuilder*) clearLevel;

- (BOOL) hasLanguage;
- (SInt32) language;
- (SendDrawDataRequestBuilder*) setLanguage:(SInt32) value;
- (SendDrawDataRequestBuilder*) clearLanguage;

- (PBAppendableArray *)points;
- (SInt32)pointsAtIndex:(NSUInteger)index;
- (SendDrawDataRequestBuilder *)addPoints:(SInt32)value;
- (SendDrawDataRequestBuilder *)setPointsArray:(NSArray *)array;
- (SendDrawDataRequestBuilder *)setPointsValues:(const SInt32 *)values count:(NSUInteger)count;
- (SendDrawDataRequestBuilder *)clearPoints;

- (BOOL) hasWidth;
- (Float32) width;
- (SendDrawDataRequestBuilder*) setWidth:(Float32) value;
- (SendDrawDataRequestBuilder*) clearWidth;

- (BOOL) hasColor;
- (SInt32) color;
- (SendDrawDataRequestBuilder*) setColor:(SInt32) value;
- (SendDrawDataRequestBuilder*) clearColor;

- (BOOL) hasPenType;
- (SInt32) penType;
- (SendDrawDataRequestBuilder*) setPenType:(SInt32) value;
- (SendDrawDataRequestBuilder*) clearPenType;

- (BOOL) hasGuessWord;
- (NSString*) guessWord;
- (SendDrawDataRequestBuilder*) setGuessWord:(NSString*) value;
- (SendDrawDataRequestBuilder*) clearGuessWord;

- (BOOL) hasGuessUserId;
- (NSString*) guessUserId;
- (SendDrawDataRequestBuilder*) setGuessUserId:(NSString*) value;
- (SendDrawDataRequestBuilder*) clearGuessUserId;

- (BOOL) hasGuessCorrect;
- (BOOL) guessCorrect;
- (SendDrawDataRequestBuilder*) setGuessCorrect:(BOOL) value;
- (SendDrawDataRequestBuilder*) clearGuessCorrect;

- (BOOL) hasDrawAction;
- (PBDrawAction*) drawAction;
- (SendDrawDataRequestBuilder*) setDrawAction:(PBDrawAction*) value;
- (SendDrawDataRequestBuilder*) setDrawActionBuilder:(PBDrawActionBuilder*) builderForValue;
- (SendDrawDataRequestBuilder*) mergeDrawAction:(PBDrawAction*) value;
- (SendDrawDataRequestBuilder*) clearDrawAction;

- (BOOL) hasCanvasSize;
- (PBSize*) canvasSize;
- (SendDrawDataRequestBuilder*) setCanvasSize:(PBSize*) value;
- (SendDrawDataRequestBuilder*) setCanvasSizeBuilder:(PBSizeBuilder*) builderForValue;
- (SendDrawDataRequestBuilder*) mergeCanvasSize:(PBSize*) value;
- (SendDrawDataRequestBuilder*) clearCanvasSize;
@end

@interface SendDrawDataResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SendDrawDataResponseBuilder*) builder;
+ (SendDrawDataResponseBuilder*) builder;
+ (SendDrawDataResponseBuilder*) builderWithPrototype:(SendDrawDataResponse*) prototype;
- (SendDrawDataResponseBuilder*) toBuilder;

+ (SendDrawDataResponse*) parseFromData:(NSData*) data;
+ (SendDrawDataResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataResponse*) parseFromInputStream:(NSInputStream*) input;
+ (SendDrawDataResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendDrawDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SendDrawDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendDrawDataResponseBuilder : PBGeneratedMessageBuilder {
@private
  SendDrawDataResponse* resultSendDrawDataResponse;
}

- (SendDrawDataResponse*) defaultInstance;

- (SendDrawDataResponseBuilder*) clear;
- (SendDrawDataResponseBuilder*) clone;

- (SendDrawDataResponse*) build;
- (SendDrawDataResponse*) buildPartial;

- (SendDrawDataResponseBuilder*) mergeFrom:(SendDrawDataResponse*) other;
- (SendDrawDataResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SendDrawDataResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasZjhGameState_:1;
  PBZJHGameState* zjhGameState;
}
- (BOOL) hasZjhGameState;
@property (readonly, strong) PBZJHGameState* zjhGameState;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStartNotificationRequestBuilder*) builder;
+ (GameStartNotificationRequestBuilder*) builder;
+ (GameStartNotificationRequestBuilder*) builderWithPrototype:(GameStartNotificationRequest*) prototype;
- (GameStartNotificationRequestBuilder*) toBuilder;

+ (GameStartNotificationRequest*) parseFromData:(NSData*) data;
+ (GameStartNotificationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (GameStartNotificationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStartNotificationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationRequestBuilder : PBGeneratedMessageBuilder {
@private
  GameStartNotificationRequest* resultGameStartNotificationRequest;
}

- (GameStartNotificationRequest*) defaultInstance;

- (GameStartNotificationRequestBuilder*) clear;
- (GameStartNotificationRequestBuilder*) clone;

- (GameStartNotificationRequest*) build;
- (GameStartNotificationRequest*) buildPartial;

- (GameStartNotificationRequestBuilder*) mergeFrom:(GameStartNotificationRequest*) other;
- (GameStartNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStartNotificationRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasZjhGameState;
- (PBZJHGameState*) zjhGameState;
- (GameStartNotificationRequestBuilder*) setZjhGameState:(PBZJHGameState*) value;
- (GameStartNotificationRequestBuilder*) setZjhGameStateBuilder:(PBZJHGameStateBuilder*) builderForValue;
- (GameStartNotificationRequestBuilder*) mergeZjhGameState:(PBZJHGameState*) value;
- (GameStartNotificationRequestBuilder*) clearZjhGameState;
@end

@interface GameStartNotificationResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameStartNotificationResponseBuilder*) builder;
+ (GameStartNotificationResponseBuilder*) builder;
+ (GameStartNotificationResponseBuilder*) builderWithPrototype:(GameStartNotificationResponse*) prototype;
- (GameStartNotificationResponseBuilder*) toBuilder;

+ (GameStartNotificationResponse*) parseFromData:(NSData*) data;
+ (GameStartNotificationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input;
+ (GameStartNotificationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameStartNotificationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameStartNotificationResponseBuilder : PBGeneratedMessageBuilder {
@private
  GameStartNotificationResponse* resultGameStartNotificationResponse;
}

- (GameStartNotificationResponse*) defaultInstance;

- (GameStartNotificationResponseBuilder*) clear;
- (GameStartNotificationResponseBuilder*) clone;

- (GameStartNotificationResponse*) build;
- (GameStartNotificationResponse*) buildPartial;

- (GameStartNotificationResponseBuilder*) mergeFrom:(GameStartNotificationResponse*) other;
- (GameStartNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameStartNotificationResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GeneralNotification : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserGender_:1;
  BOOL hasGuessCorrect_:1;
  BOOL hasWidth_:1;
  BOOL hasSessionStatus_:1;
  BOOL hasUserLevel_:1;
  BOOL hasColor_:1;
  BOOL hasPenType_:1;
  BOOL hasLevel_:1;
  BOOL hasRound_:1;
  BOOL hasLanguage_:1;
  BOOL hasGuessGainCoins_:1;
  BOOL hasChatType_:1;
  BOOL hasTurnGainCoins_:1;
  BOOL hasSessionHost_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL hasNewUserId_:1;
  BOOL hasQuitUserId_:1;
  BOOL hasNickName_:1;
  BOOL hasUserAvatar_:1;
  BOOL hasLocation_:1;
  BOOL hasWord_:1;
  BOOL hasGuessWord_:1;
  BOOL hasGuessUserId_:1;
  BOOL hasChatContent_:1;
  BOOL userGender_:1;
  BOOL guessCorrect_:1;
  Float32 width;
  SInt32 sessionStatus;
  SInt32 userLevel;
  SInt32 color;
  SInt32 penType;
  SInt32 level;
  SInt32 round;
  SInt32 language;
  SInt32 guessGainCoins;
  SInt32 chatType;
  SInt32 turnGainCoins;
  NSString* sessionHost;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
  NSString* newUserId;
  NSString* quitUserId;
  NSString* nickName;
  NSString* userAvatar;
  NSString* location;
  NSString* word;
  NSString* guessWord;
  NSString* guessUserId;
  NSString* chatContent;
  PBAppendableArray * pointsArray;
  SInt32 pointsMemoizedSerializedSize;
  NSMutableArray * chatToUserIdArray;
  NSMutableArray * snsUsersArray;
}
- (BOOL) hasSessionHost;
- (BOOL) hasSessionStatus;
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasNewUserId;
- (BOOL) hasQuitUserId;
- (BOOL) hasNickName;
- (BOOL) hasUserAvatar;
- (BOOL) hasUserGender;
- (BOOL) hasLocation;
- (BOOL) hasUserLevel;
- (BOOL) hasWidth;
- (BOOL) hasColor;
- (BOOL) hasPenType;
- (BOOL) hasWord;
- (BOOL) hasLevel;
- (BOOL) hasRound;
- (BOOL) hasLanguage;
- (BOOL) hasGuessWord;
- (BOOL) hasGuessUserId;
- (BOOL) hasGuessCorrect;
- (BOOL) hasGuessGainCoins;
- (BOOL) hasChatContent;
- (BOOL) hasChatType;
- (BOOL) hasTurnGainCoins;
@property (readonly, strong) NSString* sessionHost;
@property (readonly) SInt32 sessionStatus;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) NSString* nextPlayUserId;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED NSString* newUserId;
@property (readonly, strong) NSString* quitUserId;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* userAvatar;
- (BOOL) userGender;
@property (readonly, strong) NSArray * snsUsers;
@property (readonly, strong) NSString* location;
@property (readonly) SInt32 userLevel;
@property (readonly, strong) PBArray * points;
@property (readonly) Float32 width;
@property (readonly) SInt32 color;
@property (readonly) SInt32 penType;
@property (readonly, strong) NSString* word;
@property (readonly) SInt32 level;
@property (readonly) SInt32 round;
@property (readonly) SInt32 language;
@property (readonly, strong) NSString* guessWord;
@property (readonly, strong) NSString* guessUserId;
- (BOOL) guessCorrect;
@property (readonly) SInt32 guessGainCoins;
@property (readonly, strong) NSArray * chatToUserId;
@property (readonly, strong) NSString* chatContent;
@property (readonly) SInt32 chatType;
@property (readonly) SInt32 turnGainCoins;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;
- (SInt32)pointsAtIndex:(NSUInteger)index;
- (NSString*)chatToUserIdAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GeneralNotificationBuilder*) builder;
+ (GeneralNotificationBuilder*) builder;
+ (GeneralNotificationBuilder*) builderWithPrototype:(GeneralNotification*) prototype;
- (GeneralNotificationBuilder*) toBuilder;

+ (GeneralNotification*) parseFromData:(NSData*) data;
+ (GeneralNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GeneralNotification*) parseFromInputStream:(NSInputStream*) input;
+ (GeneralNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GeneralNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GeneralNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GeneralNotificationBuilder : PBGeneratedMessageBuilder {
@private
  GeneralNotification* resultGeneralNotification;
}

- (GeneralNotification*) defaultInstance;

- (GeneralNotificationBuilder*) clear;
- (GeneralNotificationBuilder*) clone;

- (GeneralNotification*) build;
- (GeneralNotification*) buildPartial;

- (GeneralNotificationBuilder*) mergeFrom:(GeneralNotification*) other;
- (GeneralNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GeneralNotificationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionHost;
- (NSString*) sessionHost;
- (GeneralNotificationBuilder*) setSessionHost:(NSString*) value;
- (GeneralNotificationBuilder*) clearSessionHost;

- (BOOL) hasSessionStatus;
- (SInt32) sessionStatus;
- (GeneralNotificationBuilder*) setSessionStatus:(SInt32) value;
- (GeneralNotificationBuilder*) clearSessionStatus;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (GeneralNotificationBuilder*) setCurrentPlayUserId:(NSString*) value;
- (GeneralNotificationBuilder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (GeneralNotificationBuilder*) setNextPlayUserId:(NSString*) value;
- (GeneralNotificationBuilder*) clearNextPlayUserId;

- (BOOL) hasNewUserId;
- (NSString*) newUserId NS_RETURNS_NOT_RETAINED;
- (GeneralNotificationBuilder*) setNewUserId:(NSString*) value;
- (GeneralNotificationBuilder*) clearNewUserId;

- (BOOL) hasQuitUserId;
- (NSString*) quitUserId;
- (GeneralNotificationBuilder*) setQuitUserId:(NSString*) value;
- (GeneralNotificationBuilder*) clearQuitUserId;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (GeneralNotificationBuilder*) setNickName:(NSString*) value;
- (GeneralNotificationBuilder*) clearNickName;

- (BOOL) hasUserAvatar;
- (NSString*) userAvatar;
- (GeneralNotificationBuilder*) setUserAvatar:(NSString*) value;
- (GeneralNotificationBuilder*) clearUserAvatar;

- (BOOL) hasUserGender;
- (BOOL) userGender;
- (GeneralNotificationBuilder*) setUserGender:(BOOL) value;
- (GeneralNotificationBuilder*) clearUserGender;

- (NSMutableArray *)snsUsers;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;
- (GeneralNotificationBuilder *)addSnsUsers:(PBSNSUser*)value;
- (GeneralNotificationBuilder *)setSnsUsersArray:(NSArray *)array;
- (GeneralNotificationBuilder *)clearSnsUsers;

- (BOOL) hasLocation;
- (NSString*) location;
- (GeneralNotificationBuilder*) setLocation:(NSString*) value;
- (GeneralNotificationBuilder*) clearLocation;

- (BOOL) hasUserLevel;
- (SInt32) userLevel;
- (GeneralNotificationBuilder*) setUserLevel:(SInt32) value;
- (GeneralNotificationBuilder*) clearUserLevel;

- (PBAppendableArray *)points;
- (SInt32)pointsAtIndex:(NSUInteger)index;
- (GeneralNotificationBuilder *)addPoints:(SInt32)value;
- (GeneralNotificationBuilder *)setPointsArray:(NSArray *)array;
- (GeneralNotificationBuilder *)setPointsValues:(const SInt32 *)values count:(NSUInteger)count;
- (GeneralNotificationBuilder *)clearPoints;

- (BOOL) hasWidth;
- (Float32) width;
- (GeneralNotificationBuilder*) setWidth:(Float32) value;
- (GeneralNotificationBuilder*) clearWidth;

- (BOOL) hasColor;
- (SInt32) color;
- (GeneralNotificationBuilder*) setColor:(SInt32) value;
- (GeneralNotificationBuilder*) clearColor;

- (BOOL) hasPenType;
- (SInt32) penType;
- (GeneralNotificationBuilder*) setPenType:(SInt32) value;
- (GeneralNotificationBuilder*) clearPenType;

- (BOOL) hasWord;
- (NSString*) word;
- (GeneralNotificationBuilder*) setWord:(NSString*) value;
- (GeneralNotificationBuilder*) clearWord;

- (BOOL) hasLevel;
- (SInt32) level;
- (GeneralNotificationBuilder*) setLevel:(SInt32) value;
- (GeneralNotificationBuilder*) clearLevel;

- (BOOL) hasRound;
- (SInt32) round;
- (GeneralNotificationBuilder*) setRound:(SInt32) value;
- (GeneralNotificationBuilder*) clearRound;

- (BOOL) hasLanguage;
- (SInt32) language;
- (GeneralNotificationBuilder*) setLanguage:(SInt32) value;
- (GeneralNotificationBuilder*) clearLanguage;

- (BOOL) hasGuessWord;
- (NSString*) guessWord;
- (GeneralNotificationBuilder*) setGuessWord:(NSString*) value;
- (GeneralNotificationBuilder*) clearGuessWord;

- (BOOL) hasGuessUserId;
- (NSString*) guessUserId;
- (GeneralNotificationBuilder*) setGuessUserId:(NSString*) value;
- (GeneralNotificationBuilder*) clearGuessUserId;

- (BOOL) hasGuessCorrect;
- (BOOL) guessCorrect;
- (GeneralNotificationBuilder*) setGuessCorrect:(BOOL) value;
- (GeneralNotificationBuilder*) clearGuessCorrect;

- (BOOL) hasGuessGainCoins;
- (SInt32) guessGainCoins;
- (GeneralNotificationBuilder*) setGuessGainCoins:(SInt32) value;
- (GeneralNotificationBuilder*) clearGuessGainCoins;

- (NSMutableArray *)chatToUserId;
- (NSString*)chatToUserIdAtIndex:(NSUInteger)index;
- (GeneralNotificationBuilder *)addChatToUserId:(NSString*)value;
- (GeneralNotificationBuilder *)setChatToUserIdArray:(NSArray *)array;
- (GeneralNotificationBuilder *)clearChatToUserId;

- (BOOL) hasChatContent;
- (NSString*) chatContent;
- (GeneralNotificationBuilder*) setChatContent:(NSString*) value;
- (GeneralNotificationBuilder*) clearChatContent;

- (BOOL) hasChatType;
- (SInt32) chatType;
- (GeneralNotificationBuilder*) setChatType:(SInt32) value;
- (GeneralNotificationBuilder*) clearChatType;

- (BOOL) hasTurnGainCoins;
- (SInt32) turnGainCoins;
- (GeneralNotificationBuilder*) setTurnGainCoins:(SInt32) value;
- (GeneralNotificationBuilder*) clearTurnGainCoins;
@end

@interface FacetimeChatRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChatGender_:1;
  BOOL hasUser_:1;
  BOOL chatGender_:1;
  PBGameUser* user;
}
- (BOOL) hasUser;
- (BOOL) hasChatGender;
@property (readonly, strong) PBGameUser* user;
- (BOOL) chatGender;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FacetimeChatRequestBuilder*) builder;
+ (FacetimeChatRequestBuilder*) builder;
+ (FacetimeChatRequestBuilder*) builderWithPrototype:(FacetimeChatRequest*) prototype;
- (FacetimeChatRequestBuilder*) toBuilder;

+ (FacetimeChatRequest*) parseFromData:(NSData*) data;
+ (FacetimeChatRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FacetimeChatRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FacetimeChatRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FacetimeChatRequestBuilder : PBGeneratedMessageBuilder {
@private
  FacetimeChatRequest* resultFacetimeChatRequest;
}

- (FacetimeChatRequest*) defaultInstance;

- (FacetimeChatRequestBuilder*) clear;
- (FacetimeChatRequestBuilder*) clone;

- (FacetimeChatRequest*) build;
- (FacetimeChatRequest*) buildPartial;

- (FacetimeChatRequestBuilder*) mergeFrom:(FacetimeChatRequest*) other;
- (FacetimeChatRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FacetimeChatRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (FacetimeChatRequestBuilder*) setUser:(PBGameUser*) value;
- (FacetimeChatRequestBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (FacetimeChatRequestBuilder*) mergeUser:(PBGameUser*) value;
- (FacetimeChatRequestBuilder*) clearUser;

- (BOOL) hasChatGender;
- (BOOL) chatGender;
- (FacetimeChatRequestBuilder*) setChatGender:(BOOL) value;
- (FacetimeChatRequestBuilder*) clearChatGender;
@end

@interface FacetimeChatResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasChosenToInitiate_:1;
  BOOL chosenToInitiate_:1;
  NSMutableArray * userArray;
}
- (BOOL) hasChosenToInitiate;
@property (readonly, strong) NSArray * user;
- (BOOL) chosenToInitiate;
- (PBGameUser*)userAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FacetimeChatResponseBuilder*) builder;
+ (FacetimeChatResponseBuilder*) builder;
+ (FacetimeChatResponseBuilder*) builderWithPrototype:(FacetimeChatResponse*) prototype;
- (FacetimeChatResponseBuilder*) toBuilder;

+ (FacetimeChatResponse*) parseFromData:(NSData*) data;
+ (FacetimeChatResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FacetimeChatResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FacetimeChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FacetimeChatResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FacetimeChatResponseBuilder : PBGeneratedMessageBuilder {
@private
  FacetimeChatResponse* resultFacetimeChatResponse;
}

- (FacetimeChatResponse*) defaultInstance;

- (FacetimeChatResponseBuilder*) clear;
- (FacetimeChatResponseBuilder*) clone;

- (FacetimeChatResponse*) build;
- (FacetimeChatResponse*) buildPartial;

- (FacetimeChatResponseBuilder*) mergeFrom:(FacetimeChatResponse*) other;
- (FacetimeChatResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FacetimeChatResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)user;
- (PBGameUser*)userAtIndex:(NSUInteger)index;
- (FacetimeChatResponseBuilder *)addUser:(PBGameUser*)value;
- (FacetimeChatResponseBuilder *)setUserArray:(NSArray *)array;
- (FacetimeChatResponseBuilder *)clearUser;

- (BOOL) hasChosenToInitiate;
- (BOOL) chosenToInitiate;
- (FacetimeChatResponseBuilder*) setChosenToInitiate:(BOOL) value;
- (FacetimeChatResponseBuilder*) clearChosenToInitiate;
@end

@interface GameMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSessionId_:1;
  BOOL hasMessageId_:1;
  BOOL hasTimeStamp_:1;
  BOOL hasRound_:1;
  BOOL hasMaxCount_:1;
  BOOL hasOnlineUserCount_:1;
  BOOL hasStartOffset_:1;
  BOOL hasMac_:1;
  BOOL hasUserId_:1;
  BOOL hasToUserId_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasJoinGameResponse_:1;
  BOOL hasStartGameRequest_:1;
  BOOL hasStartGameResponse_:1;
  BOOL hasGameStartNotificationRequest_:1;
  BOOL hasGameStartNotificationResponse_:1;
  BOOL hasSendDrawDataRequest_:1;
  BOOL hasSendDrawDataResponse_:1;
  BOOL hasChatRequest_:1;
  BOOL hasChatResponse_:1;
  BOOL hasFacetimeChatRequest_:1;
  BOOL hasFacetimeChatResponse_:1;
  BOOL hasNotification_:1;
  BOOL hasGetRoomsRequest_:1;
  BOOL hasGetRoomsResponse_:1;
  BOOL hasCreateRoomRequest_:1;
  BOOL hasCreateRoomResponse_:1;
  BOOL hasSearchRoomRequest_:1;
  BOOL hasSearchRoomResponse_:1;
  BOOL hasRoomNotificationRequest_:1;
  BOOL hasRollDiceEndNotificationRequest_:1;
  BOOL hasCallDiceRequest_:1;
  BOOL hasCallDiceResponse_:1;
  BOOL hasOpenDiceRequest_:1;
  BOOL hasOpenDiceResponse_:1;
  BOOL hasGameOverNotificationRequest_:1;
  BOOL hasGameOverNotificationResponse_:1;
  BOOL hasRegisterRoomsNotificationRequest_:1;
  BOOL hasRegisterRoomsNotificationResponse_:1;
  BOOL hasUnRegisterRoomsNotificationRequest_:1;
  BOOL hasUnRegisterRoomsNotificationResponse_:1;
  BOOL hasUserDiceNotification_:1;
  BOOL hasBetDiceRequest_:1;
  BOOL hasBetDiceResponse_:1;
  BOOL hasUseItemRequest_:1;
  BOOL hasUseItemResponse_:1;
  BOOL hasBetRequest_:1;
  BOOL hasBetResponse_:1;
  BOOL hasCheckCardRequest_:1;
  BOOL hasCheckCardResponse_:1;
  BOOL hasFoldCardRequest_:1;
  BOOL hasFoldCardResponse_:1;
  BOOL hasShowCardRequest_:1;
  BOOL hasShowCardResponse_:1;
  BOOL hasCompareCardRequest_:1;
  BOOL hasCompareCardResponse_:1;
  BOOL hasChangeCardRequest_:1;
  BOOL hasChangeCardResponse_:1;
  BOOL hasTimeoutSettingRequest_:1;
  BOOL hasTimeoutSettingResponse_:1;
  BOOL hasJoinGameRequest_:1;
  BOOL hasCompleteReason_:1;
  BOOL hasResultCode_:1;
  BOOL hasCommand_:1;
  SInt64 sessionId;
  SInt32 messageId;
  SInt32 timeStamp;
  SInt32 round;
  SInt32 maxCount;
  SInt32 onlineUserCount;
  SInt32 startOffset;
  NSString* mac;
  NSString* userId;
  NSString* toUserId;
  NSString* currentPlayUserId;
  JoinGameResponse* joinGameResponse;
  StartGameRequest* startGameRequest;
  StartGameResponse* startGameResponse;
  GameStartNotificationRequest* gameStartNotificationRequest;
  GameStartNotificationResponse* gameStartNotificationResponse;
  SendDrawDataRequest* sendDrawDataRequest;
  SendDrawDataResponse* sendDrawDataResponse;
  GameChatRequest* chatRequest;
  GameChatResponse* chatResponse;
  FacetimeChatRequest* facetimeChatRequest;
  FacetimeChatResponse* facetimeChatResponse;
  GeneralNotification* notification;
  GetRoomsRequest* getRoomsRequest;
  GetRoomsResponse* getRoomsResponse;
  CreateRoomRequest* createRoomRequest;
  CreateRoomResponse* createRoomResponse;
  SearchRoomRequest* searchRoomRequest;
  SearchRoomResponse* searchRoomResponse;
  RoomNotificationRequest* roomNotificationRequest;
  RollDiceEndNotificationRequest* rollDiceEndNotificationRequest;
  CallDiceRequest* callDiceRequest;
  CallDiceResponse* callDiceResponse;
  OpenDiceRequest* openDiceRequest;
  OpenDiceResponse* openDiceResponse;
  GameOverNotificationRequest* gameOverNotificationRequest;
  GameOverNotificationResponse* gameOverNotificationResponse;
  RegisterRoomsNotificationRequest* registerRoomsNotificationRequest;
  RegisterRoomsNotificationResponse* registerRoomsNotificationResponse;
  UnRegisterRoomsNotificationRequest* unRegisterRoomsNotificationRequest;
  UnRegisterRoomsNotificationResponse* unRegisterRoomsNotificationResponse;
  UserDiceNotification* userDiceNotification;
  BetDiceRequest* betDiceRequest;
  BetDiceResponse* betDiceResponse;
  UseItemRequest* useItemRequest;
  UseItemResponse* useItemResponse;
  BetRequest* betRequest;
  BetResponse* betResponse;
  CheckCardRequest* checkCardRequest;
  CheckCardResponse* checkCardResponse;
  FoldCardRequest* foldCardRequest;
  FoldCardResponse* foldCardResponse;
  ShowCardRequest* showCardRequest;
  ShowCardResponse* showCardResponse;
  CompareCardRequest* compareCardRequest;
  CompareCardResponse* compareCardResponse;
  ChangeCardRequest* changeCardRequest;
  ChangeCardResponse* changeCardResponse;
  TimeoutSettingRequest* timeoutSettingRequest;
  TimeoutSettingResponse* timeoutSettingResponse;
  JoinGameRequest* joinGameRequest;
  GameCompleteReason completeReason;
  GameResultCode resultCode;
  GameCommandType command;
}
- (BOOL) hasCommand;
- (BOOL) hasMessageId;
- (BOOL) hasResultCode;
- (BOOL) hasUserId;
- (BOOL) hasSessionId;
- (BOOL) hasRound;
- (BOOL) hasCompleteReason;
- (BOOL) hasOnlineUserCount;
- (BOOL) hasToUserId;
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasJoinGameRequest;
- (BOOL) hasJoinGameResponse;
- (BOOL) hasStartGameRequest;
- (BOOL) hasStartGameResponse;
- (BOOL) hasGameStartNotificationRequest;
- (BOOL) hasGameStartNotificationResponse;
- (BOOL) hasSendDrawDataRequest;
- (BOOL) hasSendDrawDataResponse;
- (BOOL) hasChatRequest;
- (BOOL) hasChatResponse;
- (BOOL) hasFacetimeChatRequest;
- (BOOL) hasFacetimeChatResponse;
- (BOOL) hasNotification;
- (BOOL) hasGetRoomsRequest;
- (BOOL) hasGetRoomsResponse;
- (BOOL) hasCreateRoomRequest;
- (BOOL) hasCreateRoomResponse;
- (BOOL) hasSearchRoomRequest;
- (BOOL) hasSearchRoomResponse;
- (BOOL) hasRoomNotificationRequest;
- (BOOL) hasRollDiceEndNotificationRequest;
- (BOOL) hasCallDiceRequest;
- (BOOL) hasCallDiceResponse;
- (BOOL) hasOpenDiceRequest;
- (BOOL) hasOpenDiceResponse;
- (BOOL) hasGameOverNotificationRequest;
- (BOOL) hasGameOverNotificationResponse;
- (BOOL) hasRegisterRoomsNotificationRequest;
- (BOOL) hasRegisterRoomsNotificationResponse;
- (BOOL) hasUnRegisterRoomsNotificationRequest;
- (BOOL) hasUnRegisterRoomsNotificationResponse;
- (BOOL) hasUserDiceNotification;
- (BOOL) hasBetDiceRequest;
- (BOOL) hasBetDiceResponse;
- (BOOL) hasUseItemRequest;
- (BOOL) hasUseItemResponse;
- (BOOL) hasBetRequest;
- (BOOL) hasBetResponse;
- (BOOL) hasCheckCardRequest;
- (BOOL) hasCheckCardResponse;
- (BOOL) hasFoldCardRequest;
- (BOOL) hasFoldCardResponse;
- (BOOL) hasShowCardRequest;
- (BOOL) hasShowCardResponse;
- (BOOL) hasCompareCardRequest;
- (BOOL) hasCompareCardResponse;
- (BOOL) hasChangeCardRequest;
- (BOOL) hasChangeCardResponse;
- (BOOL) hasTimeoutSettingRequest;
- (BOOL) hasTimeoutSettingResponse;
- (BOOL) hasStartOffset;
- (BOOL) hasMaxCount;
- (BOOL) hasTimeStamp;
- (BOOL) hasMac;
@property (readonly) GameCommandType command;
@property (readonly) SInt32 messageId;
@property (readonly) GameResultCode resultCode;
@property (readonly, strong) NSString* userId;
@property (readonly) SInt64 sessionId;
@property (readonly) SInt32 round;
@property (readonly) GameCompleteReason completeReason;
@property (readonly) SInt32 onlineUserCount;
@property (readonly, strong) NSString* toUserId;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) JoinGameRequest* joinGameRequest;
@property (readonly, strong) JoinGameResponse* joinGameResponse;
@property (readonly, strong) StartGameRequest* startGameRequest;
@property (readonly, strong) StartGameResponse* startGameResponse;
@property (readonly, strong) GameStartNotificationRequest* gameStartNotificationRequest;
@property (readonly, strong) GameStartNotificationResponse* gameStartNotificationResponse;
@property (readonly, strong) SendDrawDataRequest* sendDrawDataRequest;
@property (readonly, strong) SendDrawDataResponse* sendDrawDataResponse;
@property (readonly, strong) GameChatRequest* chatRequest;
@property (readonly, strong) GameChatResponse* chatResponse;
@property (readonly, strong) FacetimeChatRequest* facetimeChatRequest;
@property (readonly, strong) FacetimeChatResponse* facetimeChatResponse;
@property (readonly, strong) GeneralNotification* notification;
@property (readonly, strong) GetRoomsRequest* getRoomsRequest;
@property (readonly, strong) GetRoomsResponse* getRoomsResponse;
@property (readonly, strong) CreateRoomRequest* createRoomRequest;
@property (readonly, strong) CreateRoomResponse* createRoomResponse;
@property (readonly, strong) SearchRoomRequest* searchRoomRequest;
@property (readonly, strong) SearchRoomResponse* searchRoomResponse;
@property (readonly, strong) RoomNotificationRequest* roomNotificationRequest;
@property (readonly, strong) RollDiceEndNotificationRequest* rollDiceEndNotificationRequest;
@property (readonly, strong) CallDiceRequest* callDiceRequest;
@property (readonly, strong) CallDiceResponse* callDiceResponse;
@property (readonly, strong) OpenDiceRequest* openDiceRequest;
@property (readonly, strong) OpenDiceResponse* openDiceResponse;
@property (readonly, strong) GameOverNotificationRequest* gameOverNotificationRequest;
@property (readonly, strong) GameOverNotificationResponse* gameOverNotificationResponse;
@property (readonly, strong) RegisterRoomsNotificationRequest* registerRoomsNotificationRequest;
@property (readonly, strong) RegisterRoomsNotificationResponse* registerRoomsNotificationResponse;
@property (readonly, strong) UnRegisterRoomsNotificationRequest* unRegisterRoomsNotificationRequest;
@property (readonly, strong) UnRegisterRoomsNotificationResponse* unRegisterRoomsNotificationResponse;
@property (readonly, strong) UserDiceNotification* userDiceNotification;
@property (readonly, strong) BetDiceRequest* betDiceRequest;
@property (readonly, strong) BetDiceResponse* betDiceResponse;
@property (readonly, strong) UseItemRequest* useItemRequest;
@property (readonly, strong) UseItemResponse* useItemResponse;
@property (readonly, strong) BetRequest* betRequest;
@property (readonly, strong) BetResponse* betResponse;
@property (readonly, strong) CheckCardRequest* checkCardRequest;
@property (readonly, strong) CheckCardResponse* checkCardResponse;
@property (readonly, strong) FoldCardRequest* foldCardRequest;
@property (readonly, strong) FoldCardResponse* foldCardResponse;
@property (readonly, strong) ShowCardRequest* showCardRequest;
@property (readonly, strong) ShowCardResponse* showCardResponse;
@property (readonly, strong) CompareCardRequest* compareCardRequest;
@property (readonly, strong) CompareCardResponse* compareCardResponse;
@property (readonly, strong) ChangeCardRequest* changeCardRequest;
@property (readonly, strong) ChangeCardResponse* changeCardResponse;
@property (readonly, strong) TimeoutSettingRequest* timeoutSettingRequest;
@property (readonly, strong) TimeoutSettingResponse* timeoutSettingResponse;
@property (readonly) SInt32 startOffset;
@property (readonly) SInt32 maxCount;
@property (readonly) SInt32 timeStamp;
@property (readonly, strong) NSString* mac;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GameMessageBuilder*) builder;
+ (GameMessageBuilder*) builder;
+ (GameMessageBuilder*) builderWithPrototype:(GameMessage*) prototype;
- (GameMessageBuilder*) toBuilder;

+ (GameMessage*) parseFromData:(NSData*) data;
+ (GameMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameMessage*) parseFromInputStream:(NSInputStream*) input;
+ (GameMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GameMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GameMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GameMessageBuilder : PBGeneratedMessageBuilder {
@private
  GameMessage* resultGameMessage;
}

- (GameMessage*) defaultInstance;

- (GameMessageBuilder*) clear;
- (GameMessageBuilder*) clone;

- (GameMessage*) build;
- (GameMessage*) buildPartial;

- (GameMessageBuilder*) mergeFrom:(GameMessage*) other;
- (GameMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GameMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCommand;
- (GameCommandType) command;
- (GameMessageBuilder*) setCommand:(GameCommandType) value;
- (GameMessageBuilder*) clearCommand;

- (BOOL) hasMessageId;
- (SInt32) messageId;
- (GameMessageBuilder*) setMessageId:(SInt32) value;
- (GameMessageBuilder*) clearMessageId;

- (BOOL) hasResultCode;
- (GameResultCode) resultCode;
- (GameMessageBuilder*) setResultCode:(GameResultCode) value;
- (GameMessageBuilder*) clearResultCode;

- (BOOL) hasUserId;
- (NSString*) userId;
- (GameMessageBuilder*) setUserId:(NSString*) value;
- (GameMessageBuilder*) clearUserId;

- (BOOL) hasSessionId;
- (SInt64) sessionId;
- (GameMessageBuilder*) setSessionId:(SInt64) value;
- (GameMessageBuilder*) clearSessionId;

- (BOOL) hasRound;
- (SInt32) round;
- (GameMessageBuilder*) setRound:(SInt32) value;
- (GameMessageBuilder*) clearRound;

- (BOOL) hasCompleteReason;
- (GameCompleteReason) completeReason;
- (GameMessageBuilder*) setCompleteReason:(GameCompleteReason) value;
- (GameMessageBuilder*) clearCompleteReason;

- (BOOL) hasOnlineUserCount;
- (SInt32) onlineUserCount;
- (GameMessageBuilder*) setOnlineUserCount:(SInt32) value;
- (GameMessageBuilder*) clearOnlineUserCount;

- (BOOL) hasToUserId;
- (NSString*) toUserId;
- (GameMessageBuilder*) setToUserId:(NSString*) value;
- (GameMessageBuilder*) clearToUserId;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (GameMessageBuilder*) setCurrentPlayUserId:(NSString*) value;
- (GameMessageBuilder*) clearCurrentPlayUserId;

- (BOOL) hasJoinGameRequest;
- (JoinGameRequest*) joinGameRequest;
- (GameMessageBuilder*) setJoinGameRequest:(JoinGameRequest*) value;
- (GameMessageBuilder*) setJoinGameRequestBuilder:(JoinGameRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeJoinGameRequest:(JoinGameRequest*) value;
- (GameMessageBuilder*) clearJoinGameRequest;

- (BOOL) hasJoinGameResponse;
- (JoinGameResponse*) joinGameResponse;
- (GameMessageBuilder*) setJoinGameResponse:(JoinGameResponse*) value;
- (GameMessageBuilder*) setJoinGameResponseBuilder:(JoinGameResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeJoinGameResponse:(JoinGameResponse*) value;
- (GameMessageBuilder*) clearJoinGameResponse;

- (BOOL) hasStartGameRequest;
- (StartGameRequest*) startGameRequest;
- (GameMessageBuilder*) setStartGameRequest:(StartGameRequest*) value;
- (GameMessageBuilder*) setStartGameRequestBuilder:(StartGameRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeStartGameRequest:(StartGameRequest*) value;
- (GameMessageBuilder*) clearStartGameRequest;

- (BOOL) hasStartGameResponse;
- (StartGameResponse*) startGameResponse;
- (GameMessageBuilder*) setStartGameResponse:(StartGameResponse*) value;
- (GameMessageBuilder*) setStartGameResponseBuilder:(StartGameResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeStartGameResponse:(StartGameResponse*) value;
- (GameMessageBuilder*) clearStartGameResponse;

- (BOOL) hasGameStartNotificationRequest;
- (GameStartNotificationRequest*) gameStartNotificationRequest;
- (GameMessageBuilder*) setGameStartNotificationRequest:(GameStartNotificationRequest*) value;
- (GameMessageBuilder*) setGameStartNotificationRequestBuilder:(GameStartNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGameStartNotificationRequest:(GameStartNotificationRequest*) value;
- (GameMessageBuilder*) clearGameStartNotificationRequest;

- (BOOL) hasGameStartNotificationResponse;
- (GameStartNotificationResponse*) gameStartNotificationResponse;
- (GameMessageBuilder*) setGameStartNotificationResponse:(GameStartNotificationResponse*) value;
- (GameMessageBuilder*) setGameStartNotificationResponseBuilder:(GameStartNotificationResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGameStartNotificationResponse:(GameStartNotificationResponse*) value;
- (GameMessageBuilder*) clearGameStartNotificationResponse;

- (BOOL) hasSendDrawDataRequest;
- (SendDrawDataRequest*) sendDrawDataRequest;
- (GameMessageBuilder*) setSendDrawDataRequest:(SendDrawDataRequest*) value;
- (GameMessageBuilder*) setSendDrawDataRequestBuilder:(SendDrawDataRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeSendDrawDataRequest:(SendDrawDataRequest*) value;
- (GameMessageBuilder*) clearSendDrawDataRequest;

- (BOOL) hasSendDrawDataResponse;
- (SendDrawDataResponse*) sendDrawDataResponse;
- (GameMessageBuilder*) setSendDrawDataResponse:(SendDrawDataResponse*) value;
- (GameMessageBuilder*) setSendDrawDataResponseBuilder:(SendDrawDataResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeSendDrawDataResponse:(SendDrawDataResponse*) value;
- (GameMessageBuilder*) clearSendDrawDataResponse;

- (BOOL) hasChatRequest;
- (GameChatRequest*) chatRequest;
- (GameMessageBuilder*) setChatRequest:(GameChatRequest*) value;
- (GameMessageBuilder*) setChatRequestBuilder:(GameChatRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeChatRequest:(GameChatRequest*) value;
- (GameMessageBuilder*) clearChatRequest;

- (BOOL) hasChatResponse;
- (GameChatResponse*) chatResponse;
- (GameMessageBuilder*) setChatResponse:(GameChatResponse*) value;
- (GameMessageBuilder*) setChatResponseBuilder:(GameChatResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeChatResponse:(GameChatResponse*) value;
- (GameMessageBuilder*) clearChatResponse;

- (BOOL) hasFacetimeChatRequest;
- (FacetimeChatRequest*) facetimeChatRequest;
- (GameMessageBuilder*) setFacetimeChatRequest:(FacetimeChatRequest*) value;
- (GameMessageBuilder*) setFacetimeChatRequestBuilder:(FacetimeChatRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeFacetimeChatRequest:(FacetimeChatRequest*) value;
- (GameMessageBuilder*) clearFacetimeChatRequest;

- (BOOL) hasFacetimeChatResponse;
- (FacetimeChatResponse*) facetimeChatResponse;
- (GameMessageBuilder*) setFacetimeChatResponse:(FacetimeChatResponse*) value;
- (GameMessageBuilder*) setFacetimeChatResponseBuilder:(FacetimeChatResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeFacetimeChatResponse:(FacetimeChatResponse*) value;
- (GameMessageBuilder*) clearFacetimeChatResponse;

- (BOOL) hasNotification;
- (GeneralNotification*) notification;
- (GameMessageBuilder*) setNotification:(GeneralNotification*) value;
- (GameMessageBuilder*) setNotificationBuilder:(GeneralNotificationBuilder*) builderForValue;
- (GameMessageBuilder*) mergeNotification:(GeneralNotification*) value;
- (GameMessageBuilder*) clearNotification;

- (BOOL) hasGetRoomsRequest;
- (GetRoomsRequest*) getRoomsRequest;
- (GameMessageBuilder*) setGetRoomsRequest:(GetRoomsRequest*) value;
- (GameMessageBuilder*) setGetRoomsRequestBuilder:(GetRoomsRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGetRoomsRequest:(GetRoomsRequest*) value;
- (GameMessageBuilder*) clearGetRoomsRequest;

- (BOOL) hasGetRoomsResponse;
- (GetRoomsResponse*) getRoomsResponse;
- (GameMessageBuilder*) setGetRoomsResponse:(GetRoomsResponse*) value;
- (GameMessageBuilder*) setGetRoomsResponseBuilder:(GetRoomsResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGetRoomsResponse:(GetRoomsResponse*) value;
- (GameMessageBuilder*) clearGetRoomsResponse;

- (BOOL) hasCreateRoomRequest;
- (CreateRoomRequest*) createRoomRequest;
- (GameMessageBuilder*) setCreateRoomRequest:(CreateRoomRequest*) value;
- (GameMessageBuilder*) setCreateRoomRequestBuilder:(CreateRoomRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCreateRoomRequest:(CreateRoomRequest*) value;
- (GameMessageBuilder*) clearCreateRoomRequest;

- (BOOL) hasCreateRoomResponse;
- (CreateRoomResponse*) createRoomResponse;
- (GameMessageBuilder*) setCreateRoomResponse:(CreateRoomResponse*) value;
- (GameMessageBuilder*) setCreateRoomResponseBuilder:(CreateRoomResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCreateRoomResponse:(CreateRoomResponse*) value;
- (GameMessageBuilder*) clearCreateRoomResponse;

- (BOOL) hasSearchRoomRequest;
- (SearchRoomRequest*) searchRoomRequest;
- (GameMessageBuilder*) setSearchRoomRequest:(SearchRoomRequest*) value;
- (GameMessageBuilder*) setSearchRoomRequestBuilder:(SearchRoomRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeSearchRoomRequest:(SearchRoomRequest*) value;
- (GameMessageBuilder*) clearSearchRoomRequest;

- (BOOL) hasSearchRoomResponse;
- (SearchRoomResponse*) searchRoomResponse;
- (GameMessageBuilder*) setSearchRoomResponse:(SearchRoomResponse*) value;
- (GameMessageBuilder*) setSearchRoomResponseBuilder:(SearchRoomResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeSearchRoomResponse:(SearchRoomResponse*) value;
- (GameMessageBuilder*) clearSearchRoomResponse;

- (BOOL) hasRoomNotificationRequest;
- (RoomNotificationRequest*) roomNotificationRequest;
- (GameMessageBuilder*) setRoomNotificationRequest:(RoomNotificationRequest*) value;
- (GameMessageBuilder*) setRoomNotificationRequestBuilder:(RoomNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeRoomNotificationRequest:(RoomNotificationRequest*) value;
- (GameMessageBuilder*) clearRoomNotificationRequest;

- (BOOL) hasRollDiceEndNotificationRequest;
- (RollDiceEndNotificationRequest*) rollDiceEndNotificationRequest;
- (GameMessageBuilder*) setRollDiceEndNotificationRequest:(RollDiceEndNotificationRequest*) value;
- (GameMessageBuilder*) setRollDiceEndNotificationRequestBuilder:(RollDiceEndNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeRollDiceEndNotificationRequest:(RollDiceEndNotificationRequest*) value;
- (GameMessageBuilder*) clearRollDiceEndNotificationRequest;

- (BOOL) hasCallDiceRequest;
- (CallDiceRequest*) callDiceRequest;
- (GameMessageBuilder*) setCallDiceRequest:(CallDiceRequest*) value;
- (GameMessageBuilder*) setCallDiceRequestBuilder:(CallDiceRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCallDiceRequest:(CallDiceRequest*) value;
- (GameMessageBuilder*) clearCallDiceRequest;

- (BOOL) hasCallDiceResponse;
- (CallDiceResponse*) callDiceResponse;
- (GameMessageBuilder*) setCallDiceResponse:(CallDiceResponse*) value;
- (GameMessageBuilder*) setCallDiceResponseBuilder:(CallDiceResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCallDiceResponse:(CallDiceResponse*) value;
- (GameMessageBuilder*) clearCallDiceResponse;

- (BOOL) hasOpenDiceRequest;
- (OpenDiceRequest*) openDiceRequest;
- (GameMessageBuilder*) setOpenDiceRequest:(OpenDiceRequest*) value;
- (GameMessageBuilder*) setOpenDiceRequestBuilder:(OpenDiceRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeOpenDiceRequest:(OpenDiceRequest*) value;
- (GameMessageBuilder*) clearOpenDiceRequest;

- (BOOL) hasOpenDiceResponse;
- (OpenDiceResponse*) openDiceResponse;
- (GameMessageBuilder*) setOpenDiceResponse:(OpenDiceResponse*) value;
- (GameMessageBuilder*) setOpenDiceResponseBuilder:(OpenDiceResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeOpenDiceResponse:(OpenDiceResponse*) value;
- (GameMessageBuilder*) clearOpenDiceResponse;

- (BOOL) hasGameOverNotificationRequest;
- (GameOverNotificationRequest*) gameOverNotificationRequest;
- (GameMessageBuilder*) setGameOverNotificationRequest:(GameOverNotificationRequest*) value;
- (GameMessageBuilder*) setGameOverNotificationRequestBuilder:(GameOverNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGameOverNotificationRequest:(GameOverNotificationRequest*) value;
- (GameMessageBuilder*) clearGameOverNotificationRequest;

- (BOOL) hasGameOverNotificationResponse;
- (GameOverNotificationResponse*) gameOverNotificationResponse;
- (GameMessageBuilder*) setGameOverNotificationResponse:(GameOverNotificationResponse*) value;
- (GameMessageBuilder*) setGameOverNotificationResponseBuilder:(GameOverNotificationResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeGameOverNotificationResponse:(GameOverNotificationResponse*) value;
- (GameMessageBuilder*) clearGameOverNotificationResponse;

- (BOOL) hasRegisterRoomsNotificationRequest;
- (RegisterRoomsNotificationRequest*) registerRoomsNotificationRequest;
- (GameMessageBuilder*) setRegisterRoomsNotificationRequest:(RegisterRoomsNotificationRequest*) value;
- (GameMessageBuilder*) setRegisterRoomsNotificationRequestBuilder:(RegisterRoomsNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeRegisterRoomsNotificationRequest:(RegisterRoomsNotificationRequest*) value;
- (GameMessageBuilder*) clearRegisterRoomsNotificationRequest;

- (BOOL) hasRegisterRoomsNotificationResponse;
- (RegisterRoomsNotificationResponse*) registerRoomsNotificationResponse;
- (GameMessageBuilder*) setRegisterRoomsNotificationResponse:(RegisterRoomsNotificationResponse*) value;
- (GameMessageBuilder*) setRegisterRoomsNotificationResponseBuilder:(RegisterRoomsNotificationResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeRegisterRoomsNotificationResponse:(RegisterRoomsNotificationResponse*) value;
- (GameMessageBuilder*) clearRegisterRoomsNotificationResponse;

- (BOOL) hasUnRegisterRoomsNotificationRequest;
- (UnRegisterRoomsNotificationRequest*) unRegisterRoomsNotificationRequest;
- (GameMessageBuilder*) setUnRegisterRoomsNotificationRequest:(UnRegisterRoomsNotificationRequest*) value;
- (GameMessageBuilder*) setUnRegisterRoomsNotificationRequestBuilder:(UnRegisterRoomsNotificationRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeUnRegisterRoomsNotificationRequest:(UnRegisterRoomsNotificationRequest*) value;
- (GameMessageBuilder*) clearUnRegisterRoomsNotificationRequest;

- (BOOL) hasUnRegisterRoomsNotificationResponse;
- (UnRegisterRoomsNotificationResponse*) unRegisterRoomsNotificationResponse;
- (GameMessageBuilder*) setUnRegisterRoomsNotificationResponse:(UnRegisterRoomsNotificationResponse*) value;
- (GameMessageBuilder*) setUnRegisterRoomsNotificationResponseBuilder:(UnRegisterRoomsNotificationResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeUnRegisterRoomsNotificationResponse:(UnRegisterRoomsNotificationResponse*) value;
- (GameMessageBuilder*) clearUnRegisterRoomsNotificationResponse;

- (BOOL) hasUserDiceNotification;
- (UserDiceNotification*) userDiceNotification;
- (GameMessageBuilder*) setUserDiceNotification:(UserDiceNotification*) value;
- (GameMessageBuilder*) setUserDiceNotificationBuilder:(UserDiceNotificationBuilder*) builderForValue;
- (GameMessageBuilder*) mergeUserDiceNotification:(UserDiceNotification*) value;
- (GameMessageBuilder*) clearUserDiceNotification;

- (BOOL) hasBetDiceRequest;
- (BetDiceRequest*) betDiceRequest;
- (GameMessageBuilder*) setBetDiceRequest:(BetDiceRequest*) value;
- (GameMessageBuilder*) setBetDiceRequestBuilder:(BetDiceRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeBetDiceRequest:(BetDiceRequest*) value;
- (GameMessageBuilder*) clearBetDiceRequest;

- (BOOL) hasBetDiceResponse;
- (BetDiceResponse*) betDiceResponse;
- (GameMessageBuilder*) setBetDiceResponse:(BetDiceResponse*) value;
- (GameMessageBuilder*) setBetDiceResponseBuilder:(BetDiceResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeBetDiceResponse:(BetDiceResponse*) value;
- (GameMessageBuilder*) clearBetDiceResponse;

- (BOOL) hasUseItemRequest;
- (UseItemRequest*) useItemRequest;
- (GameMessageBuilder*) setUseItemRequest:(UseItemRequest*) value;
- (GameMessageBuilder*) setUseItemRequestBuilder:(UseItemRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeUseItemRequest:(UseItemRequest*) value;
- (GameMessageBuilder*) clearUseItemRequest;

- (BOOL) hasUseItemResponse;
- (UseItemResponse*) useItemResponse;
- (GameMessageBuilder*) setUseItemResponse:(UseItemResponse*) value;
- (GameMessageBuilder*) setUseItemResponseBuilder:(UseItemResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeUseItemResponse:(UseItemResponse*) value;
- (GameMessageBuilder*) clearUseItemResponse;

- (BOOL) hasBetRequest;
- (BetRequest*) betRequest;
- (GameMessageBuilder*) setBetRequest:(BetRequest*) value;
- (GameMessageBuilder*) setBetRequestBuilder:(BetRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeBetRequest:(BetRequest*) value;
- (GameMessageBuilder*) clearBetRequest;

- (BOOL) hasBetResponse;
- (BetResponse*) betResponse;
- (GameMessageBuilder*) setBetResponse:(BetResponse*) value;
- (GameMessageBuilder*) setBetResponseBuilder:(BetResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeBetResponse:(BetResponse*) value;
- (GameMessageBuilder*) clearBetResponse;

- (BOOL) hasCheckCardRequest;
- (CheckCardRequest*) checkCardRequest;
- (GameMessageBuilder*) setCheckCardRequest:(CheckCardRequest*) value;
- (GameMessageBuilder*) setCheckCardRequestBuilder:(CheckCardRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCheckCardRequest:(CheckCardRequest*) value;
- (GameMessageBuilder*) clearCheckCardRequest;

- (BOOL) hasCheckCardResponse;
- (CheckCardResponse*) checkCardResponse;
- (GameMessageBuilder*) setCheckCardResponse:(CheckCardResponse*) value;
- (GameMessageBuilder*) setCheckCardResponseBuilder:(CheckCardResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCheckCardResponse:(CheckCardResponse*) value;
- (GameMessageBuilder*) clearCheckCardResponse;

- (BOOL) hasFoldCardRequest;
- (FoldCardRequest*) foldCardRequest;
- (GameMessageBuilder*) setFoldCardRequest:(FoldCardRequest*) value;
- (GameMessageBuilder*) setFoldCardRequestBuilder:(FoldCardRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeFoldCardRequest:(FoldCardRequest*) value;
- (GameMessageBuilder*) clearFoldCardRequest;

- (BOOL) hasFoldCardResponse;
- (FoldCardResponse*) foldCardResponse;
- (GameMessageBuilder*) setFoldCardResponse:(FoldCardResponse*) value;
- (GameMessageBuilder*) setFoldCardResponseBuilder:(FoldCardResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeFoldCardResponse:(FoldCardResponse*) value;
- (GameMessageBuilder*) clearFoldCardResponse;

- (BOOL) hasShowCardRequest;
- (ShowCardRequest*) showCardRequest;
- (GameMessageBuilder*) setShowCardRequest:(ShowCardRequest*) value;
- (GameMessageBuilder*) setShowCardRequestBuilder:(ShowCardRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeShowCardRequest:(ShowCardRequest*) value;
- (GameMessageBuilder*) clearShowCardRequest;

- (BOOL) hasShowCardResponse;
- (ShowCardResponse*) showCardResponse;
- (GameMessageBuilder*) setShowCardResponse:(ShowCardResponse*) value;
- (GameMessageBuilder*) setShowCardResponseBuilder:(ShowCardResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeShowCardResponse:(ShowCardResponse*) value;
- (GameMessageBuilder*) clearShowCardResponse;

- (BOOL) hasCompareCardRequest;
- (CompareCardRequest*) compareCardRequest;
- (GameMessageBuilder*) setCompareCardRequest:(CompareCardRequest*) value;
- (GameMessageBuilder*) setCompareCardRequestBuilder:(CompareCardRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCompareCardRequest:(CompareCardRequest*) value;
- (GameMessageBuilder*) clearCompareCardRequest;

- (BOOL) hasCompareCardResponse;
- (CompareCardResponse*) compareCardResponse;
- (GameMessageBuilder*) setCompareCardResponse:(CompareCardResponse*) value;
- (GameMessageBuilder*) setCompareCardResponseBuilder:(CompareCardResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeCompareCardResponse:(CompareCardResponse*) value;
- (GameMessageBuilder*) clearCompareCardResponse;

- (BOOL) hasChangeCardRequest;
- (ChangeCardRequest*) changeCardRequest;
- (GameMessageBuilder*) setChangeCardRequest:(ChangeCardRequest*) value;
- (GameMessageBuilder*) setChangeCardRequestBuilder:(ChangeCardRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeChangeCardRequest:(ChangeCardRequest*) value;
- (GameMessageBuilder*) clearChangeCardRequest;

- (BOOL) hasChangeCardResponse;
- (ChangeCardResponse*) changeCardResponse;
- (GameMessageBuilder*) setChangeCardResponse:(ChangeCardResponse*) value;
- (GameMessageBuilder*) setChangeCardResponseBuilder:(ChangeCardResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeChangeCardResponse:(ChangeCardResponse*) value;
- (GameMessageBuilder*) clearChangeCardResponse;

- (BOOL) hasTimeoutSettingRequest;
- (TimeoutSettingRequest*) timeoutSettingRequest;
- (GameMessageBuilder*) setTimeoutSettingRequest:(TimeoutSettingRequest*) value;
- (GameMessageBuilder*) setTimeoutSettingRequestBuilder:(TimeoutSettingRequestBuilder*) builderForValue;
- (GameMessageBuilder*) mergeTimeoutSettingRequest:(TimeoutSettingRequest*) value;
- (GameMessageBuilder*) clearTimeoutSettingRequest;

- (BOOL) hasTimeoutSettingResponse;
- (TimeoutSettingResponse*) timeoutSettingResponse;
- (GameMessageBuilder*) setTimeoutSettingResponse:(TimeoutSettingResponse*) value;
- (GameMessageBuilder*) setTimeoutSettingResponseBuilder:(TimeoutSettingResponseBuilder*) builderForValue;
- (GameMessageBuilder*) mergeTimeoutSettingResponse:(TimeoutSettingResponse*) value;
- (GameMessageBuilder*) clearTimeoutSettingResponse;

- (BOOL) hasStartOffset;
- (SInt32) startOffset;
- (GameMessageBuilder*) setStartOffset:(SInt32) value;
- (GameMessageBuilder*) clearStartOffset;

- (BOOL) hasMaxCount;
- (SInt32) maxCount;
- (GameMessageBuilder*) setMaxCount:(SInt32) value;
- (GameMessageBuilder*) clearMaxCount;

- (BOOL) hasTimeStamp;
- (SInt32) timeStamp;
- (GameMessageBuilder*) setTimeStamp:(SInt32) value;
- (GameMessageBuilder*) clearTimeStamp;

- (BOOL) hasMac;
- (NSString*) mac;
- (GameMessageBuilder*) setMac:(NSString*) value;
- (GameMessageBuilder*) clearMac;
@end

@interface DataQueryResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasResultCode_:1;
  BOOL hasTotalCount_:1;
  BOOL hasVersion_:1;
  BOOL hasUserRelation_:1;
  BOOL hasUrl_:1;
  BOOL hasUserTutorial_:1;
  BOOL hasGroup_:1;
  BOOL hasGuessContest_:1;
  BOOL hasGuessRank_:1;
  BOOL hasContest_:1;
  BOOL hasSongs_:1;
  BOOL hasOpus_:1;
  BOOL hasBbsDrawData_:1;
  BOOL hasUser_:1;
  BOOL hasUserPhoto_:1;
  BOOL hasWall_:1;
  SInt32 resultCode;
  SInt32 totalCount;
  SInt32 version;
  SInt32 userRelation;
  NSString* url;
  PBUserTutorial* userTutorial;
  PBGroup* group;
  PBGuessContest* guessContest;
  PBGuessRank* guessRank;
  PBContest* contest;
  PBSongList* songs;
  PBOpus* opus;
  PBBBSDraw* bbsDrawData;
  PBGameUser* user;
  PBUserPhoto* userPhoto;
  PBWall* wall;
  NSMutableArray * idListArray;
  NSMutableArray * wallListArray;
  NSMutableArray * userPhotoListArray;
  NSMutableArray * userListArray;
  NSMutableArray * bbsUserListArray;
  NSMutableArray * bbsPrivilegeListArray;
  NSMutableArray * bbsActionArray;
  NSMutableArray * opusListArray;
  NSMutableArray * bbsPostArray;
  NSMutableArray * bbsBoardArray;
  NSMutableArray * contestListArray;
  NSMutableArray * guessRankListArray;
  NSMutableArray * feedArray;
  NSMutableArray * guessContestListArray;
  NSMutableArray * messageStatArray;
  NSMutableArray * groupListArray;
  NSMutableArray * groupMemberListArray;
  NSMutableArray * noticeListArray;
  NSMutableArray * badgesArray;
  NSMutableArray * messageArray;
  NSMutableArray * groupRoleArray;
  NSMutableArray * drawDataArray;
  NSMutableArray * userTutorialsArray;
}
- (BOOL) hasResultCode;
- (BOOL) hasTotalCount;
- (BOOL) hasVersion;
- (BOOL) hasContest;
- (BOOL) hasBbsDrawData;
- (BOOL) hasWall;
- (BOOL) hasUserPhoto;
- (BOOL) hasUser;
- (BOOL) hasUserRelation;
- (BOOL) hasOpus;
- (BOOL) hasSongs;
- (BOOL) hasGuessRank;
- (BOOL) hasGuessContest;
- (BOOL) hasGroup;
- (BOOL) hasUrl;
- (BOOL) hasUserTutorial;
@property (readonly) SInt32 resultCode;
@property (readonly) SInt32 totalCount;
@property (readonly) SInt32 version;
@property (readonly, strong) NSArray * drawData;
@property (readonly, strong) NSArray * message;
@property (readonly, strong) NSArray * messageStat;
@property (readonly, strong) NSArray * feed;
@property (readonly, strong) NSArray * contestList;
@property (readonly, strong) PBContest* contest;
@property (readonly, strong) NSArray * bbsBoard;
@property (readonly, strong) NSArray * bbsPost;
@property (readonly, strong) NSArray * bbsAction;
@property (readonly, strong) PBBBSDraw* bbsDrawData;
@property (readonly, strong) NSArray * bbsPrivilegeList;
@property (readonly, strong) NSArray * bbsUserList;
@property (readonly, strong) NSArray * wallList;
@property (readonly, strong) PBWall* wall;
@property (readonly, strong) PBUserPhoto* userPhoto;
@property (readonly, strong) NSArray * userPhotoList;
@property (readonly, strong) NSArray * userList;
@property (readonly, strong) PBGameUser* user;
@property (readonly) SInt32 userRelation;
@property (readonly, strong) PBOpus* opus;
@property (readonly, strong) NSArray * opusList;
@property (readonly, strong) NSArray * idList;
@property (readonly, strong) PBSongList* songs;
@property (readonly, strong) PBGuessRank* guessRank;
@property (readonly, strong) NSArray * guessRankList;
@property (readonly, strong) PBGuessContest* guessContest;
@property (readonly, strong) NSArray * guessContestList;
@property (readonly, strong) PBGroup* group;
@property (readonly, strong) NSArray * groupList;
@property (readonly, strong) NSArray * groupMemberList;
@property (readonly, strong) NSArray * noticeList;
@property (readonly, strong) NSArray * badges;
@property (readonly, strong) NSString* url;
@property (readonly, strong) NSArray * groupRole;
@property (readonly, strong) PBUserTutorial* userTutorial;
@property (readonly, strong) NSArray * userTutorials;
- (PBDraw*)drawDataAtIndex:(NSUInteger)index;
- (PBMessage*)messageAtIndex:(NSUInteger)index;
- (PBMessageStat*)messageStatAtIndex:(NSUInteger)index;
- (PBFeed*)feedAtIndex:(NSUInteger)index;
- (PBContest*)contestListAtIndex:(NSUInteger)index;
- (PBBBSBoard*)bbsBoardAtIndex:(NSUInteger)index;
- (PBBBSPost*)bbsPostAtIndex:(NSUInteger)index;
- (PBBBSAction*)bbsActionAtIndex:(NSUInteger)index;
- (PBBBSPrivilege*)bbsPrivilegeListAtIndex:(NSUInteger)index;
- (PBBBSUser*)bbsUserListAtIndex:(NSUInteger)index;
- (PBWall*)wallListAtIndex:(NSUInteger)index;
- (PBUserPhoto*)userPhotoListAtIndex:(NSUInteger)index;
- (PBGameUser*)userListAtIndex:(NSUInteger)index;
- (PBOpus*)opusListAtIndex:(NSUInteger)index;
- (NSString*)idListAtIndex:(NSUInteger)index;
- (PBGuessRank*)guessRankListAtIndex:(NSUInteger)index;
- (PBGuessContest*)guessContestListAtIndex:(NSUInteger)index;
- (PBGroup*)groupListAtIndex:(NSUInteger)index;
- (PBGroupUsersByTitle*)groupMemberListAtIndex:(NSUInteger)index;
- (PBGroupNotice*)noticeListAtIndex:(NSUInteger)index;
- (PBIntKeyIntValue*)badgesAtIndex:(NSUInteger)index;
- (PBGroupUserRole*)groupRoleAtIndex:(NSUInteger)index;
- (PBUserTutorial*)userTutorialsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DataQueryResponseBuilder*) builder;
+ (DataQueryResponseBuilder*) builder;
+ (DataQueryResponseBuilder*) builderWithPrototype:(DataQueryResponse*) prototype;
- (DataQueryResponseBuilder*) toBuilder;

+ (DataQueryResponse*) parseFromData:(NSData*) data;
+ (DataQueryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataQueryResponse*) parseFromInputStream:(NSInputStream*) input;
+ (DataQueryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataQueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DataQueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DataQueryResponseBuilder : PBGeneratedMessageBuilder {
@private
  DataQueryResponse* resultDataQueryResponse;
}

- (DataQueryResponse*) defaultInstance;

- (DataQueryResponseBuilder*) clear;
- (DataQueryResponseBuilder*) clone;

- (DataQueryResponse*) build;
- (DataQueryResponse*) buildPartial;

- (DataQueryResponseBuilder*) mergeFrom:(DataQueryResponse*) other;
- (DataQueryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DataQueryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResultCode;
- (SInt32) resultCode;
- (DataQueryResponseBuilder*) setResultCode:(SInt32) value;
- (DataQueryResponseBuilder*) clearResultCode;

- (BOOL) hasTotalCount;
- (SInt32) totalCount;
- (DataQueryResponseBuilder*) setTotalCount:(SInt32) value;
- (DataQueryResponseBuilder*) clearTotalCount;

- (BOOL) hasVersion;
- (SInt32) version;
- (DataQueryResponseBuilder*) setVersion:(SInt32) value;
- (DataQueryResponseBuilder*) clearVersion;

- (NSMutableArray *)drawData;
- (PBDraw*)drawDataAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addDrawData:(PBDraw*)value;
- (DataQueryResponseBuilder *)setDrawDataArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearDrawData;

- (NSMutableArray *)message;
- (PBMessage*)messageAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addMessage:(PBMessage*)value;
- (DataQueryResponseBuilder *)setMessageArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearMessage;

- (NSMutableArray *)messageStat;
- (PBMessageStat*)messageStatAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addMessageStat:(PBMessageStat*)value;
- (DataQueryResponseBuilder *)setMessageStatArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearMessageStat;

- (NSMutableArray *)feed;
- (PBFeed*)feedAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addFeed:(PBFeed*)value;
- (DataQueryResponseBuilder *)setFeedArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearFeed;

- (NSMutableArray *)contestList;
- (PBContest*)contestListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addContestList:(PBContest*)value;
- (DataQueryResponseBuilder *)setContestListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearContestList;

- (BOOL) hasContest;
- (PBContest*) contest;
- (DataQueryResponseBuilder*) setContest:(PBContest*) value;
- (DataQueryResponseBuilder*) setContestBuilder:(PBContestBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeContest:(PBContest*) value;
- (DataQueryResponseBuilder*) clearContest;

- (NSMutableArray *)bbsBoard;
- (PBBBSBoard*)bbsBoardAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBbsBoard:(PBBBSBoard*)value;
- (DataQueryResponseBuilder *)setBbsBoardArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBbsBoard;

- (NSMutableArray *)bbsPost;
- (PBBBSPost*)bbsPostAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBbsPost:(PBBBSPost*)value;
- (DataQueryResponseBuilder *)setBbsPostArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBbsPost;

- (NSMutableArray *)bbsAction;
- (PBBBSAction*)bbsActionAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBbsAction:(PBBBSAction*)value;
- (DataQueryResponseBuilder *)setBbsActionArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBbsAction;

- (BOOL) hasBbsDrawData;
- (PBBBSDraw*) bbsDrawData;
- (DataQueryResponseBuilder*) setBbsDrawData:(PBBBSDraw*) value;
- (DataQueryResponseBuilder*) setBbsDrawDataBuilder:(PBBBSDrawBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeBbsDrawData:(PBBBSDraw*) value;
- (DataQueryResponseBuilder*) clearBbsDrawData;

- (NSMutableArray *)bbsPrivilegeList;
- (PBBBSPrivilege*)bbsPrivilegeListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBbsPrivilegeList:(PBBBSPrivilege*)value;
- (DataQueryResponseBuilder *)setBbsPrivilegeListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBbsPrivilegeList;

- (NSMutableArray *)bbsUserList;
- (PBBBSUser*)bbsUserListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBbsUserList:(PBBBSUser*)value;
- (DataQueryResponseBuilder *)setBbsUserListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBbsUserList;

- (NSMutableArray *)wallList;
- (PBWall*)wallListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addWallList:(PBWall*)value;
- (DataQueryResponseBuilder *)setWallListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearWallList;

- (BOOL) hasWall;
- (PBWall*) wall;
- (DataQueryResponseBuilder*) setWall:(PBWall*) value;
- (DataQueryResponseBuilder*) setWallBuilder:(PBWallBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeWall:(PBWall*) value;
- (DataQueryResponseBuilder*) clearWall;

- (BOOL) hasUserPhoto;
- (PBUserPhoto*) userPhoto;
- (DataQueryResponseBuilder*) setUserPhoto:(PBUserPhoto*) value;
- (DataQueryResponseBuilder*) setUserPhotoBuilder:(PBUserPhotoBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeUserPhoto:(PBUserPhoto*) value;
- (DataQueryResponseBuilder*) clearUserPhoto;

- (NSMutableArray *)userPhotoList;
- (PBUserPhoto*)userPhotoListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addUserPhotoList:(PBUserPhoto*)value;
- (DataQueryResponseBuilder *)setUserPhotoListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearUserPhotoList;

- (NSMutableArray *)userList;
- (PBGameUser*)userListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addUserList:(PBGameUser*)value;
- (DataQueryResponseBuilder *)setUserListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearUserList;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (DataQueryResponseBuilder*) setUser:(PBGameUser*) value;
- (DataQueryResponseBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeUser:(PBGameUser*) value;
- (DataQueryResponseBuilder*) clearUser;

- (BOOL) hasUserRelation;
- (SInt32) userRelation;
- (DataQueryResponseBuilder*) setUserRelation:(SInt32) value;
- (DataQueryResponseBuilder*) clearUserRelation;

- (BOOL) hasOpus;
- (PBOpus*) opus;
- (DataQueryResponseBuilder*) setOpus:(PBOpus*) value;
- (DataQueryResponseBuilder*) setOpusBuilder:(PBOpusBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeOpus:(PBOpus*) value;
- (DataQueryResponseBuilder*) clearOpus;

- (NSMutableArray *)opusList;
- (PBOpus*)opusListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addOpusList:(PBOpus*)value;
- (DataQueryResponseBuilder *)setOpusListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearOpusList;

- (NSMutableArray *)idList;
- (NSString*)idListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addIdList:(NSString*)value;
- (DataQueryResponseBuilder *)setIdListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearIdList;

- (BOOL) hasSongs;
- (PBSongList*) songs;
- (DataQueryResponseBuilder*) setSongs:(PBSongList*) value;
- (DataQueryResponseBuilder*) setSongsBuilder:(PBSongListBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeSongs:(PBSongList*) value;
- (DataQueryResponseBuilder*) clearSongs;

- (BOOL) hasGuessRank;
- (PBGuessRank*) guessRank;
- (DataQueryResponseBuilder*) setGuessRank:(PBGuessRank*) value;
- (DataQueryResponseBuilder*) setGuessRankBuilder:(PBGuessRankBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeGuessRank:(PBGuessRank*) value;
- (DataQueryResponseBuilder*) clearGuessRank;

- (NSMutableArray *)guessRankList;
- (PBGuessRank*)guessRankListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addGuessRankList:(PBGuessRank*)value;
- (DataQueryResponseBuilder *)setGuessRankListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearGuessRankList;

- (BOOL) hasGuessContest;
- (PBGuessContest*) guessContest;
- (DataQueryResponseBuilder*) setGuessContest:(PBGuessContest*) value;
- (DataQueryResponseBuilder*) setGuessContestBuilder:(PBGuessContestBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeGuessContest:(PBGuessContest*) value;
- (DataQueryResponseBuilder*) clearGuessContest;

- (NSMutableArray *)guessContestList;
- (PBGuessContest*)guessContestListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addGuessContestList:(PBGuessContest*)value;
- (DataQueryResponseBuilder *)setGuessContestListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearGuessContestList;

- (BOOL) hasGroup;
- (PBGroup*) group;
- (DataQueryResponseBuilder*) setGroup:(PBGroup*) value;
- (DataQueryResponseBuilder*) setGroupBuilder:(PBGroupBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeGroup:(PBGroup*) value;
- (DataQueryResponseBuilder*) clearGroup;

- (NSMutableArray *)groupList;
- (PBGroup*)groupListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addGroupList:(PBGroup*)value;
- (DataQueryResponseBuilder *)setGroupListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearGroupList;

- (NSMutableArray *)groupMemberList;
- (PBGroupUsersByTitle*)groupMemberListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addGroupMemberList:(PBGroupUsersByTitle*)value;
- (DataQueryResponseBuilder *)setGroupMemberListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearGroupMemberList;

- (NSMutableArray *)noticeList;
- (PBGroupNotice*)noticeListAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addNoticeList:(PBGroupNotice*)value;
- (DataQueryResponseBuilder *)setNoticeListArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearNoticeList;

- (NSMutableArray *)badges;
- (PBIntKeyIntValue*)badgesAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addBadges:(PBIntKeyIntValue*)value;
- (DataQueryResponseBuilder *)setBadgesArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearBadges;

- (BOOL) hasUrl;
- (NSString*) url;
- (DataQueryResponseBuilder*) setUrl:(NSString*) value;
- (DataQueryResponseBuilder*) clearUrl;

- (NSMutableArray *)groupRole;
- (PBGroupUserRole*)groupRoleAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addGroupRole:(PBGroupUserRole*)value;
- (DataQueryResponseBuilder *)setGroupRoleArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearGroupRole;

- (BOOL) hasUserTutorial;
- (PBUserTutorial*) userTutorial;
- (DataQueryResponseBuilder*) setUserTutorial:(PBUserTutorial*) value;
- (DataQueryResponseBuilder*) setUserTutorialBuilder:(PBUserTutorialBuilder*) builderForValue;
- (DataQueryResponseBuilder*) mergeUserTutorial:(PBUserTutorial*) value;
- (DataQueryResponseBuilder*) clearUserTutorial;

- (NSMutableArray *)userTutorials;
- (PBUserTutorial*)userTutorialsAtIndex:(NSUInteger)index;
- (DataQueryResponseBuilder *)addUserTutorials:(PBUserTutorial*)value;
- (DataQueryResponseBuilder *)setUserTutorialsArray:(NSArray *)array;
- (DataQueryResponseBuilder *)clearUserTutorials;
@end


// @@protoc_insertion_point(global_scope)
