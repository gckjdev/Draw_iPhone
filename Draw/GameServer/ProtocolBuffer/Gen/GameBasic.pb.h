// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameConstants.pb.h"
// @@protoc_insertion_point(imports)

@class PBApp;
@class PBAppBuilder;
@class PBClass;
@class PBClassBuilder;
@class PBDrawAction;
@class PBDrawActionBuilder;
@class PBDrawBg;
@class PBDrawBgBuilder;
@class PBGameItem;
@class PBGameItemBuilder;
@class PBGameItemList;
@class PBGameItemListBuilder;
@class PBGameSession;
@class PBGameSessionBuilder;
@class PBGameSessionChanged;
@class PBGameSessionChangedBuilder;
@class PBGameUser;
@class PBGameUserBuilder;
@class PBGradient;
@class PBGradientBuilder;
@class PBIAPProduct;
@class PBIAPProductBuilder;
@class PBIAPProductList;
@class PBIAPProductListBuilder;
@class PBIAPProductPrice;
@class PBIAPProductPriceBuilder;
@class PBIntKeyIntValue;
@class PBIntKeyIntValueBuilder;
@class PBIntKeyValue;
@class PBIntKeyValueBuilder;
@class PBItemPriceInfo;
@class PBItemPriceInfoBuilder;
@class PBKeyValue;
@class PBKeyValueBuilder;
@class PBLayer;
@class PBLayerBuilder;
@class PBLocalizeString;
@class PBLocalizeStringBuilder;
@class PBMessage;
@class PBMessageBuilder;
@class PBMessageStat;
@class PBMessageStatBuilder;
@class PBOpusRank;
@class PBOpusRankBuilder;
@class PBPromotionInfo;
@class PBPromotionInfoBuilder;
@class PBSNSUser;
@class PBSNSUserBuilder;
@class PBSNSUserCredential;
@class PBSNSUserCredentialBuilder;
@class PBSimpleGroup;
@class PBSimpleGroupBuilder;
@class PBSize;
@class PBSizeBuilder;
@class PBTask;
@class PBTaskBuilder;
@class PBUserAward;
@class PBUserAwardBuilder;
@class PBUserBasicInfo;
@class PBUserBasicInfoBuilder;
@class PBUserItem;
@class PBUserItemBuilder;
@class PBUserItemList;
@class PBUserItemListBuilder;
@class PBUserLevel;
@class PBUserLevelBuilder;
@class PBUserResult;
@class PBUserResultBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PBOpenInfoType) {
  PBOpenInfoTypeOpenToFriend = 0,
  PBOpenInfoTypeOpenNo = 1,
  PBOpenInfoTypeOpenAll = 2,
};

BOOL PBOpenInfoTypeIsValidValue(PBOpenInfoType value);
NSString *NSStringFromPBOpenInfoType(PBOpenInfoType value);

typedef NS_ENUM(SInt32, PBDrawBgType) {
  PBDrawBgTypeDrawBgItem = 0,
  PBDrawBgTypeDrawBgNormalDraw = 1,
};

BOOL PBDrawBgTypeIsValidValue(PBDrawBgType value);
NSString *NSStringFromPBDrawBgType(PBDrawBgType value);

typedef NS_ENUM(SInt32, PBDrawBgPurpose) {
  PBDrawBgPurposeDrawBgPurposeLearnDraw = 1,
  PBDrawBgPurposeDrawBgPurposeNormalDraw = 2,
};

BOOL PBDrawBgPurposeIsValidValue(PBDrawBgPurpose value);
NSString *NSStringFromPBDrawBgPurpose(PBDrawBgPurpose value);

typedef NS_ENUM(SInt32, PBDrawBgLayerType) {
  PBDrawBgLayerTypeDrawBgLayerBackground = 0,
  PBDrawBgLayerTypeDrawBgLayerForeground = 1,
};

BOOL PBDrawBgLayerTypeIsValidValue(PBDrawBgLayerType value);
NSString *NSStringFromPBDrawBgLayerType(PBDrawBgLayerType value);

typedef NS_ENUM(SInt32, PBGameCurrency) {
  PBGameCurrencyCoin = 0,
  PBGameCurrencyIngot = 1,
};

BOOL PBGameCurrencyIsValidValue(PBGameCurrency value);
NSString *NSStringFromPBGameCurrency(PBGameCurrency value);

typedef NS_ENUM(SInt32, PBDrawItemType) {
  PBDrawItemTypeDrawNomal = 0,
  PBDrawItemTypeDrawTool = 1,
  PBDrawItemTypeDrawTaoBao = 9999,
};

BOOL PBDrawItemTypeIsValidValue(PBDrawItemType value);
NSString *NSStringFromPBDrawItemType(PBDrawItemType value);

typedef NS_ENUM(SInt32, PBDiceItemType) {
  PBDiceItemTypeDiceNomal = 0,
};

BOOL PBDiceItemTypeIsValidValue(PBDiceItemType value);
NSString *NSStringFromPBDiceItemType(PBDiceItemType value);

typedef NS_ENUM(SInt32, PBGameItemConsumeType) {
  PBGameItemConsumeTypeNonConsumable = 1,
  PBGameItemConsumeTypeAmountConsumable = 2,
  PBGameItemConsumeTypeTimeConsumable = 3,
};

BOOL PBGameItemConsumeTypeIsValidValue(PBGameItemConsumeType value);
NSString *NSStringFromPBGameItemConsumeType(PBGameItemConsumeType value);

typedef NS_ENUM(SInt32, PBGameTimeUnit) {
  PBGameTimeUnitHour = 1,
  PBGameTimeUnitDay = 2,
  PBGameTimeUnitMonth = 3,
  PBGameTimeUnitYear = 4,
};

BOOL PBGameTimeUnitIsValidValue(PBGameTimeUnit value);
NSString *NSStringFromPBGameTimeUnit(PBGameTimeUnit value);

typedef NS_ENUM(SInt32, PBIAPProductType) {
  PBIAPProductTypeIapcoin = 1,
  PBIAPProductTypeIapingot = 2,
};

BOOL PBIAPProductTypeIsValidValue(PBIAPProductType value);
NSString *NSStringFromPBIAPProductType(PBIAPProductType value);

typedef NS_ENUM(SInt32, PBTaskStatus) {
  PBTaskStatusTaskStatusCanTake = 0,
  PBTaskStatusTaskStatusDone = 1,
  PBTaskStatusTaskStatusAward = 2,
  PBTaskStatusTaskStatusExpired = 3,
  PBTaskStatusTaskStatusWaitForStart = 4,
  PBTaskStatusTaskStatusAlwaysOpen = 5,
};

BOOL PBTaskStatusIsValidValue(PBTaskStatus value);
NSString *NSStringFromPBTaskStatus(PBTaskStatus value);

typedef NS_ENUM(SInt32, PBTaskIdType) {
  PBTaskIdTypeTaskNone = 0,
  PBTaskIdTypeTaskCheckIn = 1,
  PBTaskIdTypeTaskBindSina = 2,
  PBTaskIdTypeTaskBindQq = 3,
  PBTaskIdTypeTaskShareSina = 4,
  PBTaskIdTypeTaskShareWeixinTimeline = 5,
  PBTaskIdTypeTaskShareQqSpace = 6,
  PBTaskIdTypeTaskAppReview = 7,
  PBTaskIdTypeTaskCreateOpus = 8,
  PBTaskIdTypeTaskGuessOpus = 9,
  PBTaskIdTypeTaskShareOpus = 10,
  PBTaskIdTypeTaskShareQqWeibo = 11,
  PBTaskIdTypeTaskAppUpgrade = 12,
  PBTaskIdTypeTaskVip = 13,
  PBTaskIdTypeTaskAppViewWeb = 14,
  PBTaskIdTypeTaskLingqian = 15,
  PBTaskIdTypeTaskAppWall = 100,
  PBTaskIdTypeTaskAppDownload = 200,
};

BOOL PBTaskIdTypeIsValidValue(PBTaskIdType value);
NSString *NSStringFromPBTaskIdType(PBTaskIdType value);


@interface GameBasicRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBKeyValue : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasValue_:1;
  NSString* name;
  NSString* value;
}
- (BOOL) hasName;
- (BOOL) hasValue;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* value;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBKeyValueBuilder*) builder;
+ (PBKeyValueBuilder*) builder;
+ (PBKeyValueBuilder*) builderWithPrototype:(PBKeyValue*) prototype;
- (PBKeyValueBuilder*) toBuilder;

+ (PBKeyValue*) parseFromData:(NSData*) data;
+ (PBKeyValue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBKeyValue*) parseFromInputStream:(NSInputStream*) input;
+ (PBKeyValue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBKeyValue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBKeyValue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBKeyValueBuilder : PBGeneratedMessageBuilder {
@private
  PBKeyValue* resultPbkeyValue;
}

- (PBKeyValue*) defaultInstance;

- (PBKeyValueBuilder*) clear;
- (PBKeyValueBuilder*) clone;

- (PBKeyValue*) build;
- (PBKeyValue*) buildPartial;

- (PBKeyValueBuilder*) mergeFrom:(PBKeyValue*) other;
- (PBKeyValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBKeyValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (PBKeyValueBuilder*) setName:(NSString*) value;
- (PBKeyValueBuilder*) clearName;

- (BOOL) hasValue;
- (NSString*) value;
- (PBKeyValueBuilder*) setValue:(NSString*) value;
- (PBKeyValueBuilder*) clearValue;
@end

@interface PBIntKeyValue : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  SInt32 key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly) SInt32 key;
@property (readonly, strong) NSString* value;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBIntKeyValueBuilder*) builder;
+ (PBIntKeyValueBuilder*) builder;
+ (PBIntKeyValueBuilder*) builderWithPrototype:(PBIntKeyValue*) prototype;
- (PBIntKeyValueBuilder*) toBuilder;

+ (PBIntKeyValue*) parseFromData:(NSData*) data;
+ (PBIntKeyValue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIntKeyValue*) parseFromInputStream:(NSInputStream*) input;
+ (PBIntKeyValue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIntKeyValue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBIntKeyValue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBIntKeyValueBuilder : PBGeneratedMessageBuilder {
@private
  PBIntKeyValue* resultPbintKeyValue;
}

- (PBIntKeyValue*) defaultInstance;

- (PBIntKeyValueBuilder*) clear;
- (PBIntKeyValueBuilder*) clone;

- (PBIntKeyValue*) build;
- (PBIntKeyValue*) buildPartial;

- (PBIntKeyValueBuilder*) mergeFrom:(PBIntKeyValue*) other;
- (PBIntKeyValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBIntKeyValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (SInt32) key;
- (PBIntKeyValueBuilder*) setKey:(SInt32) value;
- (PBIntKeyValueBuilder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (PBIntKeyValueBuilder*) setValue:(NSString*) value;
- (PBIntKeyValueBuilder*) clearValue;
@end

@interface PBIntKeyIntValue : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  SInt32 key;
  SInt32 value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly) SInt32 key;
@property (readonly) SInt32 value;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBIntKeyIntValueBuilder*) builder;
+ (PBIntKeyIntValueBuilder*) builder;
+ (PBIntKeyIntValueBuilder*) builderWithPrototype:(PBIntKeyIntValue*) prototype;
- (PBIntKeyIntValueBuilder*) toBuilder;

+ (PBIntKeyIntValue*) parseFromData:(NSData*) data;
+ (PBIntKeyIntValue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIntKeyIntValue*) parseFromInputStream:(NSInputStream*) input;
+ (PBIntKeyIntValue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIntKeyIntValue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBIntKeyIntValue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBIntKeyIntValueBuilder : PBGeneratedMessageBuilder {
@private
  PBIntKeyIntValue* resultPbintKeyIntValue;
}

- (PBIntKeyIntValue*) defaultInstance;

- (PBIntKeyIntValueBuilder*) clear;
- (PBIntKeyIntValueBuilder*) clone;

- (PBIntKeyIntValue*) build;
- (PBIntKeyIntValue*) buildPartial;

- (PBIntKeyIntValueBuilder*) mergeFrom:(PBIntKeyIntValue*) other;
- (PBIntKeyIntValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBIntKeyIntValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (SInt32) key;
- (PBIntKeyIntValueBuilder*) setKey:(SInt32) value;
- (PBIntKeyIntValueBuilder*) clearKey;

- (BOOL) hasValue;
- (SInt32) value;
- (PBIntKeyIntValueBuilder*) setValue:(SInt32) value;
- (PBIntKeyIntValueBuilder*) clearValue;
@end

@interface PBSNSUser : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasType_:1;
  BOOL hasExpireTime_:1;
  BOOL hasUserId_:1;
  BOOL hasNickName_:1;
  BOOL hasAccessToken_:1;
  BOOL hasAccessTokenSecret_:1;
  BOOL hasRefreshToken_:1;
  BOOL hasQqOpenId_:1;
  BOOL hasCredential_:1;
  SInt32 type;
  SInt32 expireTime;
  NSString* userId;
  NSString* nickName;
  NSString* accessToken;
  NSString* accessTokenSecret;
  NSString* refreshToken;
  NSString* qqOpenId;
  NSString* credential;
}
- (BOOL) hasType;
- (BOOL) hasUserId;
- (BOOL) hasNickName;
- (BOOL) hasAccessToken;
- (BOOL) hasAccessTokenSecret;
- (BOOL) hasRefreshToken;
- (BOOL) hasExpireTime;
- (BOOL) hasQqOpenId;
- (BOOL) hasCredential;
@property (readonly) SInt32 type;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* accessToken;
@property (readonly, strong) NSString* accessTokenSecret;
@property (readonly, strong) NSString* refreshToken;
@property (readonly) SInt32 expireTime;
@property (readonly, strong) NSString* qqOpenId;
@property (readonly, strong) NSString* credential;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSNSUserBuilder*) builder;
+ (PBSNSUserBuilder*) builder;
+ (PBSNSUserBuilder*) builderWithPrototype:(PBSNSUser*) prototype;
- (PBSNSUserBuilder*) toBuilder;

+ (PBSNSUser*) parseFromData:(NSData*) data;
+ (PBSNSUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSNSUser*) parseFromInputStream:(NSInputStream*) input;
+ (PBSNSUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSNSUser*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSNSUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSNSUserBuilder : PBGeneratedMessageBuilder {
@private
  PBSNSUser* resultPbsnsuser;
}

- (PBSNSUser*) defaultInstance;

- (PBSNSUserBuilder*) clear;
- (PBSNSUserBuilder*) clone;

- (PBSNSUser*) build;
- (PBSNSUser*) buildPartial;

- (PBSNSUserBuilder*) mergeFrom:(PBSNSUser*) other;
- (PBSNSUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSNSUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SInt32) type;
- (PBSNSUserBuilder*) setType:(SInt32) value;
- (PBSNSUserBuilder*) clearType;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBSNSUserBuilder*) setUserId:(NSString*) value;
- (PBSNSUserBuilder*) clearUserId;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (PBSNSUserBuilder*) setNickName:(NSString*) value;
- (PBSNSUserBuilder*) clearNickName;

- (BOOL) hasAccessToken;
- (NSString*) accessToken;
- (PBSNSUserBuilder*) setAccessToken:(NSString*) value;
- (PBSNSUserBuilder*) clearAccessToken;

- (BOOL) hasAccessTokenSecret;
- (NSString*) accessTokenSecret;
- (PBSNSUserBuilder*) setAccessTokenSecret:(NSString*) value;
- (PBSNSUserBuilder*) clearAccessTokenSecret;

- (BOOL) hasRefreshToken;
- (NSString*) refreshToken;
- (PBSNSUserBuilder*) setRefreshToken:(NSString*) value;
- (PBSNSUserBuilder*) clearRefreshToken;

- (BOOL) hasExpireTime;
- (SInt32) expireTime;
- (PBSNSUserBuilder*) setExpireTime:(SInt32) value;
- (PBSNSUserBuilder*) clearExpireTime;

- (BOOL) hasQqOpenId;
- (NSString*) qqOpenId;
- (PBSNSUserBuilder*) setQqOpenId:(NSString*) value;
- (PBSNSUserBuilder*) clearQqOpenId;

- (BOOL) hasCredential;
- (NSString*) credential;
- (PBSNSUserBuilder*) setCredential:(NSString*) value;
- (PBSNSUserBuilder*) clearCredential;
@end

@interface PBSNSUserCredential : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasType_:1;
  BOOL hasCredential_:1;
  SInt32 type;
  NSString* credential;
}
- (BOOL) hasType;
- (BOOL) hasCredential;
@property (readonly) SInt32 type;
@property (readonly, strong) NSString* credential;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSNSUserCredentialBuilder*) builder;
+ (PBSNSUserCredentialBuilder*) builder;
+ (PBSNSUserCredentialBuilder*) builderWithPrototype:(PBSNSUserCredential*) prototype;
- (PBSNSUserCredentialBuilder*) toBuilder;

+ (PBSNSUserCredential*) parseFromData:(NSData*) data;
+ (PBSNSUserCredential*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSNSUserCredential*) parseFromInputStream:(NSInputStream*) input;
+ (PBSNSUserCredential*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSNSUserCredential*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSNSUserCredential*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSNSUserCredentialBuilder : PBGeneratedMessageBuilder {
@private
  PBSNSUserCredential* resultPbsnsuserCredential;
}

- (PBSNSUserCredential*) defaultInstance;

- (PBSNSUserCredentialBuilder*) clear;
- (PBSNSUserCredentialBuilder*) clone;

- (PBSNSUserCredential*) build;
- (PBSNSUserCredential*) buildPartial;

- (PBSNSUserCredentialBuilder*) mergeFrom:(PBSNSUserCredential*) other;
- (PBSNSUserCredentialBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSNSUserCredentialBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SInt32) type;
- (PBSNSUserCredentialBuilder*) setType:(SInt32) value;
- (PBSNSUserCredentialBuilder*) clearType;

- (BOOL) hasCredential;
- (NSString*) credential;
- (PBSNSUserCredentialBuilder*) setCredential:(NSString*) value;
- (PBSNSUserCredentialBuilder*) clearCredential;
@end

@interface PBUserLevel : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasExp_:1;
  BOOL hasLevel_:1;
  BOOL hasGameId_:1;
  SInt64 exp;
  SInt32 level;
  NSString* gameId;
}
- (BOOL) hasGameId;
- (BOOL) hasLevel;
- (BOOL) hasExp;
@property (readonly, strong) NSString* gameId;
@property (readonly) SInt32 level;
@property (readonly) SInt64 exp;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserLevelBuilder*) builder;
+ (PBUserLevelBuilder*) builder;
+ (PBUserLevelBuilder*) builderWithPrototype:(PBUserLevel*) prototype;
- (PBUserLevelBuilder*) toBuilder;

+ (PBUserLevel*) parseFromData:(NSData*) data;
+ (PBUserLevel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserLevel*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserLevel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserLevelBuilder : PBGeneratedMessageBuilder {
@private
  PBUserLevel* resultPbuserLevel;
}

- (PBUserLevel*) defaultInstance;

- (PBUserLevelBuilder*) clear;
- (PBUserLevelBuilder*) clone;

- (PBUserLevel*) build;
- (PBUserLevel*) buildPartial;

- (PBUserLevelBuilder*) mergeFrom:(PBUserLevel*) other;
- (PBUserLevelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserLevelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (PBUserLevelBuilder*) setGameId:(NSString*) value;
- (PBUserLevelBuilder*) clearGameId;

- (BOOL) hasLevel;
- (SInt32) level;
- (PBUserLevelBuilder*) setLevel:(SInt32) value;
- (PBUserLevelBuilder*) clearLevel;

- (BOOL) hasExp;
- (SInt64) exp;
- (PBUserLevelBuilder*) setExp:(SInt64) value;
- (PBUserLevelBuilder*) clearExp;
@end

@interface PBGameUser : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGender_:1;
  BOOL hasCanShakeNumber_:1;
  BOOL hasIsPlaying_:1;
  BOOL hasIsTakenOver_:1;
  BOOL hasIsJailBroken_:1;
  BOOL hasLatitude_:1;
  BOOL hasLongitude_:1;
  BOOL hasExperience_:1;
  BOOL hasSingRecordLimit_:1;
  BOOL hasVipLastPayDate_:1;
  BOOL hasVipExpireDate_:1;
  BOOL hasVip_:1;
  BOOL hasTakeCoins_:1;
  BOOL hasUserLevel_:1;
  BOOL hasShakeNumberTimes_:1;
  BOOL hasSeatId_:1;
  BOOL hasEmailVerifyStatus_:1;
  BOOL hasFeatureOpus_:1;
  BOOL hasOpusCoverflowType_:1;
  BOOL hasZodiac_:1;
  BOOL hasGuessWordLanguage_:1;
  BOOL hasFollowCount_:1;
  BOOL hasFanCount_:1;
  BOOL hasIngotBalance_:1;
  BOOL hasLevel_:1;
  BOOL hasCoinBalance_:1;
  BOOL hasDiamondBalance_:1;
  BOOL hasLanguage_:1;
  BOOL hasUserId_:1;
  BOOL hasDeviceModel_:1;
  BOOL hasDeviceOs_:1;
  BOOL hasDeviceId_:1;
  BOOL hasDeviceType_:1;
  BOOL hasBloodGroup_:1;
  BOOL hasCountryCode_:1;
  BOOL hasDeviceToken_:1;
  BOOL hasBackgroundUrl_:1;
  BOOL hasBirthday_:1;
  BOOL hasPassword_:1;
  BOOL hasEmail_:1;
  BOOL hasSignature_:1;
  BOOL hasFriendMemo_:1;
  BOOL hasXiaojiNumber_:1;
  BOOL hasFacetimeId_:1;
  BOOL hasLocation_:1;
  BOOL hasAvatar_:1;
  BOOL hasNickName_:1;
  BOOL hasGroupInfo_:1;
  BOOL hasOpenInfoType_:1;
  BOOL gender_:1;
  BOOL canShakeNumber_:1;
  BOOL isPlaying_:1;
  BOOL isTakenOver_:1;
  BOOL isJailBroken_:1;
  Float32 latitude;
  Float32 longitude;
  SInt64 experience;
  SInt32 singRecordLimit;
  SInt32 vipLastPayDate;
  SInt32 vipExpireDate;
  SInt32 vip;
  SInt32 takeCoins;
  SInt32 userLevel;
  SInt32 shakeNumberTimes;
  SInt32 seatId;
  SInt32 emailVerifyStatus;
  SInt32 featureOpus;
  SInt32 opusCoverflowType;
  SInt32 zodiac;
  SInt32 guessWordLanguage;
  SInt32 followCount;
  SInt32 fanCount;
  SInt32 ingotBalance;
  SInt32 level;
  SInt32 coinBalance;
  SInt32 diamondBalance;
  NSString* language;
  NSString* userId;
  NSString* deviceModel;
  NSString* deviceOs;
  NSString* deviceId;
  NSString* deviceType;
  NSString* bloodGroup;
  NSString* countryCode;
  NSString* deviceToken;
  NSString* backgroundUrl;
  NSString* birthday;
  NSString* password;
  NSString* email;
  NSString* signature;
  NSString* friendMemo;
  NSString* xiaojiNumber;
  NSString* facetimeId;
  NSString* location;
  NSString* avatar;
  NSString* nickName;
  PBSimpleGroup* groupInfo;
  PBOpenInfoType openInfoType;
  NSMutableArray * blockDeviceIdsArray;
  NSMutableArray * awardAppsArray;
  NSMutableArray * offGroupIdsArray;
  NSMutableArray * permissionsArray;
  NSMutableArray * attributesArray;
  NSMutableArray * snsCredentialsArray;
  NSMutableArray * snsUsersArray;
  NSMutableArray * itemsArray;
}
- (BOOL) hasUserId;
- (BOOL) hasNickName;
- (BOOL) hasAvatar;
- (BOOL) hasGender;
- (BOOL) hasLocation;
- (BOOL) hasUserLevel;
- (BOOL) hasFacetimeId;
- (BOOL) hasSeatId;
- (BOOL) hasXiaojiNumber;
- (BOOL) hasIsPlaying;
- (BOOL) hasIsTakenOver;
- (BOOL) hasEmail;
- (BOOL) hasPassword;
- (BOOL) hasBirthday;
- (BOOL) hasZodiac;
- (BOOL) hasGuessWordLanguage;
- (BOOL) hasBackgroundUrl;
- (BOOL) hasDeviceToken;
- (BOOL) hasCountryCode;
- (BOOL) hasLanguage;
- (BOOL) hasLevel;
- (BOOL) hasExperience;
- (BOOL) hasCoinBalance;
- (BOOL) hasDiamondBalance;
- (BOOL) hasIngotBalance;
- (BOOL) hasDeviceModel;
- (BOOL) hasDeviceOs;
- (BOOL) hasDeviceId;
- (BOOL) hasDeviceType;
- (BOOL) hasBloodGroup;
- (BOOL) hasFanCount;
- (BOOL) hasFollowCount;
- (BOOL) hasLongitude;
- (BOOL) hasLatitude;
- (BOOL) hasIsJailBroken;
- (BOOL) hasOpenInfoType;
- (BOOL) hasOpusCoverflowType;
- (BOOL) hasSignature;
- (BOOL) hasFeatureOpus;
- (BOOL) hasFriendMemo;
- (BOOL) hasEmailVerifyStatus;
- (BOOL) hasCanShakeNumber;
- (BOOL) hasShakeNumberTimes;
- (BOOL) hasTakeCoins;
- (BOOL) hasVip;
- (BOOL) hasVipExpireDate;
- (BOOL) hasVipLastPayDate;
- (BOOL) hasGroupInfo;
- (BOOL) hasSingRecordLimit;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* avatar;
- (BOOL) gender;
@property (readonly, strong) NSArray * snsUsers;
@property (readonly, strong) NSString* location;
@property (readonly) SInt32 userLevel;
@property (readonly, strong) NSString* facetimeId;
@property (readonly) SInt32 seatId;
@property (readonly, strong) NSString* xiaojiNumber;
@property (readonly, strong) NSArray * snsCredentials;
- (BOOL) isPlaying;
- (BOOL) isTakenOver;
@property (readonly, strong) NSArray * attributes;
@property (readonly, strong) NSString* email;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSString* birthday;
@property (readonly) SInt32 zodiac;
@property (readonly) SInt32 guessWordLanguage;
@property (readonly, strong) NSString* backgroundUrl;
@property (readonly, strong) NSString* deviceToken;
@property (readonly, strong) NSString* countryCode;
@property (readonly, strong) NSString* language;
@property (readonly) SInt32 level;
@property (readonly) SInt64 experience;
@property (readonly) SInt32 coinBalance;
@property (readonly) SInt32 diamondBalance;
@property (readonly) SInt32 ingotBalance;
@property (readonly, strong) NSArray * items;
@property (readonly, strong) NSString* deviceModel;
@property (readonly, strong) NSString* deviceOs;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* deviceType;
@property (readonly, strong) NSArray * blockDeviceIds;
@property (readonly, strong) NSString* bloodGroup;
@property (readonly) SInt32 fanCount;
@property (readonly) SInt32 followCount;
@property (readonly) Float32 longitude;
@property (readonly) Float32 latitude;
- (BOOL) isJailBroken;
@property (readonly) PBOpenInfoType openInfoType;
@property (readonly) SInt32 opusCoverflowType;
@property (readonly, strong) NSString* signature;
@property (readonly) SInt32 featureOpus;
@property (readonly, strong) NSString* friendMemo;
@property (readonly) SInt32 emailVerifyStatus;
- (BOOL) canShakeNumber;
@property (readonly) SInt32 shakeNumberTimes;
@property (readonly) SInt32 takeCoins;
@property (readonly, strong) NSArray * awardApps;
@property (readonly) SInt32 vip;
@property (readonly) SInt32 vipExpireDate;
@property (readonly) SInt32 vipLastPayDate;
@property (readonly, strong) PBSimpleGroup* groupInfo;
@property (readonly, strong) NSArray * offGroupIds;
@property (readonly, strong) NSArray * permissions;
@property (readonly) SInt32 singRecordLimit;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;
- (PBSNSUserCredential*)snsCredentialsAtIndex:(NSUInteger)index;
- (PBKeyValue*)attributesAtIndex:(NSUInteger)index;
- (PBUserItem*)itemsAtIndex:(NSUInteger)index;
- (NSString*)blockDeviceIdsAtIndex:(NSUInteger)index;
- (NSString*)awardAppsAtIndex:(NSUInteger)index;
- (NSString*)offGroupIdsAtIndex:(NSUInteger)index;
- (NSString*)permissionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGameUserBuilder*) builder;
+ (PBGameUserBuilder*) builder;
+ (PBGameUserBuilder*) builderWithPrototype:(PBGameUser*) prototype;
- (PBGameUserBuilder*) toBuilder;

+ (PBGameUser*) parseFromData:(NSData*) data;
+ (PBGameUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameUser*) parseFromInputStream:(NSInputStream*) input;
+ (PBGameUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameUser*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGameUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGameUserBuilder : PBGeneratedMessageBuilder {
@private
  PBGameUser* resultPbgameUser;
}

- (PBGameUser*) defaultInstance;

- (PBGameUserBuilder*) clear;
- (PBGameUserBuilder*) clone;

- (PBGameUser*) build;
- (PBGameUser*) buildPartial;

- (PBGameUserBuilder*) mergeFrom:(PBGameUser*) other;
- (PBGameUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGameUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBGameUserBuilder*) setUserId:(NSString*) value;
- (PBGameUserBuilder*) clearUserId;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (PBGameUserBuilder*) setNickName:(NSString*) value;
- (PBGameUserBuilder*) clearNickName;

- (BOOL) hasAvatar;
- (NSString*) avatar;
- (PBGameUserBuilder*) setAvatar:(NSString*) value;
- (PBGameUserBuilder*) clearAvatar;

- (BOOL) hasGender;
- (BOOL) gender;
- (PBGameUserBuilder*) setGender:(BOOL) value;
- (PBGameUserBuilder*) clearGender;

- (NSMutableArray *)snsUsers;
- (PBSNSUser*)snsUsersAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addSnsUsers:(PBSNSUser*)value;
- (PBGameUserBuilder *)setSnsUsersArray:(NSArray *)array;
- (PBGameUserBuilder *)clearSnsUsers;

- (BOOL) hasLocation;
- (NSString*) location;
- (PBGameUserBuilder*) setLocation:(NSString*) value;
- (PBGameUserBuilder*) clearLocation;

- (BOOL) hasUserLevel;
- (SInt32) userLevel;
- (PBGameUserBuilder*) setUserLevel:(SInt32) value;
- (PBGameUserBuilder*) clearUserLevel;

- (BOOL) hasFacetimeId;
- (NSString*) facetimeId;
- (PBGameUserBuilder*) setFacetimeId:(NSString*) value;
- (PBGameUserBuilder*) clearFacetimeId;

- (BOOL) hasSeatId;
- (SInt32) seatId;
- (PBGameUserBuilder*) setSeatId:(SInt32) value;
- (PBGameUserBuilder*) clearSeatId;

- (BOOL) hasXiaojiNumber;
- (NSString*) xiaojiNumber;
- (PBGameUserBuilder*) setXiaojiNumber:(NSString*) value;
- (PBGameUserBuilder*) clearXiaojiNumber;

- (NSMutableArray *)snsCredentials;
- (PBSNSUserCredential*)snsCredentialsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addSnsCredentials:(PBSNSUserCredential*)value;
- (PBGameUserBuilder *)setSnsCredentialsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearSnsCredentials;

- (BOOL) hasIsPlaying;
- (BOOL) isPlaying;
- (PBGameUserBuilder*) setIsPlaying:(BOOL) value;
- (PBGameUserBuilder*) clearIsPlaying;

- (BOOL) hasIsTakenOver;
- (BOOL) isTakenOver;
- (PBGameUserBuilder*) setIsTakenOver:(BOOL) value;
- (PBGameUserBuilder*) clearIsTakenOver;

- (NSMutableArray *)attributes;
- (PBKeyValue*)attributesAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addAttributes:(PBKeyValue*)value;
- (PBGameUserBuilder *)setAttributesArray:(NSArray *)array;
- (PBGameUserBuilder *)clearAttributes;

- (BOOL) hasEmail;
- (NSString*) email;
- (PBGameUserBuilder*) setEmail:(NSString*) value;
- (PBGameUserBuilder*) clearEmail;

- (BOOL) hasPassword;
- (NSString*) password;
- (PBGameUserBuilder*) setPassword:(NSString*) value;
- (PBGameUserBuilder*) clearPassword;

- (BOOL) hasBirthday;
- (NSString*) birthday;
- (PBGameUserBuilder*) setBirthday:(NSString*) value;
- (PBGameUserBuilder*) clearBirthday;

- (BOOL) hasZodiac;
- (SInt32) zodiac;
- (PBGameUserBuilder*) setZodiac:(SInt32) value;
- (PBGameUserBuilder*) clearZodiac;

- (BOOL) hasGuessWordLanguage;
- (SInt32) guessWordLanguage;
- (PBGameUserBuilder*) setGuessWordLanguage:(SInt32) value;
- (PBGameUserBuilder*) clearGuessWordLanguage;

- (BOOL) hasBackgroundUrl;
- (NSString*) backgroundUrl;
- (PBGameUserBuilder*) setBackgroundUrl:(NSString*) value;
- (PBGameUserBuilder*) clearBackgroundUrl;

- (BOOL) hasDeviceToken;
- (NSString*) deviceToken;
- (PBGameUserBuilder*) setDeviceToken:(NSString*) value;
- (PBGameUserBuilder*) clearDeviceToken;

- (BOOL) hasCountryCode;
- (NSString*) countryCode;
- (PBGameUserBuilder*) setCountryCode:(NSString*) value;
- (PBGameUserBuilder*) clearCountryCode;

- (BOOL) hasLanguage;
- (NSString*) language;
- (PBGameUserBuilder*) setLanguage:(NSString*) value;
- (PBGameUserBuilder*) clearLanguage;

- (BOOL) hasLevel;
- (SInt32) level;
- (PBGameUserBuilder*) setLevel:(SInt32) value;
- (PBGameUserBuilder*) clearLevel;

- (BOOL) hasExperience;
- (SInt64) experience;
- (PBGameUserBuilder*) setExperience:(SInt64) value;
- (PBGameUserBuilder*) clearExperience;

- (BOOL) hasCoinBalance;
- (SInt32) coinBalance;
- (PBGameUserBuilder*) setCoinBalance:(SInt32) value;
- (PBGameUserBuilder*) clearCoinBalance;

- (BOOL) hasDiamondBalance;
- (SInt32) diamondBalance;
- (PBGameUserBuilder*) setDiamondBalance:(SInt32) value;
- (PBGameUserBuilder*) clearDiamondBalance;

- (BOOL) hasIngotBalance;
- (SInt32) ingotBalance;
- (PBGameUserBuilder*) setIngotBalance:(SInt32) value;
- (PBGameUserBuilder*) clearIngotBalance;

- (NSMutableArray *)items;
- (PBUserItem*)itemsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addItems:(PBUserItem*)value;
- (PBGameUserBuilder *)setItemsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearItems;

- (BOOL) hasDeviceModel;
- (NSString*) deviceModel;
- (PBGameUserBuilder*) setDeviceModel:(NSString*) value;
- (PBGameUserBuilder*) clearDeviceModel;

- (BOOL) hasDeviceOs;
- (NSString*) deviceOs;
- (PBGameUserBuilder*) setDeviceOs:(NSString*) value;
- (PBGameUserBuilder*) clearDeviceOs;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (PBGameUserBuilder*) setDeviceId:(NSString*) value;
- (PBGameUserBuilder*) clearDeviceId;

- (BOOL) hasDeviceType;
- (NSString*) deviceType;
- (PBGameUserBuilder*) setDeviceType:(NSString*) value;
- (PBGameUserBuilder*) clearDeviceType;

- (NSMutableArray *)blockDeviceIds;
- (NSString*)blockDeviceIdsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addBlockDeviceIds:(NSString*)value;
- (PBGameUserBuilder *)setBlockDeviceIdsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearBlockDeviceIds;

- (BOOL) hasBloodGroup;
- (NSString*) bloodGroup;
- (PBGameUserBuilder*) setBloodGroup:(NSString*) value;
- (PBGameUserBuilder*) clearBloodGroup;

- (BOOL) hasFanCount;
- (SInt32) fanCount;
- (PBGameUserBuilder*) setFanCount:(SInt32) value;
- (PBGameUserBuilder*) clearFanCount;

- (BOOL) hasFollowCount;
- (SInt32) followCount;
- (PBGameUserBuilder*) setFollowCount:(SInt32) value;
- (PBGameUserBuilder*) clearFollowCount;

- (BOOL) hasLongitude;
- (Float32) longitude;
- (PBGameUserBuilder*) setLongitude:(Float32) value;
- (PBGameUserBuilder*) clearLongitude;

- (BOOL) hasLatitude;
- (Float32) latitude;
- (PBGameUserBuilder*) setLatitude:(Float32) value;
- (PBGameUserBuilder*) clearLatitude;

- (BOOL) hasIsJailBroken;
- (BOOL) isJailBroken;
- (PBGameUserBuilder*) setIsJailBroken:(BOOL) value;
- (PBGameUserBuilder*) clearIsJailBroken;

- (BOOL) hasOpenInfoType;
- (PBOpenInfoType) openInfoType;
- (PBGameUserBuilder*) setOpenInfoType:(PBOpenInfoType) value;
- (PBGameUserBuilder*) clearOpenInfoType;

- (BOOL) hasOpusCoverflowType;
- (SInt32) opusCoverflowType;
- (PBGameUserBuilder*) setOpusCoverflowType:(SInt32) value;
- (PBGameUserBuilder*) clearOpusCoverflowType;

- (BOOL) hasSignature;
- (NSString*) signature;
- (PBGameUserBuilder*) setSignature:(NSString*) value;
- (PBGameUserBuilder*) clearSignature;

- (BOOL) hasFeatureOpus;
- (SInt32) featureOpus;
- (PBGameUserBuilder*) setFeatureOpus:(SInt32) value;
- (PBGameUserBuilder*) clearFeatureOpus;

- (BOOL) hasFriendMemo;
- (NSString*) friendMemo;
- (PBGameUserBuilder*) setFriendMemo:(NSString*) value;
- (PBGameUserBuilder*) clearFriendMemo;

- (BOOL) hasEmailVerifyStatus;
- (SInt32) emailVerifyStatus;
- (PBGameUserBuilder*) setEmailVerifyStatus:(SInt32) value;
- (PBGameUserBuilder*) clearEmailVerifyStatus;

- (BOOL) hasCanShakeNumber;
- (BOOL) canShakeNumber;
- (PBGameUserBuilder*) setCanShakeNumber:(BOOL) value;
- (PBGameUserBuilder*) clearCanShakeNumber;

- (BOOL) hasShakeNumberTimes;
- (SInt32) shakeNumberTimes;
- (PBGameUserBuilder*) setShakeNumberTimes:(SInt32) value;
- (PBGameUserBuilder*) clearShakeNumberTimes;

- (BOOL) hasTakeCoins;
- (SInt32) takeCoins;
- (PBGameUserBuilder*) setTakeCoins:(SInt32) value;
- (PBGameUserBuilder*) clearTakeCoins;

- (NSMutableArray *)awardApps;
- (NSString*)awardAppsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addAwardApps:(NSString*)value;
- (PBGameUserBuilder *)setAwardAppsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearAwardApps;

- (BOOL) hasVip;
- (SInt32) vip;
- (PBGameUserBuilder*) setVip:(SInt32) value;
- (PBGameUserBuilder*) clearVip;

- (BOOL) hasVipExpireDate;
- (SInt32) vipExpireDate;
- (PBGameUserBuilder*) setVipExpireDate:(SInt32) value;
- (PBGameUserBuilder*) clearVipExpireDate;

- (BOOL) hasVipLastPayDate;
- (SInt32) vipLastPayDate;
- (PBGameUserBuilder*) setVipLastPayDate:(SInt32) value;
- (PBGameUserBuilder*) clearVipLastPayDate;

- (BOOL) hasGroupInfo;
- (PBSimpleGroup*) groupInfo;
- (PBGameUserBuilder*) setGroupInfo:(PBSimpleGroup*) value;
- (PBGameUserBuilder*) setGroupInfoBuilder:(PBSimpleGroupBuilder*) builderForValue;
- (PBGameUserBuilder*) mergeGroupInfo:(PBSimpleGroup*) value;
- (PBGameUserBuilder*) clearGroupInfo;

- (NSMutableArray *)offGroupIds;
- (NSString*)offGroupIdsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addOffGroupIds:(NSString*)value;
- (PBGameUserBuilder *)setOffGroupIdsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearOffGroupIds;

- (NSMutableArray *)permissions;
- (NSString*)permissionsAtIndex:(NSUInteger)index;
- (PBGameUserBuilder *)addPermissions:(NSString*)value;
- (PBGameUserBuilder *)setPermissionsArray:(NSArray *)array;
- (PBGameUserBuilder *)clearPermissions;

- (BOOL) hasSingRecordLimit;
- (SInt32) singRecordLimit;
- (PBGameUserBuilder*) setSingRecordLimit:(SInt32) value;
- (PBGameUserBuilder*) clearSingRecordLimit;
@end

@interface PBSimpleGroup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGroupId_:1;
  BOOL hasGroupName_:1;
  BOOL hasGroupMedal_:1;
  NSString* groupId;
  NSString* groupName;
  NSString* groupMedal;
}
- (BOOL) hasGroupId;
- (BOOL) hasGroupName;
- (BOOL) hasGroupMedal;
@property (readonly, strong) NSString* groupId;
@property (readonly, strong) NSString* groupName;
@property (readonly, strong) NSString* groupMedal;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSimpleGroupBuilder*) builder;
+ (PBSimpleGroupBuilder*) builder;
+ (PBSimpleGroupBuilder*) builderWithPrototype:(PBSimpleGroup*) prototype;
- (PBSimpleGroupBuilder*) toBuilder;

+ (PBSimpleGroup*) parseFromData:(NSData*) data;
+ (PBSimpleGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSimpleGroup*) parseFromInputStream:(NSInputStream*) input;
+ (PBSimpleGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSimpleGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSimpleGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSimpleGroupBuilder : PBGeneratedMessageBuilder {
@private
  PBSimpleGroup* resultPbsimpleGroup;
}

- (PBSimpleGroup*) defaultInstance;

- (PBSimpleGroupBuilder*) clear;
- (PBSimpleGroupBuilder*) clone;

- (PBSimpleGroup*) build;
- (PBSimpleGroup*) buildPartial;

- (PBSimpleGroupBuilder*) mergeFrom:(PBSimpleGroup*) other;
- (PBSimpleGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSimpleGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (NSString*) groupId;
- (PBSimpleGroupBuilder*) setGroupId:(NSString*) value;
- (PBSimpleGroupBuilder*) clearGroupId;

- (BOOL) hasGroupName;
- (NSString*) groupName;
- (PBSimpleGroupBuilder*) setGroupName:(NSString*) value;
- (PBSimpleGroupBuilder*) clearGroupName;

- (BOOL) hasGroupMedal;
- (NSString*) groupMedal;
- (PBSimpleGroupBuilder*) setGroupMedal:(NSString*) value;
- (PBSimpleGroupBuilder*) clearGroupMedal;
@end

@interface PBGameSession : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSessionId_:1;
  BOOL hasCreateTime_:1;
  BOOL hasStatus_:1;
  BOOL hasRuleType_:1;
  BOOL hasGameId_:1;
  BOOL hasName_:1;
  BOOL hasCreateBy_:1;
  BOOL hasHost_:1;
  BOOL hasCurrentPlayUserId_:1;
  BOOL hasNextPlayUserId_:1;
  BOOL hasPassword_:1;
  SInt64 sessionId;
  SInt32 createTime;
  SInt32 status;
  SInt32 ruleType;
  NSString* gameId;
  NSString* name;
  NSString* createBy;
  NSString* host;
  NSString* currentPlayUserId;
  NSString* nextPlayUserId;
  NSString* password;
  NSMutableArray * usersArray;
}
- (BOOL) hasGameId;
- (BOOL) hasSessionId;
- (BOOL) hasName;
- (BOOL) hasCreateBy;
- (BOOL) hasCreateTime;
- (BOOL) hasHost;
- (BOOL) hasStatus;
- (BOOL) hasCurrentPlayUserId;
- (BOOL) hasNextPlayUserId;
- (BOOL) hasPassword;
- (BOOL) hasRuleType;
@property (readonly, strong) NSString* gameId;
@property (readonly) SInt64 sessionId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* createBy;
@property (readonly) SInt32 createTime;
@property (readonly, strong) NSString* host;
@property (readonly) SInt32 status;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) NSString* nextPlayUserId;
@property (readonly, strong) NSString* password;
@property (readonly) SInt32 ruleType;
@property (readonly, strong) NSArray * users;
- (PBGameUser*)usersAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGameSessionBuilder*) builder;
+ (PBGameSessionBuilder*) builder;
+ (PBGameSessionBuilder*) builderWithPrototype:(PBGameSession*) prototype;
- (PBGameSessionBuilder*) toBuilder;

+ (PBGameSession*) parseFromData:(NSData*) data;
+ (PBGameSession*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameSession*) parseFromInputStream:(NSInputStream*) input;
+ (PBGameSession*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameSession*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGameSession*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGameSessionBuilder : PBGeneratedMessageBuilder {
@private
  PBGameSession* resultPbgameSession;
}

- (PBGameSession*) defaultInstance;

- (PBGameSessionBuilder*) clear;
- (PBGameSessionBuilder*) clone;

- (PBGameSession*) build;
- (PBGameSession*) buildPartial;

- (PBGameSessionBuilder*) mergeFrom:(PBGameSession*) other;
- (PBGameSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGameSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (NSString*) gameId;
- (PBGameSessionBuilder*) setGameId:(NSString*) value;
- (PBGameSessionBuilder*) clearGameId;

- (BOOL) hasSessionId;
- (SInt64) sessionId;
- (PBGameSessionBuilder*) setSessionId:(SInt64) value;
- (PBGameSessionBuilder*) clearSessionId;

- (BOOL) hasName;
- (NSString*) name;
- (PBGameSessionBuilder*) setName:(NSString*) value;
- (PBGameSessionBuilder*) clearName;

- (BOOL) hasCreateBy;
- (NSString*) createBy;
- (PBGameSessionBuilder*) setCreateBy:(NSString*) value;
- (PBGameSessionBuilder*) clearCreateBy;

- (BOOL) hasCreateTime;
- (SInt32) createTime;
- (PBGameSessionBuilder*) setCreateTime:(SInt32) value;
- (PBGameSessionBuilder*) clearCreateTime;

- (BOOL) hasHost;
- (NSString*) host;
- (PBGameSessionBuilder*) setHost:(NSString*) value;
- (PBGameSessionBuilder*) clearHost;

- (BOOL) hasStatus;
- (SInt32) status;
- (PBGameSessionBuilder*) setStatus:(SInt32) value;
- (PBGameSessionBuilder*) clearStatus;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (PBGameSessionBuilder*) setCurrentPlayUserId:(NSString*) value;
- (PBGameSessionBuilder*) clearCurrentPlayUserId;

- (BOOL) hasNextPlayUserId;
- (NSString*) nextPlayUserId;
- (PBGameSessionBuilder*) setNextPlayUserId:(NSString*) value;
- (PBGameSessionBuilder*) clearNextPlayUserId;

- (BOOL) hasPassword;
- (NSString*) password;
- (PBGameSessionBuilder*) setPassword:(NSString*) value;
- (PBGameSessionBuilder*) clearPassword;

- (BOOL) hasRuleType;
- (SInt32) ruleType;
- (PBGameSessionBuilder*) setRuleType:(SInt32) value;
- (PBGameSessionBuilder*) clearRuleType;

- (NSMutableArray *)users;
- (PBGameUser*)usersAtIndex:(NSUInteger)index;
- (PBGameSessionBuilder *)addUsers:(PBGameUser*)value;
- (PBGameSessionBuilder *)setUsersArray:(NSArray *)array;
- (PBGameSessionBuilder *)clearUsers;
@end

@interface PBGameSessionChanged : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSessionId_:1;
  BOOL hasStatus_:1;
  BOOL hasCurrentPlayUserId_:1;
  SInt64 sessionId;
  SInt32 status;
  NSString* currentPlayUserId;
  NSMutableArray * userIdsDeletedArray;
  NSMutableArray * usersAddedArray;
  NSMutableArray * usersUpdatedArray;
}
- (BOOL) hasSessionId;
- (BOOL) hasStatus;
- (BOOL) hasCurrentPlayUserId;
@property (readonly) SInt64 sessionId;
@property (readonly) SInt32 status;
@property (readonly, strong) NSString* currentPlayUserId;
@property (readonly, strong) NSArray * usersAdded;
@property (readonly, strong) NSArray * userIdsDeleted;
@property (readonly, strong) NSArray * usersUpdated;
- (PBGameUser*)usersAddedAtIndex:(NSUInteger)index;
- (NSString*)userIdsDeletedAtIndex:(NSUInteger)index;
- (PBGameUser*)usersUpdatedAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGameSessionChangedBuilder*) builder;
+ (PBGameSessionChangedBuilder*) builder;
+ (PBGameSessionChangedBuilder*) builderWithPrototype:(PBGameSessionChanged*) prototype;
- (PBGameSessionChangedBuilder*) toBuilder;

+ (PBGameSessionChanged*) parseFromData:(NSData*) data;
+ (PBGameSessionChanged*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameSessionChanged*) parseFromInputStream:(NSInputStream*) input;
+ (PBGameSessionChanged*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameSessionChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGameSessionChanged*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGameSessionChangedBuilder : PBGeneratedMessageBuilder {
@private
  PBGameSessionChanged* resultPbgameSessionChanged;
}

- (PBGameSessionChanged*) defaultInstance;

- (PBGameSessionChangedBuilder*) clear;
- (PBGameSessionChangedBuilder*) clone;

- (PBGameSessionChanged*) build;
- (PBGameSessionChanged*) buildPartial;

- (PBGameSessionChangedBuilder*) mergeFrom:(PBGameSessionChanged*) other;
- (PBGameSessionChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGameSessionChangedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionId;
- (SInt64) sessionId;
- (PBGameSessionChangedBuilder*) setSessionId:(SInt64) value;
- (PBGameSessionChangedBuilder*) clearSessionId;

- (BOOL) hasStatus;
- (SInt32) status;
- (PBGameSessionChangedBuilder*) setStatus:(SInt32) value;
- (PBGameSessionChangedBuilder*) clearStatus;

- (BOOL) hasCurrentPlayUserId;
- (NSString*) currentPlayUserId;
- (PBGameSessionChangedBuilder*) setCurrentPlayUserId:(NSString*) value;
- (PBGameSessionChangedBuilder*) clearCurrentPlayUserId;

- (NSMutableArray *)usersAdded;
- (PBGameUser*)usersAddedAtIndex:(NSUInteger)index;
- (PBGameSessionChangedBuilder *)addUsersAdded:(PBGameUser*)value;
- (PBGameSessionChangedBuilder *)setUsersAddedArray:(NSArray *)array;
- (PBGameSessionChangedBuilder *)clearUsersAdded;

- (NSMutableArray *)userIdsDeleted;
- (NSString*)userIdsDeletedAtIndex:(NSUInteger)index;
- (PBGameSessionChangedBuilder *)addUserIdsDeleted:(NSString*)value;
- (PBGameSessionChangedBuilder *)setUserIdsDeletedArray:(NSArray *)array;
- (PBGameSessionChangedBuilder *)clearUserIdsDeleted;

- (NSMutableArray *)usersUpdated;
- (PBGameUser*)usersUpdatedAtIndex:(NSUInteger)index;
- (PBGameSessionChangedBuilder *)addUsersUpdated:(PBGameUser*)value;
- (PBGameSessionChangedBuilder *)setUsersUpdatedArray:(NSArray *)array;
- (PBGameSessionChangedBuilder *)clearUsersUpdated;
@end

@interface PBDrawBg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasShowStyle_:1;
  BOOL hasType_:1;
  BOOL hasPurpose_:1;
  BOOL hasLayerPosition_:1;
  BOOL hasBgId_:1;
  BOOL hasLocalUrl_:1;
  BOOL hasRemoteUrl_:1;
  BOOL hasTutorialId_:1;
  BOOL hasStageId_:1;
  BOOL hasTutorialBgImageName_:1;
  SInt32 showStyle;
  SInt32 type;
  SInt32 purpose;
  SInt32 layerPosition;
  NSString* bgId;
  NSString* localUrl;
  NSString* remoteUrl;
  NSString* tutorialId;
  NSString* stageId;
  NSString* tutorialBgImageName;
}
- (BOOL) hasBgId;
- (BOOL) hasLocalUrl;
- (BOOL) hasRemoteUrl;
- (BOOL) hasShowStyle;
- (BOOL) hasType;
- (BOOL) hasPurpose;
- (BOOL) hasLayerPosition;
- (BOOL) hasTutorialId;
- (BOOL) hasStageId;
- (BOOL) hasTutorialBgImageName;
@property (readonly, strong) NSString* bgId;
@property (readonly, strong) NSString* localUrl;
@property (readonly, strong) NSString* remoteUrl;
@property (readonly) SInt32 showStyle;
@property (readonly) SInt32 type;
@property (readonly) SInt32 purpose;
@property (readonly) SInt32 layerPosition;
@property (readonly, strong) NSString* tutorialId;
@property (readonly, strong) NSString* stageId;
@property (readonly, strong) NSString* tutorialBgImageName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDrawBgBuilder*) builder;
+ (PBDrawBgBuilder*) builder;
+ (PBDrawBgBuilder*) builderWithPrototype:(PBDrawBg*) prototype;
- (PBDrawBgBuilder*) toBuilder;

+ (PBDrawBg*) parseFromData:(NSData*) data;
+ (PBDrawBg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawBg*) parseFromInputStream:(NSInputStream*) input;
+ (PBDrawBg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawBg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDrawBg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDrawBgBuilder : PBGeneratedMessageBuilder {
@private
  PBDrawBg* resultPbdrawBg;
}

- (PBDrawBg*) defaultInstance;

- (PBDrawBgBuilder*) clear;
- (PBDrawBgBuilder*) clone;

- (PBDrawBg*) build;
- (PBDrawBg*) buildPartial;

- (PBDrawBgBuilder*) mergeFrom:(PBDrawBg*) other;
- (PBDrawBgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDrawBgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBgId;
- (NSString*) bgId;
- (PBDrawBgBuilder*) setBgId:(NSString*) value;
- (PBDrawBgBuilder*) clearBgId;

- (BOOL) hasLocalUrl;
- (NSString*) localUrl;
- (PBDrawBgBuilder*) setLocalUrl:(NSString*) value;
- (PBDrawBgBuilder*) clearLocalUrl;

- (BOOL) hasRemoteUrl;
- (NSString*) remoteUrl;
- (PBDrawBgBuilder*) setRemoteUrl:(NSString*) value;
- (PBDrawBgBuilder*) clearRemoteUrl;

- (BOOL) hasShowStyle;
- (SInt32) showStyle;
- (PBDrawBgBuilder*) setShowStyle:(SInt32) value;
- (PBDrawBgBuilder*) clearShowStyle;

- (BOOL) hasType;
- (SInt32) type;
- (PBDrawBgBuilder*) setType:(SInt32) value;
- (PBDrawBgBuilder*) clearType;

- (BOOL) hasPurpose;
- (SInt32) purpose;
- (PBDrawBgBuilder*) setPurpose:(SInt32) value;
- (PBDrawBgBuilder*) clearPurpose;

- (BOOL) hasLayerPosition;
- (SInt32) layerPosition;
- (PBDrawBgBuilder*) setLayerPosition:(SInt32) value;
- (PBDrawBgBuilder*) clearLayerPosition;

- (BOOL) hasTutorialId;
- (NSString*) tutorialId;
- (PBDrawBgBuilder*) setTutorialId:(NSString*) value;
- (PBDrawBgBuilder*) clearTutorialId;

- (BOOL) hasStageId;
- (NSString*) stageId;
- (PBDrawBgBuilder*) setStageId:(NSString*) value;
- (PBDrawBgBuilder*) clearStageId;

- (BOOL) hasTutorialBgImageName;
- (NSString*) tutorialBgImageName;
- (PBDrawBgBuilder*) setTutorialBgImageName:(NSString*) value;
- (PBDrawBgBuilder*) clearTutorialBgImageName;
@end

@interface PBGradient : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDivision_:1;
  Float32 division;
  PBAppendableArray * pointArray;
  PBAppendableArray * colorArray;
  SInt32 colorMemoizedSerializedSize;
}
- (BOOL) hasDivision;
@property (readonly) Float32 division;
@property (readonly, strong) PBArray * color;
@property (readonly, strong) PBArray * point;
- (SInt32)colorAtIndex:(NSUInteger)index;
- (Float32)pointAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGradientBuilder*) builder;
+ (PBGradientBuilder*) builder;
+ (PBGradientBuilder*) builderWithPrototype:(PBGradient*) prototype;
- (PBGradientBuilder*) toBuilder;

+ (PBGradient*) parseFromData:(NSData*) data;
+ (PBGradient*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGradient*) parseFromInputStream:(NSInputStream*) input;
+ (PBGradient*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGradient*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGradient*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGradientBuilder : PBGeneratedMessageBuilder {
@private
  PBGradient* resultPbgradient;
}

- (PBGradient*) defaultInstance;

- (PBGradientBuilder*) clear;
- (PBGradientBuilder*) clone;

- (PBGradient*) build;
- (PBGradient*) buildPartial;

- (PBGradientBuilder*) mergeFrom:(PBGradient*) other;
- (PBGradientBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGradientBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDivision;
- (Float32) division;
- (PBGradientBuilder*) setDivision:(Float32) value;
- (PBGradientBuilder*) clearDivision;

- (PBAppendableArray *)color;
- (SInt32)colorAtIndex:(NSUInteger)index;
- (PBGradientBuilder *)addColor:(SInt32)value;
- (PBGradientBuilder *)setColorArray:(NSArray *)array;
- (PBGradientBuilder *)setColorValues:(const SInt32 *)values count:(NSUInteger)count;
- (PBGradientBuilder *)clearColor;

- (PBAppendableArray *)point;
- (Float32)pointAtIndex:(NSUInteger)index;
- (PBGradientBuilder *)addPoint:(Float32)value;
- (PBGradientBuilder *)setPointArray:(NSArray *)array;
- (PBGradientBuilder *)setPointValues:(const Float32 *)values count:(NSUInteger)count;
- (PBGradientBuilder *)clearPoint;
@end

@interface PBLayer : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasHidden_:1;
  BOOL hasAlpha_:1;
  BOOL hasTag_:1;
  BOOL hasName_:1;
  BOOL hidden_:1;
  Float32 alpha;
  SInt32 tag;
  NSString* name;
  PBAppendableArray * rectComponentArray;
}
- (BOOL) hasTag;
- (BOOL) hasAlpha;
- (BOOL) hasName;
- (BOOL) hasHidden;
@property (readonly) SInt32 tag;
@property (readonly, strong) PBArray * rectComponent;
@property (readonly) Float32 alpha;
@property (readonly, strong) NSString* name;
- (BOOL) hidden;
- (Float32)rectComponentAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBLayerBuilder*) builder;
+ (PBLayerBuilder*) builder;
+ (PBLayerBuilder*) builderWithPrototype:(PBLayer*) prototype;
- (PBLayerBuilder*) toBuilder;

+ (PBLayer*) parseFromData:(NSData*) data;
+ (PBLayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBLayer*) parseFromInputStream:(NSInputStream*) input;
+ (PBLayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBLayer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBLayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBLayerBuilder : PBGeneratedMessageBuilder {
@private
  PBLayer* resultPblayer;
}

- (PBLayer*) defaultInstance;

- (PBLayerBuilder*) clear;
- (PBLayerBuilder*) clone;

- (PBLayer*) build;
- (PBLayer*) buildPartial;

- (PBLayerBuilder*) mergeFrom:(PBLayer*) other;
- (PBLayerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBLayerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTag;
- (SInt32) tag;
- (PBLayerBuilder*) setTag:(SInt32) value;
- (PBLayerBuilder*) clearTag;

- (PBAppendableArray *)rectComponent;
- (Float32)rectComponentAtIndex:(NSUInteger)index;
- (PBLayerBuilder *)addRectComponent:(Float32)value;
- (PBLayerBuilder *)setRectComponentArray:(NSArray *)array;
- (PBLayerBuilder *)setRectComponentValues:(const Float32 *)values count:(NSUInteger)count;
- (PBLayerBuilder *)clearRectComponent;

- (BOOL) hasAlpha;
- (Float32) alpha;
- (PBLayerBuilder*) setAlpha:(Float32) value;
- (PBLayerBuilder*) clearAlpha;

- (BOOL) hasName;
- (NSString*) name;
- (PBLayerBuilder*) setName:(NSString*) value;
- (PBLayerBuilder*) clearName;

- (BOOL) hasHidden;
- (BOOL) hidden;
- (PBLayerBuilder*) setHidden:(BOOL) value;
- (PBLayerBuilder*) clearHidden;
@end

@interface PBDrawAction : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasShapeStroke_:1;
  BOOL hasIsOptimized_:1;
  BOOL hasWidth_:1;
  BOOL hasShadowOffsetX_:1;
  BOOL hasShadowOffsetY_:1;
  BOOL hasShadowBlur_:1;
  BOOL hasLayerAlpha_:1;
  BOOL hasType_:1;
  BOOL hasColor_:1;
  BOOL hasPenType_:1;
  BOOL hasShapeType_:1;
  BOOL hasBetterColor_:1;
  BOOL hasShadowColor_:1;
  BOOL hasClipTag_:1;
  BOOL hasClipType_:1;
  BOOL hasLayerTag_:1;
  BOOL hasBrushType_:1;
  BOOL hasDrawBg_:1;
  BOOL hasGradient_:1;
  BOOL shapeStroke_:1;
  BOOL isOptimized_:1;
  Float32 width;
  Float32 shadowOffsetX;
  Float32 shadowOffsetY;
  Float32 shadowBlur;
  Float32 layerAlpha;
  SInt32 type;
  SInt32 color;
  SInt32 penType;
  SInt32 shapeType;
  SInt32 betterColor;
  SInt32 shadowColor;
  SInt32 clipTag;
  SInt32 clipType;
  SInt32 layerTag;
  SInt32 brushType;
  PBDrawBg* drawBg;
  PBGradient* gradient;
  PBAppendableArray * rectComponentArray;
  PBAppendableArray * pointsXArray;
  PBAppendableArray * pointsYArray;
  PBAppendableArray * brushPointWidthArray;
  PBAppendableArray * pointsArray;
  SInt32 pointsMemoizedSerializedSize;
  PBAppendableArray * brushRandomValueArray;
  NSMutableArray * changeLayersArray;
}
- (BOOL) hasType;
- (BOOL) hasWidth;
- (BOOL) hasColor;
- (BOOL) hasPenType;
- (BOOL) hasShapeType;
- (BOOL) hasShapeStroke;
- (BOOL) hasBetterColor;
- (BOOL) hasDrawBg;
- (BOOL) hasShadowOffsetX;
- (BOOL) hasShadowOffsetY;
- (BOOL) hasShadowColor;
- (BOOL) hasShadowBlur;
- (BOOL) hasClipTag;
- (BOOL) hasClipType;
- (BOOL) hasLayerTag;
- (BOOL) hasLayerAlpha;
- (BOOL) hasGradient;
- (BOOL) hasBrushType;
- (BOOL) hasIsOptimized;
@property (readonly) SInt32 type;
@property (readonly, strong) PBArray * points;
@property (readonly) Float32 width;
@property (readonly) SInt32 color;
@property (readonly) SInt32 penType;
@property (readonly) SInt32 shapeType;
@property (readonly, strong) PBArray * rectComponent;
- (BOOL) shapeStroke;
@property (readonly, strong) PBArray * pointsX;
@property (readonly, strong) PBArray * pointsY;
@property (readonly) SInt32 betterColor;
@property (readonly, strong) PBDrawBg* drawBg;
@property (readonly) Float32 shadowOffsetX;
@property (readonly) Float32 shadowOffsetY;
@property (readonly) SInt32 shadowColor;
@property (readonly) Float32 shadowBlur;
@property (readonly) SInt32 clipTag;
@property (readonly) SInt32 clipType;
@property (readonly) SInt32 layerTag;
@property (readonly) Float32 layerAlpha;
@property (readonly, strong) NSArray * changeLayers;
@property (readonly, strong) PBGradient* gradient;
@property (readonly) SInt32 brushType;
@property (readonly, strong) PBArray * brushPointWidth;
@property (readonly, strong) PBArray * brushRandomValue;
- (BOOL) isOptimized;
- (SInt32)pointsAtIndex:(NSUInteger)index;
- (Float32)rectComponentAtIndex:(NSUInteger)index;
- (Float32)pointsXAtIndex:(NSUInteger)index;
- (Float32)pointsYAtIndex:(NSUInteger)index;
- (PBLayer*)changeLayersAtIndex:(NSUInteger)index;
- (Float32)brushPointWidthAtIndex:(NSUInteger)index;
- (SInt32)brushRandomValueAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDrawActionBuilder*) builder;
+ (PBDrawActionBuilder*) builder;
+ (PBDrawActionBuilder*) builderWithPrototype:(PBDrawAction*) prototype;
- (PBDrawActionBuilder*) toBuilder;

+ (PBDrawAction*) parseFromData:(NSData*) data;
+ (PBDrawAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawAction*) parseFromInputStream:(NSInputStream*) input;
+ (PBDrawAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawAction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDrawAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDrawActionBuilder : PBGeneratedMessageBuilder {
@private
  PBDrawAction* resultPbdrawAction;
}

- (PBDrawAction*) defaultInstance;

- (PBDrawActionBuilder*) clear;
- (PBDrawActionBuilder*) clone;

- (PBDrawAction*) build;
- (PBDrawAction*) buildPartial;

- (PBDrawActionBuilder*) mergeFrom:(PBDrawAction*) other;
- (PBDrawActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDrawActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SInt32) type;
- (PBDrawActionBuilder*) setType:(SInt32) value;
- (PBDrawActionBuilder*) clearType;

- (PBAppendableArray *)points;
- (SInt32)pointsAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addPoints:(SInt32)value;
- (PBDrawActionBuilder *)setPointsArray:(NSArray *)array;
- (PBDrawActionBuilder *)setPointsValues:(const SInt32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearPoints;

- (BOOL) hasWidth;
- (Float32) width;
- (PBDrawActionBuilder*) setWidth:(Float32) value;
- (PBDrawActionBuilder*) clearWidth;

- (BOOL) hasColor;
- (SInt32) color;
- (PBDrawActionBuilder*) setColor:(SInt32) value;
- (PBDrawActionBuilder*) clearColor;

- (BOOL) hasPenType;
- (SInt32) penType;
- (PBDrawActionBuilder*) setPenType:(SInt32) value;
- (PBDrawActionBuilder*) clearPenType;

- (BOOL) hasShapeType;
- (SInt32) shapeType;
- (PBDrawActionBuilder*) setShapeType:(SInt32) value;
- (PBDrawActionBuilder*) clearShapeType;

- (PBAppendableArray *)rectComponent;
- (Float32)rectComponentAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addRectComponent:(Float32)value;
- (PBDrawActionBuilder *)setRectComponentArray:(NSArray *)array;
- (PBDrawActionBuilder *)setRectComponentValues:(const Float32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearRectComponent;

- (BOOL) hasShapeStroke;
- (BOOL) shapeStroke;
- (PBDrawActionBuilder*) setShapeStroke:(BOOL) value;
- (PBDrawActionBuilder*) clearShapeStroke;

- (PBAppendableArray *)pointsX;
- (Float32)pointsXAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addPointsX:(Float32)value;
- (PBDrawActionBuilder *)setPointsXArray:(NSArray *)array;
- (PBDrawActionBuilder *)setPointsXValues:(const Float32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearPointsX;

- (PBAppendableArray *)pointsY;
- (Float32)pointsYAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addPointsY:(Float32)value;
- (PBDrawActionBuilder *)setPointsYArray:(NSArray *)array;
- (PBDrawActionBuilder *)setPointsYValues:(const Float32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearPointsY;

- (BOOL) hasBetterColor;
- (SInt32) betterColor;
- (PBDrawActionBuilder*) setBetterColor:(SInt32) value;
- (PBDrawActionBuilder*) clearBetterColor;

- (BOOL) hasDrawBg;
- (PBDrawBg*) drawBg;
- (PBDrawActionBuilder*) setDrawBg:(PBDrawBg*) value;
- (PBDrawActionBuilder*) setDrawBgBuilder:(PBDrawBgBuilder*) builderForValue;
- (PBDrawActionBuilder*) mergeDrawBg:(PBDrawBg*) value;
- (PBDrawActionBuilder*) clearDrawBg;

- (BOOL) hasShadowOffsetX;
- (Float32) shadowOffsetX;
- (PBDrawActionBuilder*) setShadowOffsetX:(Float32) value;
- (PBDrawActionBuilder*) clearShadowOffsetX;

- (BOOL) hasShadowOffsetY;
- (Float32) shadowOffsetY;
- (PBDrawActionBuilder*) setShadowOffsetY:(Float32) value;
- (PBDrawActionBuilder*) clearShadowOffsetY;

- (BOOL) hasShadowColor;
- (SInt32) shadowColor;
- (PBDrawActionBuilder*) setShadowColor:(SInt32) value;
- (PBDrawActionBuilder*) clearShadowColor;

- (BOOL) hasShadowBlur;
- (Float32) shadowBlur;
- (PBDrawActionBuilder*) setShadowBlur:(Float32) value;
- (PBDrawActionBuilder*) clearShadowBlur;

- (BOOL) hasClipTag;
- (SInt32) clipTag;
- (PBDrawActionBuilder*) setClipTag:(SInt32) value;
- (PBDrawActionBuilder*) clearClipTag;

- (BOOL) hasClipType;
- (SInt32) clipType;
- (PBDrawActionBuilder*) setClipType:(SInt32) value;
- (PBDrawActionBuilder*) clearClipType;

- (BOOL) hasLayerTag;
- (SInt32) layerTag;
- (PBDrawActionBuilder*) setLayerTag:(SInt32) value;
- (PBDrawActionBuilder*) clearLayerTag;

- (BOOL) hasLayerAlpha;
- (Float32) layerAlpha;
- (PBDrawActionBuilder*) setLayerAlpha:(Float32) value;
- (PBDrawActionBuilder*) clearLayerAlpha;

- (NSMutableArray *)changeLayers;
- (PBLayer*)changeLayersAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addChangeLayers:(PBLayer*)value;
- (PBDrawActionBuilder *)setChangeLayersArray:(NSArray *)array;
- (PBDrawActionBuilder *)clearChangeLayers;

- (BOOL) hasGradient;
- (PBGradient*) gradient;
- (PBDrawActionBuilder*) setGradient:(PBGradient*) value;
- (PBDrawActionBuilder*) setGradientBuilder:(PBGradientBuilder*) builderForValue;
- (PBDrawActionBuilder*) mergeGradient:(PBGradient*) value;
- (PBDrawActionBuilder*) clearGradient;

- (BOOL) hasBrushType;
- (SInt32) brushType;
- (PBDrawActionBuilder*) setBrushType:(SInt32) value;
- (PBDrawActionBuilder*) clearBrushType;

- (PBAppendableArray *)brushPointWidth;
- (Float32)brushPointWidthAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addBrushPointWidth:(Float32)value;
- (PBDrawActionBuilder *)setBrushPointWidthArray:(NSArray *)array;
- (PBDrawActionBuilder *)setBrushPointWidthValues:(const Float32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearBrushPointWidth;

- (PBAppendableArray *)brushRandomValue;
- (SInt32)brushRandomValueAtIndex:(NSUInteger)index;
- (PBDrawActionBuilder *)addBrushRandomValue:(SInt32)value;
- (PBDrawActionBuilder *)setBrushRandomValueArray:(NSArray *)array;
- (PBDrawActionBuilder *)setBrushRandomValueValues:(const SInt32 *)values count:(NSUInteger)count;
- (PBDrawActionBuilder *)clearBrushRandomValue;

- (BOOL) hasIsOptimized;
- (BOOL) isOptimized;
- (PBDrawActionBuilder*) setIsOptimized:(BOOL) value;
- (PBDrawActionBuilder*) clearIsOptimized;
@end

@interface PBMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsGroup_:1;
  BOOL hasLongitude_:1;
  BOOL hasLatitude_:1;
  BOOL hasStatus_:1;
  BOOL hasType_:1;
  BOOL hasCreateDate_:1;
  BOOL hasDrawDataVersion_:1;
  BOOL hasReplyResult_:1;
  BOOL hasMessageId_:1;
  BOOL hasFrom_:1;
  BOOL hasTo_:1;
  BOOL hasText_:1;
  BOOL hasReqMessageId_:1;
  BOOL hasImageUrl_:1;
  BOOL hasThumbImageUrl_:1;
  BOOL hasFromUser_:1;
  BOOL hasToUser_:1;
  BOOL hasCanvasSize_:1;
  BOOL isGroup_:1;
  Float64 longitude;
  Float64 latitude;
  SInt32 status;
  SInt32 type;
  SInt32 createDate;
  SInt32 drawDataVersion;
  SInt32 replyResult;
  NSString* messageId;
  NSString* from;
  NSString* to;
  NSString* text;
  NSString* reqMessageId;
  NSString* imageUrl;
  NSString* thumbImageUrl;
  PBGameUser* fromUser;
  PBGameUser* toUser;
  PBSize* canvasSize;
  NSMutableArray * drawDataArray;
}
- (BOOL) hasMessageId;
- (BOOL) hasFrom;
- (BOOL) hasTo;
- (BOOL) hasStatus;
- (BOOL) hasType;
- (BOOL) hasIsGroup;
- (BOOL) hasFromUser;
- (BOOL) hasToUser;
- (BOOL) hasText;
- (BOOL) hasCreateDate;
- (BOOL) hasDrawDataVersion;
- (BOOL) hasCanvasSize;
- (BOOL) hasLongitude;
- (BOOL) hasLatitude;
- (BOOL) hasReqMessageId;
- (BOOL) hasReplyResult;
- (BOOL) hasImageUrl;
- (BOOL) hasThumbImageUrl;
@property (readonly, strong) NSString* messageId;
@property (readonly, strong) NSString* from;
@property (readonly, strong) NSString* to;
@property (readonly) SInt32 status;
@property (readonly) SInt32 type;
- (BOOL) isGroup;
@property (readonly, strong) PBGameUser* fromUser;
@property (readonly, strong) PBGameUser* toUser;
@property (readonly, strong) NSString* text;
@property (readonly, strong) NSArray * drawData;
@property (readonly) SInt32 createDate;
@property (readonly) SInt32 drawDataVersion;
@property (readonly, strong) PBSize* canvasSize;
@property (readonly) Float64 longitude;
@property (readonly) Float64 latitude;
@property (readonly, strong) NSString* reqMessageId;
@property (readonly) SInt32 replyResult;
@property (readonly, strong) NSString* imageUrl;
@property (readonly, strong) NSString* thumbImageUrl;
- (PBDrawAction*)drawDataAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBMessageBuilder*) builder;
+ (PBMessageBuilder*) builder;
+ (PBMessageBuilder*) builderWithPrototype:(PBMessage*) prototype;
- (PBMessageBuilder*) toBuilder;

+ (PBMessage*) parseFromData:(NSData*) data;
+ (PBMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMessage*) parseFromInputStream:(NSInputStream*) input;
+ (PBMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBMessageBuilder : PBGeneratedMessageBuilder {
@private
  PBMessage* resultPbmessage;
}

- (PBMessage*) defaultInstance;

- (PBMessageBuilder*) clear;
- (PBMessageBuilder*) clone;

- (PBMessage*) build;
- (PBMessage*) buildPartial;

- (PBMessageBuilder*) mergeFrom:(PBMessage*) other;
- (PBMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessageId;
- (NSString*) messageId;
- (PBMessageBuilder*) setMessageId:(NSString*) value;
- (PBMessageBuilder*) clearMessageId;

- (BOOL) hasFrom;
- (NSString*) from;
- (PBMessageBuilder*) setFrom:(NSString*) value;
- (PBMessageBuilder*) clearFrom;

- (BOOL) hasTo;
- (NSString*) to;
- (PBMessageBuilder*) setTo:(NSString*) value;
- (PBMessageBuilder*) clearTo;

- (BOOL) hasStatus;
- (SInt32) status;
- (PBMessageBuilder*) setStatus:(SInt32) value;
- (PBMessageBuilder*) clearStatus;

- (BOOL) hasType;
- (SInt32) type;
- (PBMessageBuilder*) setType:(SInt32) value;
- (PBMessageBuilder*) clearType;

- (BOOL) hasIsGroup;
- (BOOL) isGroup;
- (PBMessageBuilder*) setIsGroup:(BOOL) value;
- (PBMessageBuilder*) clearIsGroup;

- (BOOL) hasFromUser;
- (PBGameUser*) fromUser;
- (PBMessageBuilder*) setFromUser:(PBGameUser*) value;
- (PBMessageBuilder*) setFromUserBuilder:(PBGameUserBuilder*) builderForValue;
- (PBMessageBuilder*) mergeFromUser:(PBGameUser*) value;
- (PBMessageBuilder*) clearFromUser;

- (BOOL) hasToUser;
- (PBGameUser*) toUser;
- (PBMessageBuilder*) setToUser:(PBGameUser*) value;
- (PBMessageBuilder*) setToUserBuilder:(PBGameUserBuilder*) builderForValue;
- (PBMessageBuilder*) mergeToUser:(PBGameUser*) value;
- (PBMessageBuilder*) clearToUser;

- (BOOL) hasText;
- (NSString*) text;
- (PBMessageBuilder*) setText:(NSString*) value;
- (PBMessageBuilder*) clearText;

- (NSMutableArray *)drawData;
- (PBDrawAction*)drawDataAtIndex:(NSUInteger)index;
- (PBMessageBuilder *)addDrawData:(PBDrawAction*)value;
- (PBMessageBuilder *)setDrawDataArray:(NSArray *)array;
- (PBMessageBuilder *)clearDrawData;

- (BOOL) hasCreateDate;
- (SInt32) createDate;
- (PBMessageBuilder*) setCreateDate:(SInt32) value;
- (PBMessageBuilder*) clearCreateDate;

- (BOOL) hasDrawDataVersion;
- (SInt32) drawDataVersion;
- (PBMessageBuilder*) setDrawDataVersion:(SInt32) value;
- (PBMessageBuilder*) clearDrawDataVersion;

- (BOOL) hasCanvasSize;
- (PBSize*) canvasSize;
- (PBMessageBuilder*) setCanvasSize:(PBSize*) value;
- (PBMessageBuilder*) setCanvasSizeBuilder:(PBSizeBuilder*) builderForValue;
- (PBMessageBuilder*) mergeCanvasSize:(PBSize*) value;
- (PBMessageBuilder*) clearCanvasSize;

- (BOOL) hasLongitude;
- (Float64) longitude;
- (PBMessageBuilder*) setLongitude:(Float64) value;
- (PBMessageBuilder*) clearLongitude;

- (BOOL) hasLatitude;
- (Float64) latitude;
- (PBMessageBuilder*) setLatitude:(Float64) value;
- (PBMessageBuilder*) clearLatitude;

- (BOOL) hasReqMessageId;
- (NSString*) reqMessageId;
- (PBMessageBuilder*) setReqMessageId:(NSString*) value;
- (PBMessageBuilder*) clearReqMessageId;

- (BOOL) hasReplyResult;
- (SInt32) replyResult;
- (PBMessageBuilder*) setReplyResult:(SInt32) value;
- (PBMessageBuilder*) clearReplyResult;

- (BOOL) hasImageUrl;
- (NSString*) imageUrl;
- (PBMessageBuilder*) setImageUrl:(NSString*) value;
- (PBMessageBuilder*) clearImageUrl;

- (BOOL) hasThumbImageUrl;
- (NSString*) thumbImageUrl;
- (PBMessageBuilder*) setThumbImageUrl:(NSString*) value;
- (PBMessageBuilder*) clearThumbImageUrl;
@end

@interface PBMessageStat : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasFriendGender_:1;
  BOOL hasIsGroup_:1;
  BOOL hasIsVip_:1;
  BOOL hasCreateDate_:1;
  BOOL hasType_:1;
  BOOL hasModifiedDate_:1;
  BOOL hasTotalMessageCount_:1;
  BOOL hasNewMessageCount_:1;
  BOOL hasNewGroupMessageCount_:1;
  BOOL hasUserId_:1;
  BOOL hasFriendUserId_:1;
  BOOL hasFriendNickName_:1;
  BOOL hasFriendAvatar_:1;
  BOOL hasMessageId_:1;
  BOOL hasFrom_:1;
  BOOL hasTo_:1;
  BOOL hasText_:1;
  BOOL friendGender_:1;
  BOOL isGroup_:1;
  SInt32 isVip;
  SInt32 createDate;
  SInt32 type;
  SInt32 modifiedDate;
  SInt32 totalMessageCount;
  SInt32 newMessageCount;
  SInt32 newGroupMessageCount;
  NSString* userId;
  NSString* friendUserId;
  NSString* friendNickName;
  NSString* friendAvatar;
  NSString* messageId;
  NSString* from;
  NSString* to;
  NSString* text;
  NSMutableArray * drawDataArray;
}
- (BOOL) hasUserId;
- (BOOL) hasFriendUserId;
- (BOOL) hasFriendNickName;
- (BOOL) hasFriendAvatar;
- (BOOL) hasFriendGender;
- (BOOL) hasIsGroup;
- (BOOL) hasIsVip;
- (BOOL) hasMessageId;
- (BOOL) hasFrom;
- (BOOL) hasTo;
- (BOOL) hasText;
- (BOOL) hasCreateDate;
- (BOOL) hasType;
- (BOOL) hasModifiedDate;
- (BOOL) hasTotalMessageCount;
- (BOOL) hasNewMessageCount;
- (BOOL) hasNewGroupMessageCount;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* friendUserId;
@property (readonly, strong) NSString* friendNickName;
@property (readonly, strong) NSString* friendAvatar;
- (BOOL) friendGender;
- (BOOL) isGroup;
@property (readonly) SInt32 isVip;
@property (readonly, strong) NSString* messageId;
@property (readonly, strong) NSString* from;
@property (readonly, strong) NSString* to;
@property (readonly, strong) NSString* text;
@property (readonly, strong) NSArray * drawData;
@property (readonly) SInt32 createDate;
@property (readonly) SInt32 type;
@property (readonly) SInt32 modifiedDate;
@property (readonly) SInt32 totalMessageCount;
@property (readonly) SInt32 newMessageCount;
@property (readonly) SInt32 newGroupMessageCount;
- (PBDrawAction*)drawDataAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBMessageStatBuilder*) builder;
+ (PBMessageStatBuilder*) builder;
+ (PBMessageStatBuilder*) builderWithPrototype:(PBMessageStat*) prototype;
- (PBMessageStatBuilder*) toBuilder;

+ (PBMessageStat*) parseFromData:(NSData*) data;
+ (PBMessageStat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMessageStat*) parseFromInputStream:(NSInputStream*) input;
+ (PBMessageStat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMessageStat*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBMessageStat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBMessageStatBuilder : PBGeneratedMessageBuilder {
@private
  PBMessageStat* resultPbmessageStat;
}

- (PBMessageStat*) defaultInstance;

- (PBMessageStatBuilder*) clear;
- (PBMessageStatBuilder*) clone;

- (PBMessageStat*) build;
- (PBMessageStat*) buildPartial;

- (PBMessageStatBuilder*) mergeFrom:(PBMessageStat*) other;
- (PBMessageStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBMessageStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBMessageStatBuilder*) setUserId:(NSString*) value;
- (PBMessageStatBuilder*) clearUserId;

- (BOOL) hasFriendUserId;
- (NSString*) friendUserId;
- (PBMessageStatBuilder*) setFriendUserId:(NSString*) value;
- (PBMessageStatBuilder*) clearFriendUserId;

- (BOOL) hasFriendNickName;
- (NSString*) friendNickName;
- (PBMessageStatBuilder*) setFriendNickName:(NSString*) value;
- (PBMessageStatBuilder*) clearFriendNickName;

- (BOOL) hasFriendAvatar;
- (NSString*) friendAvatar;
- (PBMessageStatBuilder*) setFriendAvatar:(NSString*) value;
- (PBMessageStatBuilder*) clearFriendAvatar;

- (BOOL) hasFriendGender;
- (BOOL) friendGender;
- (PBMessageStatBuilder*) setFriendGender:(BOOL) value;
- (PBMessageStatBuilder*) clearFriendGender;

- (BOOL) hasIsGroup;
- (BOOL) isGroup;
- (PBMessageStatBuilder*) setIsGroup:(BOOL) value;
- (PBMessageStatBuilder*) clearIsGroup;

- (BOOL) hasIsVip;
- (SInt32) isVip;
- (PBMessageStatBuilder*) setIsVip:(SInt32) value;
- (PBMessageStatBuilder*) clearIsVip;

- (BOOL) hasMessageId;
- (NSString*) messageId;
- (PBMessageStatBuilder*) setMessageId:(NSString*) value;
- (PBMessageStatBuilder*) clearMessageId;

- (BOOL) hasFrom;
- (NSString*) from;
- (PBMessageStatBuilder*) setFrom:(NSString*) value;
- (PBMessageStatBuilder*) clearFrom;

- (BOOL) hasTo;
- (NSString*) to;
- (PBMessageStatBuilder*) setTo:(NSString*) value;
- (PBMessageStatBuilder*) clearTo;

- (BOOL) hasText;
- (NSString*) text;
- (PBMessageStatBuilder*) setText:(NSString*) value;
- (PBMessageStatBuilder*) clearText;

- (NSMutableArray *)drawData;
- (PBDrawAction*)drawDataAtIndex:(NSUInteger)index;
- (PBMessageStatBuilder *)addDrawData:(PBDrawAction*)value;
- (PBMessageStatBuilder *)setDrawDataArray:(NSArray *)array;
- (PBMessageStatBuilder *)clearDrawData;

- (BOOL) hasCreateDate;
- (SInt32) createDate;
- (PBMessageStatBuilder*) setCreateDate:(SInt32) value;
- (PBMessageStatBuilder*) clearCreateDate;

- (BOOL) hasType;
- (SInt32) type;
- (PBMessageStatBuilder*) setType:(SInt32) value;
- (PBMessageStatBuilder*) clearType;

- (BOOL) hasModifiedDate;
- (SInt32) modifiedDate;
- (PBMessageStatBuilder*) setModifiedDate:(SInt32) value;
- (PBMessageStatBuilder*) clearModifiedDate;

- (BOOL) hasTotalMessageCount;
- (SInt32) totalMessageCount;
- (PBMessageStatBuilder*) setTotalMessageCount:(SInt32) value;
- (PBMessageStatBuilder*) clearTotalMessageCount;

- (BOOL) hasNewMessageCount;
- (SInt32) newMessageCount;
- (PBMessageStatBuilder*) setNewMessageCount:(SInt32) value;
- (PBMessageStatBuilder*) clearNewMessageCount;

- (BOOL) hasNewGroupMessageCount;
- (SInt32) newGroupMessageCount;
- (PBMessageStatBuilder*) setNewGroupMessageCount:(SInt32) value;
- (PBMessageStatBuilder*) clearNewGroupMessageCount;
@end

@interface PBUserBasicInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasNickName_:1;
  BOOL hasAvatar_:1;
  BOOL hasGender_:1;
  NSString* userId;
  NSString* nickName;
  NSString* avatar;
  NSString* gender;
}
- (BOOL) hasUserId;
- (BOOL) hasNickName;
- (BOOL) hasAvatar;
- (BOOL) hasGender;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* avatar;
@property (readonly, strong) NSString* gender;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserBasicInfoBuilder*) builder;
+ (PBUserBasicInfoBuilder*) builder;
+ (PBUserBasicInfoBuilder*) builderWithPrototype:(PBUserBasicInfo*) prototype;
- (PBUserBasicInfoBuilder*) toBuilder;

+ (PBUserBasicInfo*) parseFromData:(NSData*) data;
+ (PBUserBasicInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserBasicInfo*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserBasicInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserBasicInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserBasicInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserBasicInfoBuilder : PBGeneratedMessageBuilder {
@private
  PBUserBasicInfo* resultPbuserBasicInfo;
}

- (PBUserBasicInfo*) defaultInstance;

- (PBUserBasicInfoBuilder*) clear;
- (PBUserBasicInfoBuilder*) clone;

- (PBUserBasicInfo*) build;
- (PBUserBasicInfo*) buildPartial;

- (PBUserBasicInfoBuilder*) mergeFrom:(PBUserBasicInfo*) other;
- (PBUserBasicInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserBasicInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserBasicInfoBuilder*) setUserId:(NSString*) value;
- (PBUserBasicInfoBuilder*) clearUserId;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (PBUserBasicInfoBuilder*) setNickName:(NSString*) value;
- (PBUserBasicInfoBuilder*) clearNickName;

- (BOOL) hasAvatar;
- (NSString*) avatar;
- (PBUserBasicInfoBuilder*) setAvatar:(NSString*) value;
- (PBUserBasicInfoBuilder*) clearAvatar;

- (BOOL) hasGender;
- (NSString*) gender;
- (PBUserBasicInfoBuilder*) setGender:(NSString*) value;
- (PBUserBasicInfoBuilder*) clearGender;
@end

@interface PBUserResult : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasWin_:1;
  BOOL hasGainCoins_:1;
  BOOL hasUserId_:1;
  BOOL win_:1;
  SInt32 gainCoins;
  NSString* userId;
}
- (BOOL) hasUserId;
- (BOOL) hasWin;
- (BOOL) hasGainCoins;
@property (readonly, strong) NSString* userId;
- (BOOL) win;
@property (readonly) SInt32 gainCoins;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserResultBuilder*) builder;
+ (PBUserResultBuilder*) builder;
+ (PBUserResultBuilder*) builderWithPrototype:(PBUserResult*) prototype;
- (PBUserResultBuilder*) toBuilder;

+ (PBUserResult*) parseFromData:(NSData*) data;
+ (PBUserResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserResult*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserResultBuilder : PBGeneratedMessageBuilder {
@private
  PBUserResult* resultPbuserResult;
}

- (PBUserResult*) defaultInstance;

- (PBUserResultBuilder*) clear;
- (PBUserResultBuilder*) clone;

- (PBUserResult*) build;
- (PBUserResult*) buildPartial;

- (PBUserResultBuilder*) mergeFrom:(PBUserResult*) other;
- (PBUserResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserResultBuilder*) setUserId:(NSString*) value;
- (PBUserResultBuilder*) clearUserId;

- (BOOL) hasWin;
- (BOOL) win;
- (PBUserResultBuilder*) setWin:(BOOL) value;
- (PBUserResultBuilder*) clearWin;

- (BOOL) hasGainCoins;
- (SInt32) gainCoins;
- (PBUserResultBuilder*) setGainCoins:(SInt32) value;
- (PBUserResultBuilder*) clearGainCoins;
@end

@interface PBItemPriceInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPrice_:1;
  BOOL hasCurrency_:1;
  SInt32 price;
  PBGameCurrency currency;
}
- (BOOL) hasPrice;
- (BOOL) hasCurrency;
@property (readonly) SInt32 price;
@property (readonly) PBGameCurrency currency;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBItemPriceInfoBuilder*) builder;
+ (PBItemPriceInfoBuilder*) builder;
+ (PBItemPriceInfoBuilder*) builderWithPrototype:(PBItemPriceInfo*) prototype;
- (PBItemPriceInfoBuilder*) toBuilder;

+ (PBItemPriceInfo*) parseFromData:(NSData*) data;
+ (PBItemPriceInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBItemPriceInfo*) parseFromInputStream:(NSInputStream*) input;
+ (PBItemPriceInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBItemPriceInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBItemPriceInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBItemPriceInfoBuilder : PBGeneratedMessageBuilder {
@private
  PBItemPriceInfo* resultPbitemPriceInfo;
}

- (PBItemPriceInfo*) defaultInstance;

- (PBItemPriceInfoBuilder*) clear;
- (PBItemPriceInfoBuilder*) clone;

- (PBItemPriceInfo*) build;
- (PBItemPriceInfo*) buildPartial;

- (PBItemPriceInfoBuilder*) mergeFrom:(PBItemPriceInfo*) other;
- (PBItemPriceInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBItemPriceInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrice;
- (SInt32) price;
- (PBItemPriceInfoBuilder*) setPrice:(SInt32) value;
- (PBItemPriceInfoBuilder*) clearPrice;

- (BOOL) hasCurrency;
- (PBGameCurrency) currency;
- (PBItemPriceInfoBuilder*) setCurrency:(PBGameCurrency) value;
- (PBItemPriceInfoBuilder*) clearCurrency;
@end

@interface PBPromotionInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPrice_:1;
  BOOL hasStartDate_:1;
  BOOL hasExpireDate_:1;
  SInt32 price;
  SInt32 startDate;
  SInt32 expireDate;
}
- (BOOL) hasPrice;
- (BOOL) hasStartDate;
- (BOOL) hasExpireDate;
@property (readonly) SInt32 price;
@property (readonly) SInt32 startDate;
@property (readonly) SInt32 expireDate;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBPromotionInfoBuilder*) builder;
+ (PBPromotionInfoBuilder*) builder;
+ (PBPromotionInfoBuilder*) builderWithPrototype:(PBPromotionInfo*) prototype;
- (PBPromotionInfoBuilder*) toBuilder;

+ (PBPromotionInfo*) parseFromData:(NSData*) data;
+ (PBPromotionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBPromotionInfo*) parseFromInputStream:(NSInputStream*) input;
+ (PBPromotionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBPromotionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBPromotionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBPromotionInfoBuilder : PBGeneratedMessageBuilder {
@private
  PBPromotionInfo* resultPbpromotionInfo;
}

- (PBPromotionInfo*) defaultInstance;

- (PBPromotionInfoBuilder*) clear;
- (PBPromotionInfoBuilder*) clone;

- (PBPromotionInfo*) build;
- (PBPromotionInfo*) buildPartial;

- (PBPromotionInfoBuilder*) mergeFrom:(PBPromotionInfo*) other;
- (PBPromotionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBPromotionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrice;
- (SInt32) price;
- (PBPromotionInfoBuilder*) setPrice:(SInt32) value;
- (PBPromotionInfoBuilder*) clearPrice;

- (BOOL) hasStartDate;
- (SInt32) startDate;
- (PBPromotionInfoBuilder*) setStartDate:(SInt32) value;
- (PBPromotionInfoBuilder*) clearStartDate;

- (BOOL) hasExpireDate;
- (SInt32) expireDate;
- (PBPromotionInfoBuilder*) setExpireDate:(SInt32) value;
- (PBPromotionInfoBuilder*) clearExpireDate;
@end

@interface PBGameItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasItemId_:1;
  BOOL hasType_:1;
  BOOL hasDefaultSaleCount_:1;
  BOOL hasUsageLife_:1;
  BOOL hasName_:1;
  BOOL hasDesc_:1;
  BOOL hasUrl_:1;
  BOOL hasImage_:1;
  BOOL hasDemoImage_:1;
  BOOL hasAppleProductId_:1;
  BOOL hasPriceInfo_:1;
  BOOL hasPromotionInfo_:1;
  BOOL hasConsumeType_:1;
  BOOL hasUsageLifeUnit_:1;
  SInt32 itemId;
  SInt32 type;
  SInt32 defaultSaleCount;
  SInt32 usageLife;
  NSString* name;
  NSString* desc;
  NSString* url;
  NSString* image;
  NSString* demoImage;
  NSString* appleProductId;
  PBItemPriceInfo* priceInfo;
  PBPromotionInfo* promotionInfo;
  PBGameItemConsumeType consumeType;
  PBGameTimeUnit usageLifeUnit;
}
- (BOOL) hasItemId;
- (BOOL) hasName;
- (BOOL) hasDesc;
- (BOOL) hasUrl;
- (BOOL) hasConsumeType;
- (BOOL) hasImage;
- (BOOL) hasDemoImage;
- (BOOL) hasType;
- (BOOL) hasAppleProductId;
- (BOOL) hasPriceInfo;
- (BOOL) hasPromotionInfo;
- (BOOL) hasDefaultSaleCount;
- (BOOL) hasUsageLifeUnit;
- (BOOL) hasUsageLife;
@property (readonly) SInt32 itemId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* desc;
@property (readonly, strong) NSString* url;
@property (readonly) PBGameItemConsumeType consumeType;
@property (readonly, strong) NSString* image;
@property (readonly, strong) NSString* demoImage;
@property (readonly) SInt32 type;
@property (readonly, strong) NSString* appleProductId;
@property (readonly, strong) PBItemPriceInfo* priceInfo;
@property (readonly, strong) PBPromotionInfo* promotionInfo;
@property (readonly) SInt32 defaultSaleCount;
@property (readonly) PBGameTimeUnit usageLifeUnit;
@property (readonly) SInt32 usageLife;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGameItemBuilder*) builder;
+ (PBGameItemBuilder*) builder;
+ (PBGameItemBuilder*) builderWithPrototype:(PBGameItem*) prototype;
- (PBGameItemBuilder*) toBuilder;

+ (PBGameItem*) parseFromData:(NSData*) data;
+ (PBGameItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameItem*) parseFromInputStream:(NSInputStream*) input;
+ (PBGameItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGameItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGameItemBuilder : PBGeneratedMessageBuilder {
@private
  PBGameItem* resultPbgameItem;
}

- (PBGameItem*) defaultInstance;

- (PBGameItemBuilder*) clear;
- (PBGameItemBuilder*) clone;

- (PBGameItem*) build;
- (PBGameItem*) buildPartial;

- (PBGameItemBuilder*) mergeFrom:(PBGameItem*) other;
- (PBGameItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGameItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (SInt32) itemId;
- (PBGameItemBuilder*) setItemId:(SInt32) value;
- (PBGameItemBuilder*) clearItemId;

- (BOOL) hasName;
- (NSString*) name;
- (PBGameItemBuilder*) setName:(NSString*) value;
- (PBGameItemBuilder*) clearName;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBGameItemBuilder*) setDesc:(NSString*) value;
- (PBGameItemBuilder*) clearDesc;

- (BOOL) hasUrl;
- (NSString*) url;
- (PBGameItemBuilder*) setUrl:(NSString*) value;
- (PBGameItemBuilder*) clearUrl;

- (BOOL) hasConsumeType;
- (PBGameItemConsumeType) consumeType;
- (PBGameItemBuilder*) setConsumeType:(PBGameItemConsumeType) value;
- (PBGameItemBuilder*) clearConsumeType;

- (BOOL) hasImage;
- (NSString*) image;
- (PBGameItemBuilder*) setImage:(NSString*) value;
- (PBGameItemBuilder*) clearImage;

- (BOOL) hasDemoImage;
- (NSString*) demoImage;
- (PBGameItemBuilder*) setDemoImage:(NSString*) value;
- (PBGameItemBuilder*) clearDemoImage;

- (BOOL) hasType;
- (SInt32) type;
- (PBGameItemBuilder*) setType:(SInt32) value;
- (PBGameItemBuilder*) clearType;

- (BOOL) hasAppleProductId;
- (NSString*) appleProductId;
- (PBGameItemBuilder*) setAppleProductId:(NSString*) value;
- (PBGameItemBuilder*) clearAppleProductId;

- (BOOL) hasPriceInfo;
- (PBItemPriceInfo*) priceInfo;
- (PBGameItemBuilder*) setPriceInfo:(PBItemPriceInfo*) value;
- (PBGameItemBuilder*) setPriceInfoBuilder:(PBItemPriceInfoBuilder*) builderForValue;
- (PBGameItemBuilder*) mergePriceInfo:(PBItemPriceInfo*) value;
- (PBGameItemBuilder*) clearPriceInfo;

- (BOOL) hasPromotionInfo;
- (PBPromotionInfo*) promotionInfo;
- (PBGameItemBuilder*) setPromotionInfo:(PBPromotionInfo*) value;
- (PBGameItemBuilder*) setPromotionInfoBuilder:(PBPromotionInfoBuilder*) builderForValue;
- (PBGameItemBuilder*) mergePromotionInfo:(PBPromotionInfo*) value;
- (PBGameItemBuilder*) clearPromotionInfo;

- (BOOL) hasDefaultSaleCount;
- (SInt32) defaultSaleCount;
- (PBGameItemBuilder*) setDefaultSaleCount:(SInt32) value;
- (PBGameItemBuilder*) clearDefaultSaleCount;

- (BOOL) hasUsageLifeUnit;
- (PBGameTimeUnit) usageLifeUnit;
- (PBGameItemBuilder*) setUsageLifeUnit:(PBGameTimeUnit) value;
- (PBGameItemBuilder*) clearUsageLifeUnit;

- (BOOL) hasUsageLife;
- (SInt32) usageLife;
- (PBGameItemBuilder*) setUsageLife:(SInt32) value;
- (PBGameItemBuilder*) clearUsageLife;
@end

@interface PBGameItemList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * itemsArray;
}
@property (readonly, strong) NSArray * items;
- (PBGameItem*)itemsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGameItemListBuilder*) builder;
+ (PBGameItemListBuilder*) builder;
+ (PBGameItemListBuilder*) builderWithPrototype:(PBGameItemList*) prototype;
- (PBGameItemListBuilder*) toBuilder;

+ (PBGameItemList*) parseFromData:(NSData*) data;
+ (PBGameItemList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameItemList*) parseFromInputStream:(NSInputStream*) input;
+ (PBGameItemList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGameItemList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGameItemList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGameItemListBuilder : PBGeneratedMessageBuilder {
@private
  PBGameItemList* resultPbgameItemList;
}

- (PBGameItemList*) defaultInstance;

- (PBGameItemListBuilder*) clear;
- (PBGameItemListBuilder*) clone;

- (PBGameItemList*) build;
- (PBGameItemList*) buildPartial;

- (PBGameItemListBuilder*) mergeFrom:(PBGameItemList*) other;
- (PBGameItemListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGameItemListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)items;
- (PBGameItem*)itemsAtIndex:(NSUInteger)index;
- (PBGameItemListBuilder *)addItems:(PBGameItem*)value;
- (PBGameItemListBuilder *)setItemsArray:(NSArray *)array;
- (PBGameItemListBuilder *)clearItems;
@end

@interface PBIAPProduct : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCount_:1;
  BOOL hasAppleProductId_:1;
  BOOL hasapyProductId_:1;
  BOOL hasName_:1;
  BOOL hasDesc_:1;
  BOOL hasTotalPrice_:1;
  BOOL hasCurrency_:1;
  BOOL hasCountry_:1;
  BOOL hasSaving_:1;
  BOOL hasTaobaoUrl_:1;
  BOOL hasType_:1;
  SInt32 count;
  NSString* appleProductId;
  NSString* apyProductId;
  NSString* name;
  NSString* desc;
  NSString* totalPrice;
  NSString* currency;
  NSString* country;
  NSString* saving;
  NSString* taobaoUrl;
  PBIAPProductType type;
  NSMutableArray * pricesArray;
}
- (BOOL) hasType;
- (BOOL) hasAppleProductId;
- (BOOL) hasapyProductId;
- (BOOL) hasName;
- (BOOL) hasDesc;
- (BOOL) hasCount;
- (BOOL) hasTotalPrice;
- (BOOL) hasCurrency;
- (BOOL) hasCountry;
- (BOOL) hasSaving;
- (BOOL) hasTaobaoUrl;
@property (readonly) PBIAPProductType type;
@property (readonly, strong) NSString* appleProductId;
@property (readonly, strong) NSString* apyProductId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* desc;
@property (readonly) SInt32 count;
@property (readonly, strong) NSString* totalPrice;
@property (readonly, strong) NSString* currency;
@property (readonly, strong) NSString* country;
@property (readonly, strong) NSString* saving;
@property (readonly, strong) NSString* taobaoUrl;
@property (readonly, strong) NSArray * prices;
- (PBIAPProductPrice*)pricesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBIAPProductBuilder*) builder;
+ (PBIAPProductBuilder*) builder;
+ (PBIAPProductBuilder*) builderWithPrototype:(PBIAPProduct*) prototype;
- (PBIAPProductBuilder*) toBuilder;

+ (PBIAPProduct*) parseFromData:(NSData*) data;
+ (PBIAPProduct*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProduct*) parseFromInputStream:(NSInputStream*) input;
+ (PBIAPProduct*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProduct*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBIAPProduct*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBIAPProductBuilder : PBGeneratedMessageBuilder {
@private
  PBIAPProduct* resultPbiapproduct;
}

- (PBIAPProduct*) defaultInstance;

- (PBIAPProductBuilder*) clear;
- (PBIAPProductBuilder*) clone;

- (PBIAPProduct*) build;
- (PBIAPProduct*) buildPartial;

- (PBIAPProductBuilder*) mergeFrom:(PBIAPProduct*) other;
- (PBIAPProductBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBIAPProductBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (PBIAPProductType) type;
- (PBIAPProductBuilder*) setType:(PBIAPProductType) value;
- (PBIAPProductBuilder*) clearType;

- (BOOL) hasAppleProductId;
- (NSString*) appleProductId;
- (PBIAPProductBuilder*) setAppleProductId:(NSString*) value;
- (PBIAPProductBuilder*) clearAppleProductId;

- (BOOL) hasapyProductId;
- (NSString*) apyProductId;
- (PBIAPProductBuilder*) setapyProductId:(NSString*) value;
- (PBIAPProductBuilder*) clearapyProductId;

- (BOOL) hasName;
- (NSString*) name;
- (PBIAPProductBuilder*) setName:(NSString*) value;
- (PBIAPProductBuilder*) clearName;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBIAPProductBuilder*) setDesc:(NSString*) value;
- (PBIAPProductBuilder*) clearDesc;

- (BOOL) hasCount;
- (SInt32) count;
- (PBIAPProductBuilder*) setCount:(SInt32) value;
- (PBIAPProductBuilder*) clearCount;

- (BOOL) hasTotalPrice;
- (NSString*) totalPrice;
- (PBIAPProductBuilder*) setTotalPrice:(NSString*) value;
- (PBIAPProductBuilder*) clearTotalPrice;

- (BOOL) hasCurrency;
- (NSString*) currency;
- (PBIAPProductBuilder*) setCurrency:(NSString*) value;
- (PBIAPProductBuilder*) clearCurrency;

- (BOOL) hasCountry;
- (NSString*) country;
- (PBIAPProductBuilder*) setCountry:(NSString*) value;
- (PBIAPProductBuilder*) clearCountry;

- (BOOL) hasSaving;
- (NSString*) saving;
- (PBIAPProductBuilder*) setSaving:(NSString*) value;
- (PBIAPProductBuilder*) clearSaving;

- (BOOL) hasTaobaoUrl;
- (NSString*) taobaoUrl;
- (PBIAPProductBuilder*) setTaobaoUrl:(NSString*) value;
- (PBIAPProductBuilder*) clearTaobaoUrl;

- (NSMutableArray *)prices;
- (PBIAPProductPrice*)pricesAtIndex:(NSUInteger)index;
- (PBIAPProductBuilder *)addPrices:(PBIAPProductPrice*)value;
- (PBIAPProductBuilder *)setPricesArray:(NSArray *)array;
- (PBIAPProductBuilder *)clearPrices;
@end

@interface PBIAPProductPrice : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPrice_:1;
  BOOL hasCurrency_:1;
  BOOL hasCountry_:1;
  BOOL hasSaving_:1;
  NSString* price;
  NSString* currency;
  NSString* country;
  NSString* saving;
}
- (BOOL) hasPrice;
- (BOOL) hasCurrency;
- (BOOL) hasCountry;
- (BOOL) hasSaving;
@property (readonly, strong) NSString* price;
@property (readonly, strong) NSString* currency;
@property (readonly, strong) NSString* country;
@property (readonly, strong) NSString* saving;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBIAPProductPriceBuilder*) builder;
+ (PBIAPProductPriceBuilder*) builder;
+ (PBIAPProductPriceBuilder*) builderWithPrototype:(PBIAPProductPrice*) prototype;
- (PBIAPProductPriceBuilder*) toBuilder;

+ (PBIAPProductPrice*) parseFromData:(NSData*) data;
+ (PBIAPProductPrice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProductPrice*) parseFromInputStream:(NSInputStream*) input;
+ (PBIAPProductPrice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProductPrice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBIAPProductPrice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBIAPProductPriceBuilder : PBGeneratedMessageBuilder {
@private
  PBIAPProductPrice* resultPbiapproductPrice;
}

- (PBIAPProductPrice*) defaultInstance;

- (PBIAPProductPriceBuilder*) clear;
- (PBIAPProductPriceBuilder*) clone;

- (PBIAPProductPrice*) build;
- (PBIAPProductPrice*) buildPartial;

- (PBIAPProductPriceBuilder*) mergeFrom:(PBIAPProductPrice*) other;
- (PBIAPProductPriceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBIAPProductPriceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrice;
- (NSString*) price;
- (PBIAPProductPriceBuilder*) setPrice:(NSString*) value;
- (PBIAPProductPriceBuilder*) clearPrice;

- (BOOL) hasCurrency;
- (NSString*) currency;
- (PBIAPProductPriceBuilder*) setCurrency:(NSString*) value;
- (PBIAPProductPriceBuilder*) clearCurrency;

- (BOOL) hasCountry;
- (NSString*) country;
- (PBIAPProductPriceBuilder*) setCountry:(NSString*) value;
- (PBIAPProductPriceBuilder*) clearCountry;

- (BOOL) hasSaving;
- (NSString*) saving;
- (PBIAPProductPriceBuilder*) setSaving:(NSString*) value;
- (PBIAPProductPriceBuilder*) clearSaving;
@end

@interface PBIAPProductList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * productsArray;
}
@property (readonly, strong) NSArray * products;
- (PBIAPProduct*)productsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBIAPProductListBuilder*) builder;
+ (PBIAPProductListBuilder*) builder;
+ (PBIAPProductListBuilder*) builderWithPrototype:(PBIAPProductList*) prototype;
- (PBIAPProductListBuilder*) toBuilder;

+ (PBIAPProductList*) parseFromData:(NSData*) data;
+ (PBIAPProductList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProductList*) parseFromInputStream:(NSInputStream*) input;
+ (PBIAPProductList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBIAPProductList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBIAPProductList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBIAPProductListBuilder : PBGeneratedMessageBuilder {
@private
  PBIAPProductList* resultPbiapproductList;
}

- (PBIAPProductList*) defaultInstance;

- (PBIAPProductListBuilder*) clear;
- (PBIAPProductListBuilder*) clone;

- (PBIAPProductList*) build;
- (PBIAPProductList*) buildPartial;

- (PBIAPProductListBuilder*) mergeFrom:(PBIAPProductList*) other;
- (PBIAPProductListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBIAPProductListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)products;
- (PBIAPProduct*)productsAtIndex:(NSUInteger)index;
- (PBIAPProductListBuilder *)addProducts:(PBIAPProduct*)value;
- (PBIAPProductListBuilder *)setProductsArray:(NSArray *)array;
- (PBIAPProductListBuilder *)clearProducts;
@end

@interface PBUserItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasItemId_:1;
  BOOL hasCount_:1;
  BOOL hasCreateDate_:1;
  BOOL hasModifyDate_:1;
  BOOL hasExpireDate_:1;
  SInt32 itemId;
  SInt32 count;
  SInt32 createDate;
  SInt32 modifyDate;
  SInt32 expireDate;
}
- (BOOL) hasItemId;
- (BOOL) hasCount;
- (BOOL) hasCreateDate;
- (BOOL) hasModifyDate;
- (BOOL) hasExpireDate;
@property (readonly) SInt32 itemId;
@property (readonly) SInt32 count;
@property (readonly) SInt32 createDate;
@property (readonly) SInt32 modifyDate;
@property (readonly) SInt32 expireDate;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserItemBuilder*) builder;
+ (PBUserItemBuilder*) builder;
+ (PBUserItemBuilder*) builderWithPrototype:(PBUserItem*) prototype;
- (PBUserItemBuilder*) toBuilder;

+ (PBUserItem*) parseFromData:(NSData*) data;
+ (PBUserItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserItem*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserItemBuilder : PBGeneratedMessageBuilder {
@private
  PBUserItem* resultPbuserItem;
}

- (PBUserItem*) defaultInstance;

- (PBUserItemBuilder*) clear;
- (PBUserItemBuilder*) clone;

- (PBUserItem*) build;
- (PBUserItem*) buildPartial;

- (PBUserItemBuilder*) mergeFrom:(PBUserItem*) other;
- (PBUserItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (SInt32) itemId;
- (PBUserItemBuilder*) setItemId:(SInt32) value;
- (PBUserItemBuilder*) clearItemId;

- (BOOL) hasCount;
- (SInt32) count;
- (PBUserItemBuilder*) setCount:(SInt32) value;
- (PBUserItemBuilder*) clearCount;

- (BOOL) hasCreateDate;
- (SInt32) createDate;
- (PBUserItemBuilder*) setCreateDate:(SInt32) value;
- (PBUserItemBuilder*) clearCreateDate;

- (BOOL) hasModifyDate;
- (SInt32) modifyDate;
- (PBUserItemBuilder*) setModifyDate:(SInt32) value;
- (PBUserItemBuilder*) clearModifyDate;

- (BOOL) hasExpireDate;
- (SInt32) expireDate;
- (PBUserItemBuilder*) setExpireDate:(SInt32) value;
- (PBUserItemBuilder*) clearExpireDate;
@end

@interface PBUserItemList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * userItemsArray;
}
@property (readonly, strong) NSArray * userItems;
- (PBUserItem*)userItemsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserItemListBuilder*) builder;
+ (PBUserItemListBuilder*) builder;
+ (PBUserItemListBuilder*) builderWithPrototype:(PBUserItemList*) prototype;
- (PBUserItemListBuilder*) toBuilder;

+ (PBUserItemList*) parseFromData:(NSData*) data;
+ (PBUserItemList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserItemList*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserItemList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserItemList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserItemList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserItemListBuilder : PBGeneratedMessageBuilder {
@private
  PBUserItemList* resultPbuserItemList;
}

- (PBUserItemList*) defaultInstance;

- (PBUserItemListBuilder*) clear;
- (PBUserItemListBuilder*) clone;

- (PBUserItemList*) build;
- (PBUserItemList*) buildPartial;

- (PBUserItemListBuilder*) mergeFrom:(PBUserItemList*) other;
- (PBUserItemListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserItemListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userItems;
- (PBUserItem*)userItemsAtIndex:(NSUInteger)index;
- (PBUserItemListBuilder *)addUserItems:(PBUserItem*)value;
- (PBUserItemListBuilder *)setUserItemsArray:(NSArray *)array;
- (PBUserItemListBuilder *)clearUserItems;
@end

@interface PBLocalizeString : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLanguageCode_:1;
  BOOL hasText_:1;
  BOOL hasLocalizedText_:1;
  NSString* languageCode;
  NSString* text;
  NSString* localizedText;
}
- (BOOL) hasLanguageCode;
- (BOOL) hasText;
- (BOOL) hasLocalizedText;
@property (readonly, strong) NSString* languageCode;
@property (readonly, strong) NSString* text;
@property (readonly, strong) NSString* localizedText;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBLocalizeStringBuilder*) builder;
+ (PBLocalizeStringBuilder*) builder;
+ (PBLocalizeStringBuilder*) builderWithPrototype:(PBLocalizeString*) prototype;
- (PBLocalizeStringBuilder*) toBuilder;

+ (PBLocalizeString*) parseFromData:(NSData*) data;
+ (PBLocalizeString*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBLocalizeString*) parseFromInputStream:(NSInputStream*) input;
+ (PBLocalizeString*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBLocalizeString*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBLocalizeString*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBLocalizeStringBuilder : PBGeneratedMessageBuilder {
@private
  PBLocalizeString* resultPblocalizeString;
}

- (PBLocalizeString*) defaultInstance;

- (PBLocalizeStringBuilder*) clear;
- (PBLocalizeStringBuilder*) clone;

- (PBLocalizeString*) build;
- (PBLocalizeString*) buildPartial;

- (PBLocalizeStringBuilder*) mergeFrom:(PBLocalizeString*) other;
- (PBLocalizeStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBLocalizeStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLanguageCode;
- (NSString*) languageCode;
- (PBLocalizeStringBuilder*) setLanguageCode:(NSString*) value;
- (PBLocalizeStringBuilder*) clearLanguageCode;

- (BOOL) hasText;
- (NSString*) text;
- (PBLocalizeStringBuilder*) setText:(NSString*) value;
- (PBLocalizeStringBuilder*) clearText;

- (BOOL) hasLocalizedText;
- (NSString*) localizedText;
- (PBLocalizeStringBuilder*) setLocalizedText:(NSString*) value;
- (PBLocalizeStringBuilder*) clearLocalizedText;
@end

@interface PBApp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAppId_:1;
  BOOL hasDownloadUrl_:1;
  BOOL hasLogo_:1;
  NSString* appId;
  NSString* downloadUrl;
  NSString* logo;
  NSMutableArray * nameArray;
  NSMutableArray * descArray;
}
- (BOOL) hasAppId;
- (BOOL) hasDownloadUrl;
- (BOOL) hasLogo;
@property (readonly, strong) NSArray * name;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) NSArray * desc;
@property (readonly, strong) NSString* downloadUrl;
@property (readonly, strong) NSString* logo;
- (PBLocalizeString*)nameAtIndex:(NSUInteger)index;
- (PBLocalizeString*)descAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBAppBuilder*) builder;
+ (PBAppBuilder*) builder;
+ (PBAppBuilder*) builderWithPrototype:(PBApp*) prototype;
- (PBAppBuilder*) toBuilder;

+ (PBApp*) parseFromData:(NSData*) data;
+ (PBApp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBApp*) parseFromInputStream:(NSInputStream*) input;
+ (PBApp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBApp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBApp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBAppBuilder : PBGeneratedMessageBuilder {
@private
  PBApp* resultPbapp;
}

- (PBApp*) defaultInstance;

- (PBAppBuilder*) clear;
- (PBAppBuilder*) clone;

- (PBApp*) build;
- (PBApp*) buildPartial;

- (PBAppBuilder*) mergeFrom:(PBApp*) other;
- (PBAppBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBAppBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)name;
- (PBLocalizeString*)nameAtIndex:(NSUInteger)index;
- (PBAppBuilder *)addName:(PBLocalizeString*)value;
- (PBAppBuilder *)setNameArray:(NSArray *)array;
- (PBAppBuilder *)clearName;

- (BOOL) hasAppId;
- (NSString*) appId;
- (PBAppBuilder*) setAppId:(NSString*) value;
- (PBAppBuilder*) clearAppId;

- (NSMutableArray *)desc;
- (PBLocalizeString*)descAtIndex:(NSUInteger)index;
- (PBAppBuilder *)addDesc:(PBLocalizeString*)value;
- (PBAppBuilder *)setDescArray:(NSArray *)array;
- (PBAppBuilder *)clearDesc;

- (BOOL) hasDownloadUrl;
- (NSString*) downloadUrl;
- (PBAppBuilder*) setDownloadUrl:(NSString*) value;
- (PBAppBuilder*) clearDownloadUrl;

- (BOOL) hasLogo;
- (NSString*) logo;
- (PBAppBuilder*) setLogo:(NSString*) value;
- (PBAppBuilder*) clearLogo;
@end

@interface PBSize : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasWidth_:1;
  BOOL hasHeight_:1;
  Float32 width;
  Float32 height;
}
- (BOOL) hasWidth;
- (BOOL) hasHeight;
@property (readonly) Float32 width;
@property (readonly) Float32 height;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSizeBuilder*) builder;
+ (PBSizeBuilder*) builder;
+ (PBSizeBuilder*) builderWithPrototype:(PBSize*) prototype;
- (PBSizeBuilder*) toBuilder;

+ (PBSize*) parseFromData:(NSData*) data;
+ (PBSize*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSize*) parseFromInputStream:(NSInputStream*) input;
+ (PBSize*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSize*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSize*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSizeBuilder : PBGeneratedMessageBuilder {
@private
  PBSize* resultPbsize;
}

- (PBSize*) defaultInstance;

- (PBSizeBuilder*) clear;
- (PBSizeBuilder*) clone;

- (PBSize*) build;
- (PBSize*) buildPartial;

- (PBSizeBuilder*) mergeFrom:(PBSize*) other;
- (PBSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWidth;
- (Float32) width;
- (PBSizeBuilder*) setWidth:(Float32) value;
- (PBSizeBuilder*) clearWidth;

- (BOOL) hasHeight;
- (Float32) height;
- (PBSizeBuilder*) setHeight:(Float32) value;
- (PBSizeBuilder*) clearHeight;
@end

@interface PBOpusRank : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasType_:1;
  BOOL hasValue_:1;
  BOOL hasUserId_:1;
  SInt32 type;
  SInt32 value;
  NSString* userId;
}
- (BOOL) hasType;
- (BOOL) hasValue;
- (BOOL) hasUserId;
@property (readonly) SInt32 type;
@property (readonly) SInt32 value;
@property (readonly, strong) NSString* userId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusRankBuilder*) builder;
+ (PBOpusRankBuilder*) builder;
+ (PBOpusRankBuilder*) builderWithPrototype:(PBOpusRank*) prototype;
- (PBOpusRankBuilder*) toBuilder;

+ (PBOpusRank*) parseFromData:(NSData*) data;
+ (PBOpusRank*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusRank*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpusRank*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusRank*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpusRank*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusRankBuilder : PBGeneratedMessageBuilder {
@private
  PBOpusRank* resultPbopusRank;
}

- (PBOpusRank*) defaultInstance;

- (PBOpusRankBuilder*) clear;
- (PBOpusRankBuilder*) clone;

- (PBOpusRank*) build;
- (PBOpusRank*) buildPartial;

- (PBOpusRankBuilder*) mergeFrom:(PBOpusRank*) other;
- (PBOpusRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SInt32) type;
- (PBOpusRankBuilder*) setType:(SInt32) value;
- (PBOpusRankBuilder*) clearType;

- (BOOL) hasValue;
- (SInt32) value;
- (PBOpusRankBuilder*) setValue:(SInt32) value;
- (PBOpusRankBuilder*) clearValue;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBOpusRankBuilder*) setUserId:(NSString*) value;
- (PBOpusRankBuilder*) clearUserId;
@end

@interface PBUserAward : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasScore_:1;
  BOOL hasRank_:1;
  BOOL hasCoins_:1;
  BOOL hasCreateDate_:1;
  BOOL hasOpusId_:1;
  BOOL hasContestId_:1;
  BOOL hasAwardType_:1;
  BOOL hasUser_:1;
  Float32 score;
  SInt32 rank;
  SInt32 coins;
  SInt32 createDate;
  NSString* opusId;
  NSString* contestId;
  PBIntKeyValue* awardType;
  PBGameUser* user;
}
- (BOOL) hasAwardType;
- (BOOL) hasUser;
- (BOOL) hasRank;
- (BOOL) hasScore;
- (BOOL) hasCoins;
- (BOOL) hasOpusId;
- (BOOL) hasCreateDate;
- (BOOL) hasContestId;
@property (readonly, strong) PBIntKeyValue* awardType;
@property (readonly, strong) PBGameUser* user;
@property (readonly) SInt32 rank;
@property (readonly) Float32 score;
@property (readonly) SInt32 coins;
@property (readonly, strong) NSString* opusId;
@property (readonly) SInt32 createDate;
@property (readonly, strong) NSString* contestId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserAwardBuilder*) builder;
+ (PBUserAwardBuilder*) builder;
+ (PBUserAwardBuilder*) builderWithPrototype:(PBUserAward*) prototype;
- (PBUserAwardBuilder*) toBuilder;

+ (PBUserAward*) parseFromData:(NSData*) data;
+ (PBUserAward*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserAward*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserAward*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserAward*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserAward*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserAwardBuilder : PBGeneratedMessageBuilder {
@private
  PBUserAward* resultPbuserAward;
}

- (PBUserAward*) defaultInstance;

- (PBUserAwardBuilder*) clear;
- (PBUserAwardBuilder*) clone;

- (PBUserAward*) build;
- (PBUserAward*) buildPartial;

- (PBUserAwardBuilder*) mergeFrom:(PBUserAward*) other;
- (PBUserAwardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserAwardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAwardType;
- (PBIntKeyValue*) awardType;
- (PBUserAwardBuilder*) setAwardType:(PBIntKeyValue*) value;
- (PBUserAwardBuilder*) setAwardTypeBuilder:(PBIntKeyValueBuilder*) builderForValue;
- (PBUserAwardBuilder*) mergeAwardType:(PBIntKeyValue*) value;
- (PBUserAwardBuilder*) clearAwardType;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (PBUserAwardBuilder*) setUser:(PBGameUser*) value;
- (PBUserAwardBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (PBUserAwardBuilder*) mergeUser:(PBGameUser*) value;
- (PBUserAwardBuilder*) clearUser;

- (BOOL) hasRank;
- (SInt32) rank;
- (PBUserAwardBuilder*) setRank:(SInt32) value;
- (PBUserAwardBuilder*) clearRank;

- (BOOL) hasScore;
- (Float32) score;
- (PBUserAwardBuilder*) setScore:(Float32) value;
- (PBUserAwardBuilder*) clearScore;

- (BOOL) hasCoins;
- (SInt32) coins;
- (PBUserAwardBuilder*) setCoins:(SInt32) value;
- (PBUserAwardBuilder*) clearCoins;

- (BOOL) hasOpusId;
- (NSString*) opusId;
- (PBUserAwardBuilder*) setOpusId:(NSString*) value;
- (PBUserAwardBuilder*) clearOpusId;

- (BOOL) hasCreateDate;
- (SInt32) createDate;
- (PBUserAwardBuilder*) setCreateDate:(SInt32) value;
- (PBUserAwardBuilder*) clearCreateDate;

- (BOOL) hasContestId;
- (NSString*) contestId;
- (PBUserAwardBuilder*) setContestId:(NSString*) value;
- (PBUserAwardBuilder*) clearContestId;
@end

@interface PBTask : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTaskId_:1;
  BOOL hasBadge_:1;
  BOOL hasAward_:1;
  BOOL hasName_:1;
  BOOL hasDesc_:1;
  BOOL hasStatus_:1;
  SInt32 taskId;
  SInt32 badge;
  SInt32 award;
  NSString* name;
  NSString* desc;
  PBTaskStatus status;
}
- (BOOL) hasTaskId;
- (BOOL) hasName;
- (BOOL) hasDesc;
- (BOOL) hasStatus;
- (BOOL) hasBadge;
- (BOOL) hasAward;
@property (readonly) SInt32 taskId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* desc;
@property (readonly) PBTaskStatus status;
@property (readonly) SInt32 badge;
@property (readonly) SInt32 award;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBTaskBuilder*) builder;
+ (PBTaskBuilder*) builder;
+ (PBTaskBuilder*) builderWithPrototype:(PBTask*) prototype;
- (PBTaskBuilder*) toBuilder;

+ (PBTask*) parseFromData:(NSData*) data;
+ (PBTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBTask*) parseFromInputStream:(NSInputStream*) input;
+ (PBTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBTask*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBTaskBuilder : PBGeneratedMessageBuilder {
@private
  PBTask* resultPbtask;
}

- (PBTask*) defaultInstance;

- (PBTaskBuilder*) clear;
- (PBTaskBuilder*) clone;

- (PBTask*) build;
- (PBTask*) buildPartial;

- (PBTaskBuilder*) mergeFrom:(PBTask*) other;
- (PBTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTaskId;
- (SInt32) taskId;
- (PBTaskBuilder*) setTaskId:(SInt32) value;
- (PBTaskBuilder*) clearTaskId;

- (BOOL) hasName;
- (NSString*) name;
- (PBTaskBuilder*) setName:(NSString*) value;
- (PBTaskBuilder*) clearName;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBTaskBuilder*) setDesc:(NSString*) value;
- (PBTaskBuilder*) clearDesc;

- (BOOL) hasStatus;
- (PBTaskStatus) status;
- (PBTaskBuilder*) setStatus:(PBTaskStatus) value;
- (PBTaskBuilder*) clearStatus;

- (BOOL) hasBadge;
- (SInt32) badge;
- (PBTaskBuilder*) setBadge:(SInt32) value;
- (PBTaskBuilder*) clearBadge;

- (BOOL) hasAward;
- (SInt32) award;
- (PBTaskBuilder*) setAward:(SInt32) value;
- (PBTaskBuilder*) clearAward;
@end

@interface PBClass : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsTopClass_:1;
  BOOL hasClassId_:1;
  BOOL hasDesc_:1;
  BOOL hasCnName_:1;
  BOOL hasEnName_:1;
  BOOL hasTcnName_:1;
  BOOL hasParentClass_:1;
  BOOL isTopClass_:1;
  NSString* classId;
  NSString* desc;
  NSString* cnName;
  NSString* enName;
  NSString* tcnName;
  PBClass* parentClass;
  NSMutableArray * keywordsArray;
  NSMutableArray * subClassesArray;
}
- (BOOL) hasClassId;
- (BOOL) hasDesc;
- (BOOL) hasIsTopClass;
- (BOOL) hasParentClass;
- (BOOL) hasCnName;
- (BOOL) hasEnName;
- (BOOL) hasTcnName;
@property (readonly, strong) NSString* classId;
@property (readonly, strong) NSArray * subClasses;
@property (readonly, strong) NSArray * keywords;
@property (readonly, strong) NSString* desc;
- (BOOL) isTopClass;
@property (readonly, strong) PBClass* parentClass;
@property (readonly, strong) NSString* cnName;
@property (readonly, strong) NSString* enName;
@property (readonly, strong) NSString* tcnName;
- (PBClass*)subClassesAtIndex:(NSUInteger)index;
- (NSString*)keywordsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBClassBuilder*) builder;
+ (PBClassBuilder*) builder;
+ (PBClassBuilder*) builderWithPrototype:(PBClass*) prototype;
- (PBClassBuilder*) toBuilder;

+ (PBClass*) parseFromData:(NSData*) data;
+ (PBClass*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBClass*) parseFromInputStream:(NSInputStream*) input;
+ (PBClass*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBClass*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBClass*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBClassBuilder : PBGeneratedMessageBuilder {
@private
  PBClass* resultPbclass;
}

- (PBClass*) defaultInstance;

- (PBClassBuilder*) clear;
- (PBClassBuilder*) clone;

- (PBClass*) build;
- (PBClass*) buildPartial;

- (PBClassBuilder*) mergeFrom:(PBClass*) other;
- (PBClassBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBClassBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClassId;
- (NSString*) classId;
- (PBClassBuilder*) setClassId:(NSString*) value;
- (PBClassBuilder*) clearClassId;

- (NSMutableArray *)subClasses;
- (PBClass*)subClassesAtIndex:(NSUInteger)index;
- (PBClassBuilder *)addSubClasses:(PBClass*)value;
- (PBClassBuilder *)setSubClassesArray:(NSArray *)array;
- (PBClassBuilder *)clearSubClasses;

- (NSMutableArray *)keywords;
- (NSString*)keywordsAtIndex:(NSUInteger)index;
- (PBClassBuilder *)addKeywords:(NSString*)value;
- (PBClassBuilder *)setKeywordsArray:(NSArray *)array;
- (PBClassBuilder *)clearKeywords;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBClassBuilder*) setDesc:(NSString*) value;
- (PBClassBuilder*) clearDesc;

- (BOOL) hasIsTopClass;
- (BOOL) isTopClass;
- (PBClassBuilder*) setIsTopClass:(BOOL) value;
- (PBClassBuilder*) clearIsTopClass;

- (BOOL) hasParentClass;
- (PBClass*) parentClass;
- (PBClassBuilder*) setParentClass:(PBClass*) value;
- (PBClassBuilder*) setParentClassBuilder:(PBClassBuilder*) builderForValue;
- (PBClassBuilder*) mergeParentClass:(PBClass*) value;
- (PBClassBuilder*) clearParentClass;

- (BOOL) hasCnName;
- (NSString*) cnName;
- (PBClassBuilder*) setCnName:(NSString*) value;
- (PBClassBuilder*) clearCnName;

- (BOOL) hasEnName;
- (NSString*) enName;
- (PBClassBuilder*) setEnName:(NSString*) value;
- (PBClassBuilder*) clearEnName;

- (BOOL) hasTcnName;
- (NSString*) tcnName;
- (PBClassBuilder*) setTcnName:(NSString*) value;
- (PBClassBuilder*) clearTcnName;
@end


// @@protoc_insertion_point(global_scope)
