// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameBasic.pb.h"

@class PBDice;
@class PBDiceGameResult;
@class PBDiceGameResult_Builder;
@class PBDice_Builder;
@class PBDrawAction;
@class PBDrawAction_Builder;
@class PBGameSession;
@class PBGameSessionChanged;
@class PBGameSessionChanged_Builder;
@class PBGameSession_Builder;
@class PBGameUser;
@class PBGameUser_Builder;
@class PBMessage;
@class PBMessageStat;
@class PBMessageStat_Builder;
@class PBMessage_Builder;
@class PBSNSUser;
@class PBSNSUser_Builder;
@class PBUserDice;
@class PBUserDice_Builder;
@class PBUserResult;
@class PBUserResult_Builder;

@interface DiceRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBDice : PBGeneratedMessage {
@private
  BOOL hasDiceId_:1;
  BOOL hasDice_:1;
  int32_t diceId;
  int32_t dice;
}
- (BOOL) hasDiceId;
- (BOOL) hasDice;
@property (readonly) int32_t diceId;
@property (readonly) int32_t dice;

+ (PBDice*) defaultInstance;
- (PBDice*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDice_Builder*) builder;
+ (PBDice_Builder*) builder;
+ (PBDice_Builder*) builderWithPrototype:(PBDice*) prototype;

+ (PBDice*) parseFromData:(NSData*) data;
+ (PBDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDice_Builder : PBGeneratedMessage_Builder {
@private
  PBDice* result;
}

- (PBDice*) defaultInstance;

- (PBDice_Builder*) clear;
- (PBDice_Builder*) clone;

- (PBDice*) build;
- (PBDice*) buildPartial;

- (PBDice_Builder*) mergeFrom:(PBDice*) other;
- (PBDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDiceId;
- (int32_t) diceId;
- (PBDice_Builder*) setDiceId:(int32_t) value;
- (PBDice_Builder*) clearDiceId;

- (BOOL) hasDice;
- (int32_t) dice;
- (PBDice_Builder*) setDice:(int32_t) value;
- (PBDice_Builder*) clearDice;
@end

@interface PBUserDice : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  NSString* userId;
  NSMutableArray* mutableDicesList;
}
- (BOOL) hasUserId;
@property (readonly, retain) NSString* userId;
- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;

+ (PBUserDice*) defaultInstance;
- (PBUserDice*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserDice_Builder*) builder;
+ (PBUserDice_Builder*) builder;
+ (PBUserDice_Builder*) builderWithPrototype:(PBUserDice*) prototype;

+ (PBUserDice*) parseFromData:(NSData*) data;
+ (PBUserDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserDice_Builder : PBGeneratedMessage_Builder {
@private
  PBUserDice* result;
}

- (PBUserDice*) defaultInstance;

- (PBUserDice_Builder*) clear;
- (PBUserDice_Builder*) clone;

- (PBUserDice*) build;
- (PBUserDice*) buildPartial;

- (PBUserDice_Builder*) mergeFrom:(PBUserDice*) other;
- (PBUserDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserDice_Builder*) setUserId:(NSString*) value;
- (PBUserDice_Builder*) clearUserId;

- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;
- (PBUserDice_Builder*) replaceDicesAtIndex:(int32_t) index with:(PBDice*) value;
- (PBUserDice_Builder*) addDices:(PBDice*) value;
- (PBUserDice_Builder*) addAllDices:(NSArray*) values;
- (PBUserDice_Builder*) clearDicesList;
@end

@interface PBUserResult : PBGeneratedMessage {
@private
  BOOL hasWin_:1;
  BOOL hasGainCoins_:1;
  BOOL hasUserId_:1;
  BOOL win_:1;
  int32_t gainCoins;
  NSString* userId;
}
- (BOOL) hasUserId;
- (BOOL) hasWin;
- (BOOL) hasGainCoins;
@property (readonly, retain) NSString* userId;
- (BOOL) win;
@property (readonly) int32_t gainCoins;

+ (PBUserResult*) defaultInstance;
- (PBUserResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserResult_Builder*) builder;
+ (PBUserResult_Builder*) builder;
+ (PBUserResult_Builder*) builderWithPrototype:(PBUserResult*) prototype;

+ (PBUserResult*) parseFromData:(NSData*) data;
+ (PBUserResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserResult*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserResult_Builder : PBGeneratedMessage_Builder {
@private
  PBUserResult* result;
}

- (PBUserResult*) defaultInstance;

- (PBUserResult_Builder*) clear;
- (PBUserResult_Builder*) clone;

- (PBUserResult*) build;
- (PBUserResult*) buildPartial;

- (PBUserResult_Builder*) mergeFrom:(PBUserResult*) other;
- (PBUserResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserResult_Builder*) setUserId:(NSString*) value;
- (PBUserResult_Builder*) clearUserId;

- (BOOL) hasWin;
- (BOOL) win;
- (PBUserResult_Builder*) setWin:(BOOL) value;
- (PBUserResult_Builder*) clearWin;

- (BOOL) hasGainCoins;
- (int32_t) gainCoins;
- (PBUserResult_Builder*) setGainCoins:(int32_t) value;
- (PBUserResult_Builder*) clearGainCoins;
@end

@interface PBDiceGameResult : PBGeneratedMessage {
@private
  BOOL hasOpenType_:1;
  int32_t openType;
  NSMutableArray* mutableUserResultList;
}
- (BOOL) hasOpenType;
@property (readonly) int32_t openType;
- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;

+ (PBDiceGameResult*) defaultInstance;
- (PBDiceGameResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceGameResult_Builder*) builder;
+ (PBDiceGameResult_Builder*) builder;
+ (PBDiceGameResult_Builder*) builderWithPrototype:(PBDiceGameResult*) prototype;

+ (PBDiceGameResult*) parseFromData:(NSData*) data;
+ (PBDiceGameResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceGameResult_Builder : PBGeneratedMessage_Builder {
@private
  PBDiceGameResult* result;
}

- (PBDiceGameResult*) defaultInstance;

- (PBDiceGameResult_Builder*) clear;
- (PBDiceGameResult_Builder*) clone;

- (PBDiceGameResult*) build;
- (PBDiceGameResult*) buildPartial;

- (PBDiceGameResult_Builder*) mergeFrom:(PBDiceGameResult*) other;
- (PBDiceGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;
- (PBDiceGameResult_Builder*) replaceUserResultAtIndex:(int32_t) index with:(PBUserResult*) value;
- (PBDiceGameResult_Builder*) addUserResult:(PBUserResult*) value;
- (PBDiceGameResult_Builder*) addAllUserResult:(NSArray*) values;
- (PBDiceGameResult_Builder*) clearUserResultList;

- (BOOL) hasOpenType;
- (int32_t) openType;
- (PBDiceGameResult_Builder*) setOpenType:(int32_t) value;
- (PBDiceGameResult_Builder*) clearOpenType;
@end

