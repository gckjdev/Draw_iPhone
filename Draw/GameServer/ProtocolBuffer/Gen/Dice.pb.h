// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameBasic.pb.h"
// @@protoc_insertion_point(imports)

@class PBApp;
@class PBAppBuilder;
@class PBClass;
@class PBClassBuilder;
@class PBDice;
@class PBDiceAction;
@class PBDiceActionBuilder;
@class PBDiceBuilder;
@class PBDiceFinalCount;
@class PBDiceFinalCountBuilder;
@class PBDiceGameResult;
@class PBDiceGameResultBuilder;
@class PBDrawAction;
@class PBDrawActionBuilder;
@class PBDrawBg;
@class PBDrawBgBuilder;
@class PBGameItem;
@class PBGameItemBuilder;
@class PBGameItemList;
@class PBGameItemListBuilder;
@class PBGameSession;
@class PBGameSessionBuilder;
@class PBGameSessionChanged;
@class PBGameSessionChangedBuilder;
@class PBGameUser;
@class PBGameUserBuilder;
@class PBGradient;
@class PBGradientBuilder;
@class PBIAPProduct;
@class PBIAPProductBuilder;
@class PBIAPProductList;
@class PBIAPProductListBuilder;
@class PBIAPProductPrice;
@class PBIAPProductPriceBuilder;
@class PBIntKeyIntValue;
@class PBIntKeyIntValueBuilder;
@class PBIntKeyValue;
@class PBIntKeyValueBuilder;
@class PBItemPriceInfo;
@class PBItemPriceInfoBuilder;
@class PBKeyValue;
@class PBKeyValueBuilder;
@class PBLayer;
@class PBLayerBuilder;
@class PBLocalizeString;
@class PBLocalizeStringBuilder;
@class PBMessage;
@class PBMessageBuilder;
@class PBMessageStat;
@class PBMessageStatBuilder;
@class PBOpusRank;
@class PBOpusRankBuilder;
@class PBPromotionInfo;
@class PBPromotionInfoBuilder;
@class PBSNSUser;
@class PBSNSUserBuilder;
@class PBSNSUserCredential;
@class PBSNSUserCredentialBuilder;
@class PBSimpleGroup;
@class PBSimpleGroupBuilder;
@class PBSize;
@class PBSizeBuilder;
@class PBTask;
@class PBTaskBuilder;
@class PBUserAward;
@class PBUserAwardBuilder;
@class PBUserBasicInfo;
@class PBUserBasicInfoBuilder;
@class PBUserDice;
@class PBUserDiceBuilder;
@class PBUserItem;
@class PBUserItemBuilder;
@class PBUserItemList;
@class PBUserItemListBuilder;
@class PBUserLevel;
@class PBUserLevelBuilder;
@class PBUserResult;
@class PBUserResultBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PBDiceType) {
  PBDiceTypeDiceNormal = 0,
  PBDiceTypeDiceSnake = 1,
  PBDiceTypeDiceNet = 2,
  PBDiceTypeDiceWai = 3,
};

BOOL PBDiceTypeIsValidValue(PBDiceType value);
NSString *NSStringFromPBDiceType(PBDiceType value);


@interface DiceRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBDice : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDiceId_:1;
  BOOL hasDice_:1;
  SInt32 diceId;
  SInt32 dice;
}
- (BOOL) hasDiceId;
- (BOOL) hasDice;
@property (readonly) SInt32 diceId;
@property (readonly) SInt32 dice;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceBuilder*) builder;
+ (PBDiceBuilder*) builder;
+ (PBDiceBuilder*) builderWithPrototype:(PBDice*) prototype;
- (PBDiceBuilder*) toBuilder;

+ (PBDice*) parseFromData:(NSData*) data;
+ (PBDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceBuilder : PBGeneratedMessageBuilder {
@private
  PBDice* resultPbdice;
}

- (PBDice*) defaultInstance;

- (PBDiceBuilder*) clear;
- (PBDiceBuilder*) clone;

- (PBDice*) build;
- (PBDice*) buildPartial;

- (PBDiceBuilder*) mergeFrom:(PBDice*) other;
- (PBDiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDiceId;
- (SInt32) diceId;
- (PBDiceBuilder*) setDiceId:(SInt32) value;
- (PBDiceBuilder*) clearDiceId;

- (BOOL) hasDice;
- (SInt32) dice;
- (PBDiceBuilder*) setDice:(SInt32) value;
- (PBDiceBuilder*) clearDice;
@end

@interface PBUserDice : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasType_:1;
  NSString* userId;
  PBDiceType type;
  NSMutableArray * dicesArray;
}
- (BOOL) hasUserId;
- (BOOL) hasType;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSArray * dices;
@property (readonly) PBDiceType type;
- (PBDice*)dicesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserDiceBuilder*) builder;
+ (PBUserDiceBuilder*) builder;
+ (PBUserDiceBuilder*) builderWithPrototype:(PBUserDice*) prototype;
- (PBUserDiceBuilder*) toBuilder;

+ (PBUserDice*) parseFromData:(NSData*) data;
+ (PBUserDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserDiceBuilder : PBGeneratedMessageBuilder {
@private
  PBUserDice* resultPbuserDice;
}

- (PBUserDice*) defaultInstance;

- (PBUserDiceBuilder*) clear;
- (PBUserDiceBuilder*) clone;

- (PBUserDice*) build;
- (PBUserDice*) buildPartial;

- (PBUserDiceBuilder*) mergeFrom:(PBUserDice*) other;
- (PBUserDiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserDiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserDiceBuilder*) setUserId:(NSString*) value;
- (PBUserDiceBuilder*) clearUserId;

- (NSMutableArray *)dices;
- (PBDice*)dicesAtIndex:(NSUInteger)index;
- (PBUserDiceBuilder *)addDices:(PBDice*)value;
- (PBUserDiceBuilder *)setDicesArray:(NSArray *)array;
- (PBUserDiceBuilder *)clearDices;

- (BOOL) hasType;
- (PBDiceType) type;
- (PBUserDiceBuilder*) setType:(PBDiceType) value;
- (PBUserDiceBuilder*) clearType;
@end

@interface PBDiceFinalCount : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasFinalDiceCount_:1;
  BOOL hasUserId_:1;
  BOOL hasType_:1;
  SInt32 finalDiceCount;
  NSString* userId;
  PBDiceType type;
}
- (BOOL) hasUserId;
- (BOOL) hasType;
- (BOOL) hasFinalDiceCount;
@property (readonly, strong) NSString* userId;
@property (readonly) PBDiceType type;
@property (readonly) SInt32 finalDiceCount;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceFinalCountBuilder*) builder;
+ (PBDiceFinalCountBuilder*) builder;
+ (PBDiceFinalCountBuilder*) builderWithPrototype:(PBDiceFinalCount*) prototype;
- (PBDiceFinalCountBuilder*) toBuilder;

+ (PBDiceFinalCount*) parseFromData:(NSData*) data;
+ (PBDiceFinalCount*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceFinalCount*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceFinalCount*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceFinalCount*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceFinalCount*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceFinalCountBuilder : PBGeneratedMessageBuilder {
@private
  PBDiceFinalCount* resultPbdiceFinalCount;
}

- (PBDiceFinalCount*) defaultInstance;

- (PBDiceFinalCountBuilder*) clear;
- (PBDiceFinalCountBuilder*) clone;

- (PBDiceFinalCount*) build;
- (PBDiceFinalCount*) buildPartial;

- (PBDiceFinalCountBuilder*) mergeFrom:(PBDiceFinalCount*) other;
- (PBDiceFinalCountBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceFinalCountBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBDiceFinalCountBuilder*) setUserId:(NSString*) value;
- (PBDiceFinalCountBuilder*) clearUserId;

- (BOOL) hasType;
- (PBDiceType) type;
- (PBDiceFinalCountBuilder*) setType:(PBDiceType) value;
- (PBDiceFinalCountBuilder*) clearType;

- (BOOL) hasFinalDiceCount;
- (SInt32) finalDiceCount;
- (PBDiceFinalCountBuilder*) setFinalDiceCount:(SInt32) value;
- (PBDiceFinalCountBuilder*) clearFinalDiceCount;
@end

@interface PBDiceGameResult : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOpenType_:1;
  SInt32 openType;
  NSMutableArray * userResultArray;
  NSMutableArray * finalCountArray;
}
- (BOOL) hasOpenType;
@property (readonly, strong) NSArray * userResult;
@property (readonly) SInt32 openType;
@property (readonly, strong) NSArray * finalCount;
- (PBUserResult*)userResultAtIndex:(NSUInteger)index;
- (PBDiceFinalCount*)finalCountAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceGameResultBuilder*) builder;
+ (PBDiceGameResultBuilder*) builder;
+ (PBDiceGameResultBuilder*) builderWithPrototype:(PBDiceGameResult*) prototype;
- (PBDiceGameResultBuilder*) toBuilder;

+ (PBDiceGameResult*) parseFromData:(NSData*) data;
+ (PBDiceGameResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceGameResultBuilder : PBGeneratedMessageBuilder {
@private
  PBDiceGameResult* resultPbdiceGameResult;
}

- (PBDiceGameResult*) defaultInstance;

- (PBDiceGameResultBuilder*) clear;
- (PBDiceGameResultBuilder*) clone;

- (PBDiceGameResult*) build;
- (PBDiceGameResult*) buildPartial;

- (PBDiceGameResultBuilder*) mergeFrom:(PBDiceGameResult*) other;
- (PBDiceGameResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceGameResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userResult;
- (PBUserResult*)userResultAtIndex:(NSUInteger)index;
- (PBDiceGameResultBuilder *)addUserResult:(PBUserResult*)value;
- (PBDiceGameResultBuilder *)setUserResultArray:(NSArray *)array;
- (PBDiceGameResultBuilder *)clearUserResult;

- (BOOL) hasOpenType;
- (SInt32) openType;
- (PBDiceGameResultBuilder*) setOpenType:(SInt32) value;
- (PBDiceGameResultBuilder*) clearOpenType;

- (NSMutableArray *)finalCount;
- (PBDiceFinalCount*)finalCountAtIndex:(NSUInteger)index;
- (PBDiceGameResultBuilder *)addFinalCount:(PBDiceFinalCount*)value;
- (PBDiceGameResultBuilder *)setFinalCountArray:(NSArray *)array;
- (PBDiceGameResultBuilder *)clearFinalCount;
@end

@interface PBDiceAction : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasWilds_:1;
  BOOL hasType_:1;
  BOOL hasNum_:1;
  BOOL hasDice_:1;
  BOOL wilds_:1;
  SInt32 type;
  SInt32 num;
  SInt32 dice;
}
- (BOOL) hasType;
- (BOOL) hasNum;
- (BOOL) hasDice;
- (BOOL) hasWilds;
@property (readonly) SInt32 type;
@property (readonly) SInt32 num;
@property (readonly) SInt32 dice;
- (BOOL) wilds;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceActionBuilder*) builder;
+ (PBDiceActionBuilder*) builder;
+ (PBDiceActionBuilder*) builderWithPrototype:(PBDiceAction*) prototype;
- (PBDiceActionBuilder*) toBuilder;

+ (PBDiceAction*) parseFromData:(NSData*) data;
+ (PBDiceAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceAction*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceActionBuilder : PBGeneratedMessageBuilder {
@private
  PBDiceAction* resultPbdiceAction;
}

- (PBDiceAction*) defaultInstance;

- (PBDiceActionBuilder*) clear;
- (PBDiceActionBuilder*) clone;

- (PBDiceAction*) build;
- (PBDiceAction*) buildPartial;

- (PBDiceActionBuilder*) mergeFrom:(PBDiceAction*) other;
- (PBDiceActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceActionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (SInt32) type;
- (PBDiceActionBuilder*) setType:(SInt32) value;
- (PBDiceActionBuilder*) clearType;

- (BOOL) hasNum;
- (SInt32) num;
- (PBDiceActionBuilder*) setNum:(SInt32) value;
- (PBDiceActionBuilder*) clearNum;

- (BOOL) hasDice;
- (SInt32) dice;
- (PBDiceActionBuilder*) setDice:(SInt32) value;
- (PBDiceActionBuilder*) clearDice;

- (BOOL) hasWilds;
- (BOOL) wilds;
- (PBDiceActionBuilder*) setWilds:(BOOL) value;
- (PBDiceActionBuilder*) clearWilds;
@end


// @@protoc_insertion_point(global_scope)
