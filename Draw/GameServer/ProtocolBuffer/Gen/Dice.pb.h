// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameBasic.pb.h"

@class PBApp;
@class PBApp_Builder;
@class PBDice;
@class PBDiceAction;
@class PBDiceAction_Builder;
@class PBDiceFinalCount;
@class PBDiceFinalCount_Builder;
@class PBDiceGameResult;
@class PBDiceGameResult_Builder;
@class PBDice_Builder;
@class PBDrawAction;
@class PBDrawAction_Builder;
@class PBDrawBg;
@class PBDrawBg_Builder;
@class PBGameItem;
@class PBGameItemList;
@class PBGameItemList_Builder;
@class PBGameItem_Builder;
@class PBGameSession;
@class PBGameSessionChanged;
@class PBGameSessionChanged_Builder;
@class PBGameSession_Builder;
@class PBGameUser;
@class PBGameUser_Builder;
@class PBGradient;
@class PBGradient_Builder;
@class PBIAPProduct;
@class PBIAPProductList;
@class PBIAPProductList_Builder;
@class PBIAPProductPrice;
@class PBIAPProductPrice_Builder;
@class PBIAPProduct_Builder;
@class PBIntKeyIntValue;
@class PBIntKeyIntValue_Builder;
@class PBIntKeyValue;
@class PBIntKeyValue_Builder;
@class PBItemPriceInfo;
@class PBItemPriceInfo_Builder;
@class PBKeyValue;
@class PBKeyValue_Builder;
@class PBLocalizeString;
@class PBLocalizeString_Builder;
@class PBMessage;
@class PBMessageStat;
@class PBMessageStat_Builder;
@class PBMessage_Builder;
@class PBOpusRank;
@class PBOpusRank_Builder;
@class PBPromotionInfo;
@class PBPromotionInfo_Builder;
@class PBSNSUser;
@class PBSNSUserCredential;
@class PBSNSUserCredential_Builder;
@class PBSNSUser_Builder;
@class PBSize;
@class PBSize_Builder;
@class PBTask;
@class PBTask_Builder;
@class PBUserAward;
@class PBUserAward_Builder;
@class PBUserBasicInfo;
@class PBUserBasicInfo_Builder;
@class PBUserDice;
@class PBUserDice_Builder;
@class PBUserItem;
@class PBUserItemList;
@class PBUserItemList_Builder;
@class PBUserItem_Builder;
@class PBUserLevel;
@class PBUserLevel_Builder;
@class PBUserResult;
@class PBUserResult_Builder;
typedef enum {
  PBDiceTypeDiceNormal = 0,
  PBDiceTypeDiceSnake = 1,
  PBDiceTypeDiceNet = 2,
  PBDiceTypeDiceWai = 3,
} PBDiceType;

BOOL PBDiceTypeIsValidValue(PBDiceType value);


@interface DiceRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBDice : PBGeneratedMessage {
@private
  BOOL hasDiceId_:1;
  BOOL hasDice_:1;
  int32_t diceId;
  int32_t dice;
}
- (BOOL) hasDiceId;
- (BOOL) hasDice;
@property (readonly) int32_t diceId;
@property (readonly) int32_t dice;

+ (PBDice*) defaultInstance;
- (PBDice*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDice_Builder*) builder;
+ (PBDice_Builder*) builder;
+ (PBDice_Builder*) builderWithPrototype:(PBDice*) prototype;

+ (PBDice*) parseFromData:(NSData*) data;
+ (PBDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDice_Builder : PBGeneratedMessage_Builder {
@private
  PBDice* result;
}

- (PBDice*) defaultInstance;

- (PBDice_Builder*) clear;
- (PBDice_Builder*) clone;

- (PBDice*) build;
- (PBDice*) buildPartial;

- (PBDice_Builder*) mergeFrom:(PBDice*) other;
- (PBDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDiceId;
- (int32_t) diceId;
- (PBDice_Builder*) setDiceId:(int32_t) value;
- (PBDice_Builder*) clearDiceId;

- (BOOL) hasDice;
- (int32_t) dice;
- (PBDice_Builder*) setDice:(int32_t) value;
- (PBDice_Builder*) clearDice;
@end

@interface PBUserDice : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasType_:1;
  NSString* userId;
  PBDiceType type;
  NSMutableArray* mutableDicesList;
}
- (BOOL) hasUserId;
- (BOOL) hasType;
@property (readonly, retain) NSString* userId;
@property (readonly) PBDiceType type;
- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;

+ (PBUserDice*) defaultInstance;
- (PBUserDice*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserDice_Builder*) builder;
+ (PBUserDice_Builder*) builder;
+ (PBUserDice_Builder*) builderWithPrototype:(PBUserDice*) prototype;

+ (PBUserDice*) parseFromData:(NSData*) data;
+ (PBUserDice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserDice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserDice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserDice_Builder : PBGeneratedMessage_Builder {
@private
  PBUserDice* result;
}

- (PBUserDice*) defaultInstance;

- (PBUserDice_Builder*) clear;
- (PBUserDice_Builder*) clone;

- (PBUserDice*) build;
- (PBUserDice*) buildPartial;

- (PBUserDice_Builder*) mergeFrom:(PBUserDice*) other;
- (PBUserDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserDice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserDice_Builder*) setUserId:(NSString*) value;
- (PBUserDice_Builder*) clearUserId;

- (NSArray*) dicesList;
- (PBDice*) dicesAtIndex:(int32_t) index;
- (PBUserDice_Builder*) replaceDicesAtIndex:(int32_t) index with:(PBDice*) value;
- (PBUserDice_Builder*) addDices:(PBDice*) value;
- (PBUserDice_Builder*) addAllDices:(NSArray*) values;
- (PBUserDice_Builder*) clearDicesList;

- (BOOL) hasType;
- (PBDiceType) type;
- (PBUserDice_Builder*) setType:(PBDiceType) value;
- (PBUserDice_Builder*) clearType;
@end

@interface PBDiceFinalCount : PBGeneratedMessage {
@private
  BOOL hasFinalDiceCount_:1;
  BOOL hasUserId_:1;
  BOOL hasType_:1;
  int32_t finalDiceCount;
  NSString* userId;
  PBDiceType type;
}
- (BOOL) hasUserId;
- (BOOL) hasType;
- (BOOL) hasFinalDiceCount;
@property (readonly, retain) NSString* userId;
@property (readonly) PBDiceType type;
@property (readonly) int32_t finalDiceCount;

+ (PBDiceFinalCount*) defaultInstance;
- (PBDiceFinalCount*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceFinalCount_Builder*) builder;
+ (PBDiceFinalCount_Builder*) builder;
+ (PBDiceFinalCount_Builder*) builderWithPrototype:(PBDiceFinalCount*) prototype;

+ (PBDiceFinalCount*) parseFromData:(NSData*) data;
+ (PBDiceFinalCount*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceFinalCount*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceFinalCount*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceFinalCount*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceFinalCount*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceFinalCount_Builder : PBGeneratedMessage_Builder {
@private
  PBDiceFinalCount* result;
}

- (PBDiceFinalCount*) defaultInstance;

- (PBDiceFinalCount_Builder*) clear;
- (PBDiceFinalCount_Builder*) clone;

- (PBDiceFinalCount*) build;
- (PBDiceFinalCount*) buildPartial;

- (PBDiceFinalCount_Builder*) mergeFrom:(PBDiceFinalCount*) other;
- (PBDiceFinalCount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceFinalCount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBDiceFinalCount_Builder*) setUserId:(NSString*) value;
- (PBDiceFinalCount_Builder*) clearUserId;

- (BOOL) hasType;
- (PBDiceType) type;
- (PBDiceFinalCount_Builder*) setType:(PBDiceType) value;
- (PBDiceFinalCount_Builder*) clearType;

- (BOOL) hasFinalDiceCount;
- (int32_t) finalDiceCount;
- (PBDiceFinalCount_Builder*) setFinalDiceCount:(int32_t) value;
- (PBDiceFinalCount_Builder*) clearFinalDiceCount;
@end

@interface PBDiceGameResult : PBGeneratedMessage {
@private
  BOOL hasOpenType_:1;
  int32_t openType;
  NSMutableArray* mutableUserResultList;
  NSMutableArray* mutableFinalCountList;
}
- (BOOL) hasOpenType;
@property (readonly) int32_t openType;
- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;
- (NSArray*) finalCountList;
- (PBDiceFinalCount*) finalCountAtIndex:(int32_t) index;

+ (PBDiceGameResult*) defaultInstance;
- (PBDiceGameResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceGameResult_Builder*) builder;
+ (PBDiceGameResult_Builder*) builder;
+ (PBDiceGameResult_Builder*) builderWithPrototype:(PBDiceGameResult*) prototype;

+ (PBDiceGameResult*) parseFromData:(NSData*) data;
+ (PBDiceGameResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceGameResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceGameResult_Builder : PBGeneratedMessage_Builder {
@private
  PBDiceGameResult* result;
}

- (PBDiceGameResult*) defaultInstance;

- (PBDiceGameResult_Builder*) clear;
- (PBDiceGameResult_Builder*) clone;

- (PBDiceGameResult*) build;
- (PBDiceGameResult*) buildPartial;

- (PBDiceGameResult_Builder*) mergeFrom:(PBDiceGameResult*) other;
- (PBDiceGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) userResultList;
- (PBUserResult*) userResultAtIndex:(int32_t) index;
- (PBDiceGameResult_Builder*) replaceUserResultAtIndex:(int32_t) index with:(PBUserResult*) value;
- (PBDiceGameResult_Builder*) addUserResult:(PBUserResult*) value;
- (PBDiceGameResult_Builder*) addAllUserResult:(NSArray*) values;
- (PBDiceGameResult_Builder*) clearUserResultList;

- (BOOL) hasOpenType;
- (int32_t) openType;
- (PBDiceGameResult_Builder*) setOpenType:(int32_t) value;
- (PBDiceGameResult_Builder*) clearOpenType;

- (NSArray*) finalCountList;
- (PBDiceFinalCount*) finalCountAtIndex:(int32_t) index;
- (PBDiceGameResult_Builder*) replaceFinalCountAtIndex:(int32_t) index with:(PBDiceFinalCount*) value;
- (PBDiceGameResult_Builder*) addFinalCount:(PBDiceFinalCount*) value;
- (PBDiceGameResult_Builder*) addAllFinalCount:(NSArray*) values;
- (PBDiceGameResult_Builder*) clearFinalCountList;
@end

@interface PBDiceAction : PBGeneratedMessage {
@private
  BOOL hasWilds_:1;
  BOOL hasType_:1;
  BOOL hasNum_:1;
  BOOL hasDice_:1;
  BOOL wilds_:1;
  int32_t type;
  int32_t num;
  int32_t dice;
}
- (BOOL) hasType;
- (BOOL) hasNum;
- (BOOL) hasDice;
- (BOOL) hasWilds;
@property (readonly) int32_t type;
@property (readonly) int32_t num;
@property (readonly) int32_t dice;
- (BOOL) wilds;

+ (PBDiceAction*) defaultInstance;
- (PBDiceAction*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDiceAction_Builder*) builder;
+ (PBDiceAction_Builder*) builder;
+ (PBDiceAction_Builder*) builderWithPrototype:(PBDiceAction*) prototype;

+ (PBDiceAction*) parseFromData:(NSData*) data;
+ (PBDiceAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceAction*) parseFromInputStream:(NSInputStream*) input;
+ (PBDiceAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDiceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDiceAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDiceAction_Builder : PBGeneratedMessage_Builder {
@private
  PBDiceAction* result;
}

- (PBDiceAction*) defaultInstance;

- (PBDiceAction_Builder*) clear;
- (PBDiceAction_Builder*) clone;

- (PBDiceAction*) build;
- (PBDiceAction*) buildPartial;

- (PBDiceAction_Builder*) mergeFrom:(PBDiceAction*) other;
- (PBDiceAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDiceAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (int32_t) type;
- (PBDiceAction_Builder*) setType:(int32_t) value;
- (PBDiceAction_Builder*) clearType;

- (BOOL) hasNum;
- (int32_t) num;
- (PBDiceAction_Builder*) setNum:(int32_t) value;
- (PBDiceAction_Builder*) clearNum;

- (BOOL) hasDice;
- (int32_t) dice;
- (PBDiceAction_Builder*) setDice:(int32_t) value;
- (PBDiceAction_Builder*) clearDice;

- (BOOL) hasWilds;
- (BOOL) wilds;
- (PBDiceAction_Builder*) setWilds:(BOOL) value;
- (PBDiceAction_Builder*) clearWilds;
@end

