// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Config.pb.h"

@implementation ConfigRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ConfigRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBConfig ()
@end

@implementation PBConfig

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBConfig* defaultPBConfigInstance = nil;
+ (void) initialize {
  if (self == [PBConfig class]) {
    defaultPBConfigInstance = [[PBConfig alloc] init];
  }
}
+ (PBConfig*) defaultInstance {
  return defaultPBConfigInstance;
}
- (PBConfig*) defaultInstance {
  return defaultPBConfigInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBConfig*) parseFromData:(NSData*) data {
  return (PBConfig*)[[[PBConfig builder] mergeFromData:data] build];
}
+ (PBConfig*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBConfig*)[[[PBConfig builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBConfig*) parseFromInputStream:(NSInputStream*) input {
  return (PBConfig*)[[[PBConfig builder] mergeFromInputStream:input] build];
}
+ (PBConfig*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBConfig*)[[[PBConfig builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBConfig*)[[[PBConfig builder] mergeFromCodedInputStream:input] build];
}
+ (PBConfig*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBConfig*)[[[PBConfig builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBConfig_Builder*) builder {
  return [[[PBConfig_Builder alloc] init] autorelease];
}
+ (PBConfig_Builder*) builderWithPrototype:(PBConfig*) prototype {
  return [[PBConfig builder] mergeFrom:prototype];
}
- (PBConfig_Builder*) builder {
  return [PBConfig builder];
}
@end

@interface PBConfig_Builder()
@property (retain) PBConfig* result;
@end

@implementation PBConfig_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBConfig alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBConfig_Builder*) clear {
  self.result = [[[PBConfig alloc] init] autorelease];
  return self;
}
- (PBConfig_Builder*) clone {
  return [PBConfig builderWithPrototype:result];
}
- (PBConfig*) defaultInstance {
  return [PBConfig defaultInstance];
}
- (PBConfig*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBConfig*) buildPartial {
  PBConfig* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBConfig_Builder*) mergeFrom:(PBConfig*) other {
  if (other == [PBConfig defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBConfig_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBConfig_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

