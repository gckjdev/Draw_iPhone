// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameBasic.pb.h"
#import "GameConstants.pb.h"
#import "Sing.pb.h"
#import "Draw.pb.h"
// @@protoc_insertion_point(imports)

@class PBApp;
@class PBAppBuilder;
@class PBAskPs;
@class PBAskPsBuilder;
@class PBAskPsOpus;
@class PBAskPsOpusBuilder;
@class PBClass;
@class PBClassBuilder;
@class PBColor;
@class PBColorBuilder;
@class PBCommentInfo;
@class PBCommentInfoBuilder;
@class PBDraw;
@class PBDrawAction;
@class PBDrawActionBuilder;
@class PBDrawBg;
@class PBDrawBgBuilder;
@class PBDrawBgGroup;
@class PBDrawBgGroupBuilder;
@class PBDrawBgMeta;
@class PBDrawBgMetaBuilder;
@class PBDrawBuilder;
@class PBDrawOpus;
@class PBDrawOpusBuilder;
@class PBFeed;
@class PBFeedBuilder;
@class PBFeedTimes;
@class PBFeedTimesBuilder;
@class PBFrame;
@class PBFrameBuilder;
@class PBFrameList;
@class PBFrameListBuilder;
@class PBGameItem;
@class PBGameItemBuilder;
@class PBGameItemList;
@class PBGameItemListBuilder;
@class PBGameSession;
@class PBGameSessionBuilder;
@class PBGameSessionChanged;
@class PBGameSessionChangedBuilder;
@class PBGameUser;
@class PBGameUserBuilder;
@class PBGradient;
@class PBGradientBuilder;
@class PBGuessContest;
@class PBGuessContestBuilder;
@class PBGuessRank;
@class PBGuessRankBuilder;
@class PBHotWord;
@class PBHotWordBuilder;
@class PBHotWordList;
@class PBHotWordListBuilder;
@class PBIAPProduct;
@class PBIAPProductBuilder;
@class PBIAPProductList;
@class PBIAPProductListBuilder;
@class PBIAPProductPrice;
@class PBIAPProductPriceBuilder;
@class PBImageShapeGroup;
@class PBImageShapeGroupBuilder;
@class PBImageShapeGroupMeta;
@class PBImageShapeGroupMetaBuilder;
@class PBIntKeyIntValue;
@class PBIntKeyIntValueBuilder;
@class PBIntKeyValue;
@class PBIntKeyValueBuilder;
@class PBItemPriceInfo;
@class PBItemPriceInfoBuilder;
@class PBKeyValue;
@class PBKeyValueBuilder;
@class PBLabelInfo;
@class PBLabelInfoBuilder;
@class PBLayer;
@class PBLayerBuilder;
@class PBLayout;
@class PBLayoutBuilder;
@class PBLayoutList;
@class PBLayoutListBuilder;
@class PBLearnDraw;
@class PBLearnDrawBuilder;
@class PBLocalizeString;
@class PBLocalizeStringBuilder;
@class PBMessage;
@class PBMessageBuilder;
@class PBMessageStat;
@class PBMessageStatBuilder;
@class PBNoCompressDrawAction;
@class PBNoCompressDrawActionBuilder;
@class PBNoCompressDrawData;
@class PBNoCompressDrawDataBuilder;
@class PBOpus;
@class PBOpusBuilder;
@class PBOpusGuess;
@class PBOpusGuessBuilder;
@class PBOpusList;
@class PBOpusListBuilder;
@class PBOpusRank;
@class PBOpusRankBuilder;
@class PBPoint;
@class PBPointBuilder;
@class PBPromotionInfo;
@class PBPromotionInfoBuilder;
@class PBRect;
@class PBRectBuilder;
@class PBSNSUser;
@class PBSNSUserBuilder;
@class PBSNSUserCredential;
@class PBSNSUserCredentialBuilder;
@class PBSimpleGroup;
@class PBSimpleGroupBuilder;
@class PBSingOpus;
@class PBSingOpusBuilder;
@class PBSize;
@class PBSizeBuilder;
@class PBSong;
@class PBSongBuilder;
@class PBSongCategory;
@class PBSongCategoryBuilder;
@class PBSongCategoryList;
@class PBSongCategoryListBuilder;
@class PBSongList;
@class PBSongListBuilder;
@class PBTask;
@class PBTaskBuilder;
@class PBUserAward;
@class PBUserAwardBuilder;
@class PBUserBasicInfo;
@class PBUserBasicInfoBuilder;
@class PBUserItem;
@class PBUserItemBuilder;
@class PBUserItemList;
@class PBUserItemListBuilder;
@class PBUserLevel;
@class PBUserLevelBuilder;
@class PBUserResult;
@class PBUserResultBuilder;
@class PBWall;
@class PBWallBuilder;
@class PBWallOpus;
@class PBWallOpusBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PBLanguage) {
  PBLanguageChinese = 1,
  PBLanguageEnglish = 2,
};

BOOL PBLanguageIsValidValue(PBLanguage value);
NSString *NSStringFromPBLanguage(PBLanguage value);

typedef NS_ENUM(SInt32, PBOpusType) {
  PBOpusTypeUnknown = 0,
  PBOpusTypeDraw = 1,
  PBOpusTypeGuess = 2,
  PBOpusTypeComment = 3,
  PBOpusTypeRepost = 4,
  PBOpusTypeDrawToUser = 5,
  PBOpusTypeFlower = 6,
  PBOpusTypeTomato = 7,
  PBOpusTypeOnlyComment = 8,
  PBOpusTypeDrawContest = 9,
  PBOpusTypeDrawPractice = 10,
  PBOpusTypeDrawConquer = 11,
  PBOpusTypeSing = 1000,
  PBOpusTypeSingToUser = 1001,
  PBOpusTypeSingContest = 1002,
  PBOpusTypeAskPs = 1500,
  PBOpusTypeAskPsOpus = 1501,
};

BOOL PBOpusTypeIsValidValue(PBOpusType value);
NSString *NSStringFromPBOpusType(PBOpusType value);

typedef NS_ENUM(SInt32, PBOpusStoreType) {
  PBOpusStoreTypeNormalOpus = 0,
  PBOpusStoreTypeDraftOpus = 1,
  PBOpusStoreTypeSubmitOpus = 2,
  PBOpusStoreTypeSavedOpus = 3,
};

BOOL PBOpusStoreTypeIsValidValue(PBOpusStoreType value);
NSString *NSStringFromPBOpusStoreType(PBOpusStoreType value);

typedef NS_ENUM(SInt32, PBOpusStatus) {
  PBOpusStatusOpusStatusNormal = 0,
  PBOpusStatusOpusStatusDelete = 1,
};

BOOL PBOpusStatusIsValidValue(PBOpusStatus value);
NSString *NSStringFromPBOpusStatus(PBOpusStatus value);

typedef NS_ENUM(SInt32, PBFeedTimesType) {
  PBFeedTimesTypeFeedTimesTypeMatch = 1,
  PBFeedTimesTypeFeedTimesTypeGuess = 2,
  PBFeedTimesTypeFeedTimesTypeCorrect = 3,
  PBFeedTimesTypeFeedTimesTypeComment = 4,
  PBFeedTimesTypeFeedTimesTypeFlower = 5,
  PBFeedTimesTypeFeedTimesTypeTomato = 6,
  PBFeedTimesTypeFeedTimesTypeSave = 7,
};

BOOL PBFeedTimesTypeIsValidValue(PBFeedTimesType value);
NSString *NSStringFromPBFeedTimesType(PBFeedTimesType value);

typedef NS_ENUM(SInt32, PBRankType) {
  PBRankTypeHotRank = 1,
  PBRankTypeAllTimeRank = 2,
};

BOOL PBRankTypeIsValidValue(PBRankType value);
NSString *NSStringFromPBRankType(PBRankType value);

typedef NS_ENUM(SInt32, PBUserGuessMode) {
  PBUserGuessModeGuessModeHappy = 1,
  PBUserGuessModeGuessModeGenius = 2,
  PBUserGuessModeGuessModeContest = 3,
};

BOOL PBUserGuessModeIsValidValue(PBUserGuessMode value);
NSString *NSStringFromPBUserGuessMode(PBUserGuessMode value);

typedef NS_ENUM(SInt32, PBGuessContestState) {
  PBGuessContestStateGuessContestStateEnd = 0,
  PBGuessContestStateGuessContestStateIng = 1,
  PBGuessContestStateGuessContestStateNotStart = 2,
};

BOOL PBGuessContestStateIsValidValue(PBGuessContestState value);
NSString *NSStringFromPBGuessContestState(PBGuessContestState value);


@interface OpusRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBDrawOpus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLevel_:1;
  SInt32 level;
}
- (BOOL) hasLevel;
@property (readonly) SInt32 level;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDrawOpusBuilder*) builder;
+ (PBDrawOpusBuilder*) builder;
+ (PBDrawOpusBuilder*) builderWithPrototype:(PBDrawOpus*) prototype;
- (PBDrawOpusBuilder*) toBuilder;

+ (PBDrawOpus*) parseFromData:(NSData*) data;
+ (PBDrawOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDrawOpusBuilder : PBGeneratedMessageBuilder {
@private
  PBDrawOpus* resultPbdrawOpus;
}

- (PBDrawOpus*) defaultInstance;

- (PBDrawOpusBuilder*) clear;
- (PBDrawOpusBuilder*) clone;

- (PBDrawOpus*) build;
- (PBDrawOpus*) buildPartial;

- (PBDrawOpusBuilder*) mergeFrom:(PBDrawOpus*) other;
- (PBDrawOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDrawOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLevel;
- (SInt32) level;
- (PBDrawOpusBuilder*) setLevel:(SInt32) value;
- (PBDrawOpusBuilder*) clearLevel;
@end

@interface PBAskPs : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAwardCoinsPerUser_:1;
  BOOL hasAwardCoinsMaxTotal_:1;
  BOOL hasAwardIngotBestUser_:1;
  BOOL hasAwardBestUserId_:1;
  SInt32 awardCoinsPerUser;
  SInt32 awardCoinsMaxTotal;
  SInt32 awardIngotBestUser;
  NSString* awardBestUserId;
  NSMutableArray * requirementArray;
}
- (BOOL) hasAwardCoinsPerUser;
- (BOOL) hasAwardCoinsMaxTotal;
- (BOOL) hasAwardIngotBestUser;
- (BOOL) hasAwardBestUserId;
@property (readonly, strong) NSArray * requirement;
@property (readonly) SInt32 awardCoinsPerUser;
@property (readonly) SInt32 awardCoinsMaxTotal;
@property (readonly) SInt32 awardIngotBestUser;
@property (readonly, strong) NSString* awardBestUserId;
- (NSString*)requirementAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBAskPsBuilder*) builder;
+ (PBAskPsBuilder*) builder;
+ (PBAskPsBuilder*) builderWithPrototype:(PBAskPs*) prototype;
- (PBAskPsBuilder*) toBuilder;

+ (PBAskPs*) parseFromData:(NSData*) data;
+ (PBAskPs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input;
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBAskPsBuilder : PBGeneratedMessageBuilder {
@private
  PBAskPs* resultPbaskPs;
}

- (PBAskPs*) defaultInstance;

- (PBAskPsBuilder*) clear;
- (PBAskPsBuilder*) clone;

- (PBAskPs*) build;
- (PBAskPs*) buildPartial;

- (PBAskPsBuilder*) mergeFrom:(PBAskPs*) other;
- (PBAskPsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBAskPsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)requirement;
- (NSString*)requirementAtIndex:(NSUInteger)index;
- (PBAskPsBuilder *)addRequirement:(NSString*)value;
- (PBAskPsBuilder *)setRequirementArray:(NSArray *)array;
- (PBAskPsBuilder *)clearRequirement;

- (BOOL) hasAwardCoinsPerUser;
- (SInt32) awardCoinsPerUser;
- (PBAskPsBuilder*) setAwardCoinsPerUser:(SInt32) value;
- (PBAskPsBuilder*) clearAwardCoinsPerUser;

- (BOOL) hasAwardCoinsMaxTotal;
- (SInt32) awardCoinsMaxTotal;
- (PBAskPsBuilder*) setAwardCoinsMaxTotal:(SInt32) value;
- (PBAskPsBuilder*) clearAwardCoinsMaxTotal;

- (BOOL) hasAwardIngotBestUser;
- (SInt32) awardIngotBestUser;
- (PBAskPsBuilder*) setAwardIngotBestUser:(SInt32) value;
- (PBAskPsBuilder*) clearAwardIngotBestUser;

- (BOOL) hasAwardBestUserId;
- (NSString*) awardBestUserId;
- (PBAskPsBuilder*) setAwardBestUserId:(NSString*) value;
- (PBAskPsBuilder*) clearAwardBestUserId;
@end

@interface PBAskPsOpus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAskPsId_:1;
  NSString* askPsId;
}
- (BOOL) hasAskPsId;
@property (readonly, strong) NSString* askPsId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBAskPsOpusBuilder*) builder;
+ (PBAskPsOpusBuilder*) builder;
+ (PBAskPsOpusBuilder*) builderWithPrototype:(PBAskPsOpus*) prototype;
- (PBAskPsOpusBuilder*) toBuilder;

+ (PBAskPsOpus*) parseFromData:(NSData*) data;
+ (PBAskPsOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBAskPsOpusBuilder : PBGeneratedMessageBuilder {
@private
  PBAskPsOpus* resultPbaskPsOpus;
}

- (PBAskPsOpus*) defaultInstance;

- (PBAskPsOpusBuilder*) clear;
- (PBAskPsOpusBuilder*) clone;

- (PBAskPsOpus*) build;
- (PBAskPsOpus*) buildPartial;

- (PBAskPsOpusBuilder*) mergeFrom:(PBAskPsOpus*) other;
- (PBAskPsOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBAskPsOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAskPsId;
- (NSString*) askPsId;
- (PBAskPsOpusBuilder*) setAskPsId:(NSString*) value;
- (PBAskPsOpusBuilder*) clearAskPsId;
@end

@interface PBOpus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsRecovery_:1;
  BOOL hasCreateDate_:1;
  BOOL hasStatus_:1;
  BOOL hasSpendTime_:1;
  BOOL hasDeviceType_:1;
  BOOL hasOpusId_:1;
  BOOL hasName_:1;
  BOOL hasDesc_:1;
  BOOL hasImage_:1;
  BOOL hasThumbImage_:1;
  BOOL hasDataUrl_:1;
  BOOL hasLocalThumbImageUrl_:1;
  BOOL hasLocalImageUrl_:1;
  BOOL hasLocalDataUrl_:1;
  BOOL hasDeviceName_:1;
  BOOL hasAppId_:1;
  BOOL hasContestId_:1;
  BOOL hasTargetUser_:1;
  BOOL hasAuthor_:1;
  BOOL hasDraw_:1;
  BOOL hasSing_:1;
  BOOL hasAskPs_:1;
  BOOL hasAskPsOpus_:1;
  BOOL hasDescLabelInfo_:1;
  BOOL hasCanvasSize_:1;
  BOOL hasGuessInfo_:1;
  BOOL hasCategory_:1;
  BOOL hasLanguage_:1;
  BOOL hasType_:1;
  BOOL hasStoreType_:1;
  BOOL isRecovery_:1;
  SInt32 createDate;
  SInt32 status;
  SInt32 spendTime;
  SInt32 deviceType;
  NSString* opusId;
  NSString* name;
  NSString* desc;
  NSString* image;
  NSString* thumbImage;
  NSString* dataUrl;
  NSString* localThumbImageUrl;
  NSString* localImageUrl;
  NSString* localDataUrl;
  NSString* deviceName;
  NSString* appId;
  NSString* contestId;
  PBGameUser* targetUser;
  PBGameUser* author;
  PBDrawOpus* draw;
  PBSingOpus* sing;
  PBAskPs* askPs;
  PBAskPsOpus* askPsOpus;
  PBLabelInfo* descLabelInfo;
  PBSize* canvasSize;
  PBOpusGuess* guessInfo;
  PBOpusCategoryType category;
  PBLanguage language;
  PBOpusType type;
  PBOpusStoreType storeType;
  NSMutableArray * tagsArray;
  NSMutableArray * feedTimesArray;
}
- (BOOL) hasOpusId;
- (BOOL) hasType;
- (BOOL) hasName;
- (BOOL) hasDesc;
- (BOOL) hasImage;
- (BOOL) hasThumbImage;
- (BOOL) hasDataUrl;
- (BOOL) hasLanguage;
- (BOOL) hasCategory;
- (BOOL) hasCreateDate;
- (BOOL) hasStatus;
- (BOOL) hasSpendTime;
- (BOOL) hasDeviceType;
- (BOOL) hasDeviceName;
- (BOOL) hasAppId;
- (BOOL) hasAuthor;
- (BOOL) hasTargetUser;
- (BOOL) hasContestId;
- (BOOL) hasDraw;
- (BOOL) hasSing;
- (BOOL) hasAskPs;
- (BOOL) hasAskPsOpus;
- (BOOL) hasLocalDataUrl;
- (BOOL) hasLocalImageUrl;
- (BOOL) hasLocalThumbImageUrl;
- (BOOL) hasIsRecovery;
- (BOOL) hasStoreType;
- (BOOL) hasDescLabelInfo;
- (BOOL) hasCanvasSize;
- (BOOL) hasGuessInfo;
@property (readonly, strong) NSString* opusId;
@property (readonly) PBOpusType type;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* desc;
@property (readonly, strong) NSString* image;
@property (readonly, strong) NSString* thumbImage;
@property (readonly, strong) NSString* dataUrl;
@property (readonly) PBLanguage language;
@property (readonly) PBOpusCategoryType category;
@property (readonly) SInt32 createDate;
@property (readonly) SInt32 status;
@property (readonly, strong) NSArray * tags;
@property (readonly) SInt32 spendTime;
@property (readonly) SInt32 deviceType;
@property (readonly, strong) NSString* deviceName;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) PBGameUser* author;
@property (readonly, strong) PBGameUser* targetUser;
@property (readonly, strong) NSString* contestId;
@property (readonly, strong) NSArray * feedTimes;
@property (readonly, strong) PBDrawOpus* draw;
@property (readonly, strong) PBSingOpus* sing;
@property (readonly, strong) PBAskPs* askPs;
@property (readonly, strong) PBAskPsOpus* askPsOpus;
@property (readonly, strong) NSString* localDataUrl;
@property (readonly, strong) NSString* localImageUrl;
@property (readonly, strong) NSString* localThumbImageUrl;
- (BOOL) isRecovery;
@property (readonly) PBOpusStoreType storeType;
@property (readonly, strong) PBLabelInfo* descLabelInfo;
@property (readonly, strong) PBSize* canvasSize;
@property (readonly, strong) PBOpusGuess* guessInfo;
- (NSString*)tagsAtIndex:(NSUInteger)index;
- (PBFeedTimes*)feedTimesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusBuilder*) builder;
+ (PBOpusBuilder*) builder;
+ (PBOpusBuilder*) builderWithPrototype:(PBOpus*) prototype;
- (PBOpusBuilder*) toBuilder;

+ (PBOpus*) parseFromData:(NSData*) data;
+ (PBOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusBuilder : PBGeneratedMessageBuilder {
@private
  PBOpus* resultPbopus;
}

- (PBOpus*) defaultInstance;

- (PBOpusBuilder*) clear;
- (PBOpusBuilder*) clone;

- (PBOpus*) build;
- (PBOpus*) buildPartial;

- (PBOpusBuilder*) mergeFrom:(PBOpus*) other;
- (PBOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOpusId;
- (NSString*) opusId;
- (PBOpusBuilder*) setOpusId:(NSString*) value;
- (PBOpusBuilder*) clearOpusId;

- (BOOL) hasType;
- (PBOpusType) type;
- (PBOpusBuilder*) setType:(PBOpusType) value;
- (PBOpusBuilder*) clearType;

- (BOOL) hasName;
- (NSString*) name;
- (PBOpusBuilder*) setName:(NSString*) value;
- (PBOpusBuilder*) clearName;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBOpusBuilder*) setDesc:(NSString*) value;
- (PBOpusBuilder*) clearDesc;

- (BOOL) hasImage;
- (NSString*) image;
- (PBOpusBuilder*) setImage:(NSString*) value;
- (PBOpusBuilder*) clearImage;

- (BOOL) hasThumbImage;
- (NSString*) thumbImage;
- (PBOpusBuilder*) setThumbImage:(NSString*) value;
- (PBOpusBuilder*) clearThumbImage;

- (BOOL) hasDataUrl;
- (NSString*) dataUrl;
- (PBOpusBuilder*) setDataUrl:(NSString*) value;
- (PBOpusBuilder*) clearDataUrl;

- (BOOL) hasLanguage;
- (PBLanguage) language;
- (PBOpusBuilder*) setLanguage:(PBLanguage) value;
- (PBOpusBuilder*) clearLanguage;

- (BOOL) hasCategory;
- (PBOpusCategoryType) category;
- (PBOpusBuilder*) setCategory:(PBOpusCategoryType) value;
- (PBOpusBuilder*) clearCategory;

- (BOOL) hasCreateDate;
- (SInt32) createDate;
- (PBOpusBuilder*) setCreateDate:(SInt32) value;
- (PBOpusBuilder*) clearCreateDate;

- (BOOL) hasStatus;
- (SInt32) status;
- (PBOpusBuilder*) setStatus:(SInt32) value;
- (PBOpusBuilder*) clearStatus;

- (NSMutableArray *)tags;
- (NSString*)tagsAtIndex:(NSUInteger)index;
- (PBOpusBuilder *)addTags:(NSString*)value;
- (PBOpusBuilder *)setTagsArray:(NSArray *)array;
- (PBOpusBuilder *)clearTags;

- (BOOL) hasSpendTime;
- (SInt32) spendTime;
- (PBOpusBuilder*) setSpendTime:(SInt32) value;
- (PBOpusBuilder*) clearSpendTime;

- (BOOL) hasDeviceType;
- (SInt32) deviceType;
- (PBOpusBuilder*) setDeviceType:(SInt32) value;
- (PBOpusBuilder*) clearDeviceType;

- (BOOL) hasDeviceName;
- (NSString*) deviceName;
- (PBOpusBuilder*) setDeviceName:(NSString*) value;
- (PBOpusBuilder*) clearDeviceName;

- (BOOL) hasAppId;
- (NSString*) appId;
- (PBOpusBuilder*) setAppId:(NSString*) value;
- (PBOpusBuilder*) clearAppId;

- (BOOL) hasAuthor;
- (PBGameUser*) author;
- (PBOpusBuilder*) setAuthor:(PBGameUser*) value;
- (PBOpusBuilder*) setAuthorBuilder:(PBGameUserBuilder*) builderForValue;
- (PBOpusBuilder*) mergeAuthor:(PBGameUser*) value;
- (PBOpusBuilder*) clearAuthor;

- (BOOL) hasTargetUser;
- (PBGameUser*) targetUser;
- (PBOpusBuilder*) setTargetUser:(PBGameUser*) value;
- (PBOpusBuilder*) setTargetUserBuilder:(PBGameUserBuilder*) builderForValue;
- (PBOpusBuilder*) mergeTargetUser:(PBGameUser*) value;
- (PBOpusBuilder*) clearTargetUser;

- (BOOL) hasContestId;
- (NSString*) contestId;
- (PBOpusBuilder*) setContestId:(NSString*) value;
- (PBOpusBuilder*) clearContestId;

- (NSMutableArray *)feedTimes;
- (PBFeedTimes*)feedTimesAtIndex:(NSUInteger)index;
- (PBOpusBuilder *)addFeedTimes:(PBFeedTimes*)value;
- (PBOpusBuilder *)setFeedTimesArray:(NSArray *)array;
- (PBOpusBuilder *)clearFeedTimes;

- (BOOL) hasDraw;
- (PBDrawOpus*) draw;
- (PBOpusBuilder*) setDraw:(PBDrawOpus*) value;
- (PBOpusBuilder*) setDrawBuilder:(PBDrawOpusBuilder*) builderForValue;
- (PBOpusBuilder*) mergeDraw:(PBDrawOpus*) value;
- (PBOpusBuilder*) clearDraw;

- (BOOL) hasSing;
- (PBSingOpus*) sing;
- (PBOpusBuilder*) setSing:(PBSingOpus*) value;
- (PBOpusBuilder*) setSingBuilder:(PBSingOpusBuilder*) builderForValue;
- (PBOpusBuilder*) mergeSing:(PBSingOpus*) value;
- (PBOpusBuilder*) clearSing;

- (BOOL) hasAskPs;
- (PBAskPs*) askPs;
- (PBOpusBuilder*) setAskPs:(PBAskPs*) value;
- (PBOpusBuilder*) setAskPsBuilder:(PBAskPsBuilder*) builderForValue;
- (PBOpusBuilder*) mergeAskPs:(PBAskPs*) value;
- (PBOpusBuilder*) clearAskPs;

- (BOOL) hasAskPsOpus;
- (PBAskPsOpus*) askPsOpus;
- (PBOpusBuilder*) setAskPsOpus:(PBAskPsOpus*) value;
- (PBOpusBuilder*) setAskPsOpusBuilder:(PBAskPsOpusBuilder*) builderForValue;
- (PBOpusBuilder*) mergeAskPsOpus:(PBAskPsOpus*) value;
- (PBOpusBuilder*) clearAskPsOpus;

- (BOOL) hasLocalDataUrl;
- (NSString*) localDataUrl;
- (PBOpusBuilder*) setLocalDataUrl:(NSString*) value;
- (PBOpusBuilder*) clearLocalDataUrl;

- (BOOL) hasLocalImageUrl;
- (NSString*) localImageUrl;
- (PBOpusBuilder*) setLocalImageUrl:(NSString*) value;
- (PBOpusBuilder*) clearLocalImageUrl;

- (BOOL) hasLocalThumbImageUrl;
- (NSString*) localThumbImageUrl;
- (PBOpusBuilder*) setLocalThumbImageUrl:(NSString*) value;
- (PBOpusBuilder*) clearLocalThumbImageUrl;

- (BOOL) hasIsRecovery;
- (BOOL) isRecovery;
- (PBOpusBuilder*) setIsRecovery:(BOOL) value;
- (PBOpusBuilder*) clearIsRecovery;

- (BOOL) hasStoreType;
- (PBOpusStoreType) storeType;
- (PBOpusBuilder*) setStoreType:(PBOpusStoreType) value;
- (PBOpusBuilder*) clearStoreType;

- (BOOL) hasDescLabelInfo;
- (PBLabelInfo*) descLabelInfo;
- (PBOpusBuilder*) setDescLabelInfo:(PBLabelInfo*) value;
- (PBOpusBuilder*) setDescLabelInfoBuilder:(PBLabelInfoBuilder*) builderForValue;
- (PBOpusBuilder*) mergeDescLabelInfo:(PBLabelInfo*) value;
- (PBOpusBuilder*) clearDescLabelInfo;

- (BOOL) hasCanvasSize;
- (PBSize*) canvasSize;
- (PBOpusBuilder*) setCanvasSize:(PBSize*) value;
- (PBOpusBuilder*) setCanvasSizeBuilder:(PBSizeBuilder*) builderForValue;
- (PBOpusBuilder*) mergeCanvasSize:(PBSize*) value;
- (PBOpusBuilder*) clearCanvasSize;

- (BOOL) hasGuessInfo;
- (PBOpusGuess*) guessInfo;
- (PBOpusBuilder*) setGuessInfo:(PBOpusGuess*) value;
- (PBOpusBuilder*) setGuessInfoBuilder:(PBOpusGuessBuilder*) builderForValue;
- (PBOpusBuilder*) mergeGuessInfo:(PBOpusGuess*) value;
- (PBOpusBuilder*) clearGuessInfo;
@end

@interface PBOpusList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * opusesArray;
}
@property (readonly, strong) NSArray * opuses;
- (PBOpus*)opusesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusListBuilder*) builder;
+ (PBOpusListBuilder*) builder;
+ (PBOpusListBuilder*) builderWithPrototype:(PBOpusList*) prototype;
- (PBOpusListBuilder*) toBuilder;

+ (PBOpusList*) parseFromData:(NSData*) data;
+ (PBOpusList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusList*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpusList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpusList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusListBuilder : PBGeneratedMessageBuilder {
@private
  PBOpusList* resultPbopusList;
}

- (PBOpusList*) defaultInstance;

- (PBOpusListBuilder*) clear;
- (PBOpusListBuilder*) clone;

- (PBOpusList*) build;
- (PBOpusList*) buildPartial;

- (PBOpusListBuilder*) mergeFrom:(PBOpusList*) other;
- (PBOpusListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)opuses;
- (PBOpus*)opusesAtIndex:(NSUInteger)index;
- (PBOpusListBuilder *)addOpuses:(PBOpus*)value;
- (PBOpusListBuilder *)setOpusesArray:(NSArray *)array;
- (PBOpusListBuilder *)clearOpuses;
@end

@interface PBOpusGuess : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsCorrect_:1;
  BOOL isCorrect_:1;
}
- (BOOL) hasIsCorrect;
- (BOOL) isCorrect;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusGuessBuilder*) builder;
+ (PBOpusGuessBuilder*) builder;
+ (PBOpusGuessBuilder*) builderWithPrototype:(PBOpusGuess*) prototype;
- (PBOpusGuessBuilder*) toBuilder;

+ (PBOpusGuess*) parseFromData:(NSData*) data;
+ (PBOpusGuess*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusGuess*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpusGuess*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpusGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusGuessBuilder : PBGeneratedMessageBuilder {
@private
  PBOpusGuess* resultPbopusGuess;
}

- (PBOpusGuess*) defaultInstance;

- (PBOpusGuessBuilder*) clear;
- (PBOpusGuessBuilder*) clone;

- (PBOpusGuess*) build;
- (PBOpusGuess*) buildPartial;

- (PBOpusGuessBuilder*) mergeFrom:(PBOpusGuess*) other;
- (PBOpusGuessBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusGuessBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIsCorrect;
- (BOOL) isCorrect;
- (PBOpusGuessBuilder*) setIsCorrect:(BOOL) value;
- (PBOpusGuessBuilder*) clearIsCorrect;
@end

@interface PBGuessRank : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGuess_:1;
  BOOL hasPass_:1;
  BOOL hasSpendTime_:1;
  BOOL hasEarn_:1;
  BOOL hasRanking_:1;
  BOOL hasTotalPlayer_:1;
  BOOL hasStartTime_:1;
  BOOL hasEndTime_:1;
  BOOL hasUser_:1;
  BOOL hasCurrency_:1;
  SInt32 guess;
  SInt32 pass;
  SInt32 spendTime;
  SInt32 earn;
  SInt32 ranking;
  SInt32 totalPlayer;
  SInt32 startTime;
  SInt32 endTime;
  PBGameUser* user;
  PBGameCurrency currency;
}
- (BOOL) hasUser;
- (BOOL) hasGuess;
- (BOOL) hasPass;
- (BOOL) hasSpendTime;
- (BOOL) hasEarn;
- (BOOL) hasCurrency;
- (BOOL) hasRanking;
- (BOOL) hasTotalPlayer;
- (BOOL) hasStartTime;
- (BOOL) hasEndTime;
@property (readonly, strong) PBGameUser* user;
@property (readonly) SInt32 guess;
@property (readonly) SInt32 pass;
@property (readonly) SInt32 spendTime;
@property (readonly) SInt32 earn;
@property (readonly) PBGameCurrency currency;
@property (readonly) SInt32 ranking;
@property (readonly) SInt32 totalPlayer;
@property (readonly) SInt32 startTime;
@property (readonly) SInt32 endTime;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGuessRankBuilder*) builder;
+ (PBGuessRankBuilder*) builder;
+ (PBGuessRankBuilder*) builderWithPrototype:(PBGuessRank*) prototype;
- (PBGuessRankBuilder*) toBuilder;

+ (PBGuessRank*) parseFromData:(NSData*) data;
+ (PBGuessRank*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessRank*) parseFromInputStream:(NSInputStream*) input;
+ (PBGuessRank*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessRank*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGuessRank*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGuessRankBuilder : PBGeneratedMessageBuilder {
@private
  PBGuessRank* resultPbguessRank;
}

- (PBGuessRank*) defaultInstance;

- (PBGuessRankBuilder*) clear;
- (PBGuessRankBuilder*) clone;

- (PBGuessRank*) build;
- (PBGuessRank*) buildPartial;

- (PBGuessRankBuilder*) mergeFrom:(PBGuessRank*) other;
- (PBGuessRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGuessRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (PBGuessRankBuilder*) setUser:(PBGameUser*) value;
- (PBGuessRankBuilder*) setUserBuilder:(PBGameUserBuilder*) builderForValue;
- (PBGuessRankBuilder*) mergeUser:(PBGameUser*) value;
- (PBGuessRankBuilder*) clearUser;

- (BOOL) hasGuess;
- (SInt32) guess;
- (PBGuessRankBuilder*) setGuess:(SInt32) value;
- (PBGuessRankBuilder*) clearGuess;

- (BOOL) hasPass;
- (SInt32) pass;
- (PBGuessRankBuilder*) setPass:(SInt32) value;
- (PBGuessRankBuilder*) clearPass;

- (BOOL) hasSpendTime;
- (SInt32) spendTime;
- (PBGuessRankBuilder*) setSpendTime:(SInt32) value;
- (PBGuessRankBuilder*) clearSpendTime;

- (BOOL) hasEarn;
- (SInt32) earn;
- (PBGuessRankBuilder*) setEarn:(SInt32) value;
- (PBGuessRankBuilder*) clearEarn;

- (BOOL) hasCurrency;
- (PBGameCurrency) currency;
- (PBGuessRankBuilder*) setCurrency:(PBGameCurrency) value;
- (PBGuessRankBuilder*) clearCurrency;

- (BOOL) hasRanking;
- (SInt32) ranking;
- (PBGuessRankBuilder*) setRanking:(SInt32) value;
- (PBGuessRankBuilder*) clearRanking;

- (BOOL) hasTotalPlayer;
- (SInt32) totalPlayer;
- (PBGuessRankBuilder*) setTotalPlayer:(SInt32) value;
- (PBGuessRankBuilder*) clearTotalPlayer;

- (BOOL) hasStartTime;
- (SInt32) startTime;
- (PBGuessRankBuilder*) setStartTime:(SInt32) value;
- (PBGuessRankBuilder*) clearStartTime;

- (BOOL) hasEndTime;
- (SInt32) endTime;
- (PBGuessRankBuilder*) setEndTime:(SInt32) value;
- (PBGuessRankBuilder*) clearEndTime;
@end

@interface PBGuessContest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasState_:1;
  BOOL hasStartTime_:1;
  BOOL hasEndTime_:1;
  BOOL hasContestId_:1;
  BOOL hasName_:1;
  SInt32 state;
  SInt32 startTime;
  SInt32 endTime;
  NSString* contestId;
  NSString* name;
}
- (BOOL) hasContestId;
- (BOOL) hasName;
- (BOOL) hasState;
- (BOOL) hasStartTime;
- (BOOL) hasEndTime;
@property (readonly, strong) NSString* contestId;
@property (readonly, strong) NSString* name;
@property (readonly) SInt32 state;
@property (readonly) SInt32 startTime;
@property (readonly) SInt32 endTime;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGuessContestBuilder*) builder;
+ (PBGuessContestBuilder*) builder;
+ (PBGuessContestBuilder*) builderWithPrototype:(PBGuessContest*) prototype;
- (PBGuessContestBuilder*) toBuilder;

+ (PBGuessContest*) parseFromData:(NSData*) data;
+ (PBGuessContest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessContest*) parseFromInputStream:(NSInputStream*) input;
+ (PBGuessContest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessContest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGuessContest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGuessContestBuilder : PBGeneratedMessageBuilder {
@private
  PBGuessContest* resultPbguessContest;
}

- (PBGuessContest*) defaultInstance;

- (PBGuessContestBuilder*) clear;
- (PBGuessContestBuilder*) clone;

- (PBGuessContest*) build;
- (PBGuessContest*) buildPartial;

- (PBGuessContestBuilder*) mergeFrom:(PBGuessContest*) other;
- (PBGuessContestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGuessContestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasContestId;
- (NSString*) contestId;
- (PBGuessContestBuilder*) setContestId:(NSString*) value;
- (PBGuessContestBuilder*) clearContestId;

- (BOOL) hasName;
- (NSString*) name;
- (PBGuessContestBuilder*) setName:(NSString*) value;
- (PBGuessContestBuilder*) clearName;

- (BOOL) hasState;
- (SInt32) state;
- (PBGuessContestBuilder*) setState:(SInt32) value;
- (PBGuessContestBuilder*) clearState;

- (BOOL) hasStartTime;
- (SInt32) startTime;
- (PBGuessContestBuilder*) setStartTime:(SInt32) value;
- (PBGuessContestBuilder*) clearStartTime;

- (BOOL) hasEndTime;
- (SInt32) endTime;
- (PBGuessContestBuilder*) setEndTime:(SInt32) value;
- (PBGuessContestBuilder*) clearEndTime;
@end


// @@protoc_insertion_point(global_scope)
