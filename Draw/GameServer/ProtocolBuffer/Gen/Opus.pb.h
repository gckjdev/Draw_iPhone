// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "GameBasic.pb.h"
#import "Sing.pb.h"
#import "Draw.pb.h"

@class PBApp;
@class PBApp_Builder;
@class PBAskPs;
@class PBAskPsOpus;
@class PBAskPsOpus_Builder;
@class PBAskPs_Builder;
@class PBColor;
@class PBColor_Builder;
@class PBCommentInfo;
@class PBCommentInfo_Builder;
@class PBDraw;
@class PBDrawAction;
@class PBDrawAction_Builder;
@class PBDrawBg;
@class PBDrawBgGroup;
@class PBDrawBgGroup_Builder;
@class PBDrawBgMeta;
@class PBDrawBgMeta_Builder;
@class PBDrawBg_Builder;
@class PBDrawOpus;
@class PBDrawOpus_Builder;
@class PBDraw_Builder;
@class PBFeed;
@class PBFeedTimes;
@class PBFeedTimes_Builder;
@class PBFeed_Builder;
@class PBFrame;
@class PBFrameList;
@class PBFrameList_Builder;
@class PBFrame_Builder;
@class PBGameItem;
@class PBGameItemList;
@class PBGameItemList_Builder;
@class PBGameItem_Builder;
@class PBGameSession;
@class PBGameSessionChanged;
@class PBGameSessionChanged_Builder;
@class PBGameSession_Builder;
@class PBGameUser;
@class PBGameUser_Builder;
@class PBGradient;
@class PBGradient_Builder;
@class PBGuessContest;
@class PBGuessContest_Builder;
@class PBGuessRank;
@class PBGuessRank_Builder;
@class PBHotWord;
@class PBHotWordList;
@class PBHotWordList_Builder;
@class PBHotWord_Builder;
@class PBIAPProduct;
@class PBIAPProductList;
@class PBIAPProductList_Builder;
@class PBIAPProductPrice;
@class PBIAPProductPrice_Builder;
@class PBIAPProduct_Builder;
@class PBImageShapeGroup;
@class PBImageShapeGroupMeta;
@class PBImageShapeGroupMeta_Builder;
@class PBImageShapeGroup_Builder;
@class PBItemPriceInfo;
@class PBItemPriceInfo_Builder;
@class PBKeyValue;
@class PBKeyValue_Builder;
@class PBLayer;
@class PBLayer_Builder;
@class PBLayout;
@class PBLayoutList;
@class PBLayoutList_Builder;
@class PBLayout_Builder;
@class PBLearnDraw;
@class PBLearnDraw_Builder;
@class PBLocalizeString;
@class PBLocalizeString_Builder;
@class PBMessage;
@class PBMessageStat;
@class PBMessageStat_Builder;
@class PBMessage_Builder;
@class PBNoCompressDrawAction;
@class PBNoCompressDrawAction_Builder;
@class PBNoCompressDrawData;
@class PBNoCompressDrawData_Builder;
@class PBOpus;
@class PBOpusGuess;
@class PBOpusGuess_Builder;
@class PBOpusList;
@class PBOpusList_Builder;
@class PBOpusRank;
@class PBOpusRank_Builder;
@class PBOpus_Builder;
@class PBPoint;
@class PBPoint_Builder;
@class PBPromotionInfo;
@class PBPromotionInfo_Builder;
@class PBRect;
@class PBRect_Builder;
@class PBSNSUser;
@class PBSNSUser_Builder;
@class PBSingOpus;
@class PBSingOpus_Builder;
@class PBSize;
@class PBSize_Builder;
@class PBSong;
@class PBSongCategory;
@class PBSongCategoryList;
@class PBSongCategoryList_Builder;
@class PBSongCategory_Builder;
@class PBSongList;
@class PBSongList_Builder;
@class PBSong_Builder;
@class PBUserBasicInfo;
@class PBUserBasicInfo_Builder;
@class PBUserItem;
@class PBUserItemList;
@class PBUserItemList_Builder;
@class PBUserItem_Builder;
@class PBUserLevel;
@class PBUserLevel_Builder;
@class PBUserResult;
@class PBUserResult_Builder;
@class PBWall;
@class PBWallOpus;
@class PBWallOpus_Builder;
@class PBWall_Builder;
typedef enum {
  PBOpusCategoryTypeDrawCategory = 0,
  PBOpusCategoryTypeSingCategory = 1,
  PBOpusCategoryTypeAskPsCategory = 2,
} PBOpusCategoryType;

BOOL PBOpusCategoryTypeIsValidValue(PBOpusCategoryType value);

typedef enum {
  PBLanguageChinese = 1,
  PBLanguageEnglish = 2,
} PBLanguage;

BOOL PBLanguageIsValidValue(PBLanguage value);

typedef enum {
  PBOpusTypeUnknown = 0,
  PBOpusTypeDraw = 1,
  PBOpusTypeGuess = 2,
  PBOpusTypeComment = 3,
  PBOpusTypeRepost = 4,
  PBOpusTypeDrawToUser = 5,
  PBOpusTypeFlower = 6,
  PBOpusTypeTomato = 7,
  PBOpusTypeOnlyComment = 8,
  PBOpusTypeDrawContest = 9,
  PBOpusTypeSing = 1000,
  PBOpusTypeSingToUser = 1001,
  PBOpusTypeSingContest = 1002,
  PBOpusTypeAskPs = 1500,
  PBOpusTypeAskPsOpus = 1501,
} PBOpusType;

BOOL PBOpusTypeIsValidValue(PBOpusType value);

typedef enum {
  PBOpusStoreTypeNormalOpus = 0,
  PBOpusStoreTypeDraftOpus = 1,
  PBOpusStoreTypeSubmitOpus = 2,
  PBOpusStoreTypeSavedOpus = 3,
} PBOpusStoreType;

BOOL PBOpusStoreTypeIsValidValue(PBOpusStoreType value);

typedef enum {
  PBOpusStatusOpusStatusNormal = 0,
  PBOpusStatusOpusStatusDelete = 1,
} PBOpusStatus;

BOOL PBOpusStatusIsValidValue(PBOpusStatus value);

typedef enum {
  PBFeedTimesTypeFeedTimesTypeMatch = 1,
  PBFeedTimesTypeFeedTimesTypeGuess = 2,
  PBFeedTimesTypeFeedTimesTypeCorrect = 3,
  PBFeedTimesTypeFeedTimesTypeComment = 4,
  PBFeedTimesTypeFeedTimesTypeFlower = 5,
  PBFeedTimesTypeFeedTimesTypeTomato = 6,
  PBFeedTimesTypeFeedTimesTypeSave = 7,
} PBFeedTimesType;

BOOL PBFeedTimesTypeIsValidValue(PBFeedTimesType value);

typedef enum {
  PBRankTypeHotRank = 1,
  PBRankTypeAllTimeRank = 2,
} PBRankType;

BOOL PBRankTypeIsValidValue(PBRankType value);

typedef enum {
  PBUserGuessModeGuessModeHappy = 1,
  PBUserGuessModeGuessModeGenius = 2,
  PBUserGuessModeGuessModeContest = 3,
} PBUserGuessMode;

BOOL PBUserGuessModeIsValidValue(PBUserGuessMode value);

typedef enum {
  PBGuessContestStateGuessContestStateEnd = 0,
  PBGuessContestStateGuessContestStateIng = 1,
  PBGuessContestStateGuessContestStateNotStart = 2,
} PBGuessContestState;

BOOL PBGuessContestStateIsValidValue(PBGuessContestState value);


@interface OpusRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBDrawOpus : PBGeneratedMessage {
@private
  BOOL hasLevel_:1;
  int32_t level;
}
- (BOOL) hasLevel;
@property (readonly) int32_t level;

+ (PBDrawOpus*) defaultInstance;
- (PBDrawOpus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDrawOpus_Builder*) builder;
+ (PBDrawOpus_Builder*) builder;
+ (PBDrawOpus_Builder*) builderWithPrototype:(PBDrawOpus*) prototype;

+ (PBDrawOpus*) parseFromData:(NSData*) data;
+ (PBDrawOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBDrawOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDrawOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDrawOpus_Builder : PBGeneratedMessage_Builder {
@private
  PBDrawOpus* result;
}

- (PBDrawOpus*) defaultInstance;

- (PBDrawOpus_Builder*) clear;
- (PBDrawOpus_Builder*) clone;

- (PBDrawOpus*) build;
- (PBDrawOpus*) buildPartial;

- (PBDrawOpus_Builder*) mergeFrom:(PBDrawOpus*) other;
- (PBDrawOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDrawOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLevel;
- (int32_t) level;
- (PBDrawOpus_Builder*) setLevel:(int32_t) value;
- (PBDrawOpus_Builder*) clearLevel;
@end

@interface PBAskPs : PBGeneratedMessage {
@private
  BOOL hasAwardCoinsPerUser_:1;
  BOOL hasAwardCoinsMaxTotal_:1;
  BOOL hasAwardIngotBestUser_:1;
  BOOL hasAwardBestUserId_:1;
  int32_t awardCoinsPerUser;
  int32_t awardCoinsMaxTotal;
  int32_t awardIngotBestUser;
  NSString* awardBestUserId;
  NSMutableArray* mutableRequirementList;
}
- (BOOL) hasAwardCoinsPerUser;
- (BOOL) hasAwardCoinsMaxTotal;
- (BOOL) hasAwardIngotBestUser;
- (BOOL) hasAwardBestUserId;
@property (readonly) int32_t awardCoinsPerUser;
@property (readonly) int32_t awardCoinsMaxTotal;
@property (readonly) int32_t awardIngotBestUser;
@property (readonly, retain) NSString* awardBestUserId;
- (NSArray*) requirementList;
- (NSString*) requirementAtIndex:(int32_t) index;

+ (PBAskPs*) defaultInstance;
- (PBAskPs*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBAskPs_Builder*) builder;
+ (PBAskPs_Builder*) builder;
+ (PBAskPs_Builder*) builderWithPrototype:(PBAskPs*) prototype;

+ (PBAskPs*) parseFromData:(NSData*) data;
+ (PBAskPs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input;
+ (PBAskPs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBAskPs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBAskPs_Builder : PBGeneratedMessage_Builder {
@private
  PBAskPs* result;
}

- (PBAskPs*) defaultInstance;

- (PBAskPs_Builder*) clear;
- (PBAskPs_Builder*) clone;

- (PBAskPs*) build;
- (PBAskPs*) buildPartial;

- (PBAskPs_Builder*) mergeFrom:(PBAskPs*) other;
- (PBAskPs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBAskPs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) requirementList;
- (NSString*) requirementAtIndex:(int32_t) index;
- (PBAskPs_Builder*) replaceRequirementAtIndex:(int32_t) index with:(NSString*) value;
- (PBAskPs_Builder*) addRequirement:(NSString*) value;
- (PBAskPs_Builder*) addAllRequirement:(NSArray*) values;
- (PBAskPs_Builder*) clearRequirementList;

- (BOOL) hasAwardCoinsPerUser;
- (int32_t) awardCoinsPerUser;
- (PBAskPs_Builder*) setAwardCoinsPerUser:(int32_t) value;
- (PBAskPs_Builder*) clearAwardCoinsPerUser;

- (BOOL) hasAwardCoinsMaxTotal;
- (int32_t) awardCoinsMaxTotal;
- (PBAskPs_Builder*) setAwardCoinsMaxTotal:(int32_t) value;
- (PBAskPs_Builder*) clearAwardCoinsMaxTotal;

- (BOOL) hasAwardIngotBestUser;
- (int32_t) awardIngotBestUser;
- (PBAskPs_Builder*) setAwardIngotBestUser:(int32_t) value;
- (PBAskPs_Builder*) clearAwardIngotBestUser;

- (BOOL) hasAwardBestUserId;
- (NSString*) awardBestUserId;
- (PBAskPs_Builder*) setAwardBestUserId:(NSString*) value;
- (PBAskPs_Builder*) clearAwardBestUserId;
@end

@interface PBAskPsOpus : PBGeneratedMessage {
@private
  BOOL hasAskPsId_:1;
  NSString* askPsId;
}
- (BOOL) hasAskPsId;
@property (readonly, retain) NSString* askPsId;

+ (PBAskPsOpus*) defaultInstance;
- (PBAskPsOpus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBAskPsOpus_Builder*) builder;
+ (PBAskPsOpus_Builder*) builder;
+ (PBAskPsOpus_Builder*) builderWithPrototype:(PBAskPsOpus*) prototype;

+ (PBAskPsOpus*) parseFromData:(NSData*) data;
+ (PBAskPsOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBAskPsOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBAskPsOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBAskPsOpus_Builder : PBGeneratedMessage_Builder {
@private
  PBAskPsOpus* result;
}

- (PBAskPsOpus*) defaultInstance;

- (PBAskPsOpus_Builder*) clear;
- (PBAskPsOpus_Builder*) clone;

- (PBAskPsOpus*) build;
- (PBAskPsOpus*) buildPartial;

- (PBAskPsOpus_Builder*) mergeFrom:(PBAskPsOpus*) other;
- (PBAskPsOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBAskPsOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAskPsId;
- (NSString*) askPsId;
- (PBAskPsOpus_Builder*) setAskPsId:(NSString*) value;
- (PBAskPsOpus_Builder*) clearAskPsId;
@end

@interface PBOpus : PBGeneratedMessage {
@private
  BOOL hasIsRecovery_:1;
  BOOL hasDeviceType_:1;
  BOOL hasStatus_:1;
  BOOL hasCreateDate_:1;
  BOOL hasContestId_:1;
  BOOL hasLocalDataUrl_:1;
  BOOL hasLocalImageUrl_:1;
  BOOL hasAppId_:1;
  BOOL hasDeviceName_:1;
  BOOL hasLocalThumbImageUrl_:1;
  BOOL hasDataUrl_:1;
  BOOL hasThumbImage_:1;
  BOOL hasImage_:1;
  BOOL hasDesc_:1;
  BOOL hasName_:1;
  BOOL hasOpusId_:1;
  BOOL hasGuessInfo_:1;
  BOOL hasAskPsOpus_:1;
  BOOL hasAskPs_:1;
  BOOL hasSing_:1;
  BOOL hasDraw_:1;
  BOOL hasTargetUser_:1;
  BOOL hasAuthor_:1;
  BOOL hasCategory_:1;
  BOOL hasLanguage_:1;
  BOOL hasStoreType_:1;
  BOOL hasType_:1;
  BOOL isRecovery_:1;
  int32_t deviceType;
  int32_t status;
  int32_t createDate;
  NSString* contestId;
  NSString* localDataUrl;
  NSString* localImageUrl;
  NSString* appId;
  NSString* deviceName;
  NSString* localThumbImageUrl;
  NSString* dataUrl;
  NSString* thumbImage;
  NSString* image;
  NSString* desc;
  NSString* name;
  NSString* opusId;
  PBOpusGuess* guessInfo;
  PBAskPsOpus* askPsOpus;
  PBAskPs* askPs;
  PBSingOpus* sing;
  PBDrawOpus* draw;
  PBGameUser* targetUser;
  PBGameUser* author;
  PBOpusCategoryType category;
  PBLanguage language;
  PBOpusStoreType storeType;
  PBOpusType type;
  NSMutableArray* mutableFeedTimesList;
}
- (BOOL) hasOpusId;
- (BOOL) hasType;
- (BOOL) hasName;
- (BOOL) hasDesc;
- (BOOL) hasImage;
- (BOOL) hasThumbImage;
- (BOOL) hasDataUrl;
- (BOOL) hasLanguage;
- (BOOL) hasCategory;
- (BOOL) hasCreateDate;
- (BOOL) hasStatus;
- (BOOL) hasDeviceType;
- (BOOL) hasDeviceName;
- (BOOL) hasAppId;
- (BOOL) hasAuthor;
- (BOOL) hasTargetUser;
- (BOOL) hasContestId;
- (BOOL) hasDraw;
- (BOOL) hasSing;
- (BOOL) hasAskPs;
- (BOOL) hasAskPsOpus;
- (BOOL) hasLocalDataUrl;
- (BOOL) hasLocalImageUrl;
- (BOOL) hasLocalThumbImageUrl;
- (BOOL) hasIsRecovery;
- (BOOL) hasStoreType;
- (BOOL) hasGuessInfo;
@property (readonly, retain) NSString* opusId;
@property (readonly) PBOpusType type;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* desc;
@property (readonly, retain) NSString* image;
@property (readonly, retain) NSString* thumbImage;
@property (readonly, retain) NSString* dataUrl;
@property (readonly) PBLanguage language;
@property (readonly) PBOpusCategoryType category;
@property (readonly) int32_t createDate;
@property (readonly) int32_t status;
@property (readonly) int32_t deviceType;
@property (readonly, retain) NSString* deviceName;
@property (readonly, retain) NSString* appId;
@property (readonly, retain) PBGameUser* author;
@property (readonly, retain) PBGameUser* targetUser;
@property (readonly, retain) NSString* contestId;
@property (readonly, retain) PBDrawOpus* draw;
@property (readonly, retain) PBSingOpus* sing;
@property (readonly, retain) PBAskPs* askPs;
@property (readonly, retain) PBAskPsOpus* askPsOpus;
@property (readonly, retain) NSString* localDataUrl;
@property (readonly, retain) NSString* localImageUrl;
@property (readonly, retain) NSString* localThumbImageUrl;
- (BOOL) isRecovery;
@property (readonly) PBOpusStoreType storeType;
@property (readonly, retain) PBOpusGuess* guessInfo;
- (NSArray*) feedTimesList;
- (PBFeedTimes*) feedTimesAtIndex:(int32_t) index;

+ (PBOpus*) defaultInstance;
- (PBOpus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpus_Builder*) builder;
+ (PBOpus_Builder*) builder;
+ (PBOpus_Builder*) builderWithPrototype:(PBOpus*) prototype;

+ (PBOpus*) parseFromData:(NSData*) data;
+ (PBOpus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpus_Builder : PBGeneratedMessage_Builder {
@private
  PBOpus* result;
}

- (PBOpus*) defaultInstance;

- (PBOpus_Builder*) clear;
- (PBOpus_Builder*) clone;

- (PBOpus*) build;
- (PBOpus*) buildPartial;

- (PBOpus_Builder*) mergeFrom:(PBOpus*) other;
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOpusId;
- (NSString*) opusId;
- (PBOpus_Builder*) setOpusId:(NSString*) value;
- (PBOpus_Builder*) clearOpusId;

- (BOOL) hasType;
- (PBOpusType) type;
- (PBOpus_Builder*) setType:(PBOpusType) value;
- (PBOpus_Builder*) clearType;

- (BOOL) hasName;
- (NSString*) name;
- (PBOpus_Builder*) setName:(NSString*) value;
- (PBOpus_Builder*) clearName;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBOpus_Builder*) setDesc:(NSString*) value;
- (PBOpus_Builder*) clearDesc;

- (BOOL) hasImage;
- (NSString*) image;
- (PBOpus_Builder*) setImage:(NSString*) value;
- (PBOpus_Builder*) clearImage;

- (BOOL) hasThumbImage;
- (NSString*) thumbImage;
- (PBOpus_Builder*) setThumbImage:(NSString*) value;
- (PBOpus_Builder*) clearThumbImage;

- (BOOL) hasDataUrl;
- (NSString*) dataUrl;
- (PBOpus_Builder*) setDataUrl:(NSString*) value;
- (PBOpus_Builder*) clearDataUrl;

- (BOOL) hasLanguage;
- (PBLanguage) language;
- (PBOpus_Builder*) setLanguage:(PBLanguage) value;
- (PBOpus_Builder*) clearLanguage;

- (BOOL) hasCategory;
- (PBOpusCategoryType) category;
- (PBOpus_Builder*) setCategory:(PBOpusCategoryType) value;
- (PBOpus_Builder*) clearCategory;

- (BOOL) hasCreateDate;
- (int32_t) createDate;
- (PBOpus_Builder*) setCreateDate:(int32_t) value;
- (PBOpus_Builder*) clearCreateDate;

- (BOOL) hasStatus;
- (int32_t) status;
- (PBOpus_Builder*) setStatus:(int32_t) value;
- (PBOpus_Builder*) clearStatus;

- (BOOL) hasDeviceType;
- (int32_t) deviceType;
- (PBOpus_Builder*) setDeviceType:(int32_t) value;
- (PBOpus_Builder*) clearDeviceType;

- (BOOL) hasDeviceName;
- (NSString*) deviceName;
- (PBOpus_Builder*) setDeviceName:(NSString*) value;
- (PBOpus_Builder*) clearDeviceName;

- (BOOL) hasAppId;
- (NSString*) appId;
- (PBOpus_Builder*) setAppId:(NSString*) value;
- (PBOpus_Builder*) clearAppId;

- (BOOL) hasAuthor;
- (PBGameUser*) author;
- (PBOpus_Builder*) setAuthor:(PBGameUser*) value;
- (PBOpus_Builder*) setAuthorBuilder:(PBGameUser_Builder*) builderForValue;
- (PBOpus_Builder*) mergeAuthor:(PBGameUser*) value;
- (PBOpus_Builder*) clearAuthor;

- (BOOL) hasTargetUser;
- (PBGameUser*) targetUser;
- (PBOpus_Builder*) setTargetUser:(PBGameUser*) value;
- (PBOpus_Builder*) setTargetUserBuilder:(PBGameUser_Builder*) builderForValue;
- (PBOpus_Builder*) mergeTargetUser:(PBGameUser*) value;
- (PBOpus_Builder*) clearTargetUser;

- (BOOL) hasContestId;
- (NSString*) contestId;
- (PBOpus_Builder*) setContestId:(NSString*) value;
- (PBOpus_Builder*) clearContestId;

- (NSArray*) feedTimesList;
- (PBFeedTimes*) feedTimesAtIndex:(int32_t) index;
- (PBOpus_Builder*) replaceFeedTimesAtIndex:(int32_t) index with:(PBFeedTimes*) value;
- (PBOpus_Builder*) addFeedTimes:(PBFeedTimes*) value;
- (PBOpus_Builder*) addAllFeedTimes:(NSArray*) values;
- (PBOpus_Builder*) clearFeedTimesList;

- (BOOL) hasDraw;
- (PBDrawOpus*) draw;
- (PBOpus_Builder*) setDraw:(PBDrawOpus*) value;
- (PBOpus_Builder*) setDrawBuilder:(PBDrawOpus_Builder*) builderForValue;
- (PBOpus_Builder*) mergeDraw:(PBDrawOpus*) value;
- (PBOpus_Builder*) clearDraw;

- (BOOL) hasSing;
- (PBSingOpus*) sing;
- (PBOpus_Builder*) setSing:(PBSingOpus*) value;
- (PBOpus_Builder*) setSingBuilder:(PBSingOpus_Builder*) builderForValue;
- (PBOpus_Builder*) mergeSing:(PBSingOpus*) value;
- (PBOpus_Builder*) clearSing;

- (BOOL) hasAskPs;
- (PBAskPs*) askPs;
- (PBOpus_Builder*) setAskPs:(PBAskPs*) value;
- (PBOpus_Builder*) setAskPsBuilder:(PBAskPs_Builder*) builderForValue;
- (PBOpus_Builder*) mergeAskPs:(PBAskPs*) value;
- (PBOpus_Builder*) clearAskPs;

- (BOOL) hasAskPsOpus;
- (PBAskPsOpus*) askPsOpus;
- (PBOpus_Builder*) setAskPsOpus:(PBAskPsOpus*) value;
- (PBOpus_Builder*) setAskPsOpusBuilder:(PBAskPsOpus_Builder*) builderForValue;
- (PBOpus_Builder*) mergeAskPsOpus:(PBAskPsOpus*) value;
- (PBOpus_Builder*) clearAskPsOpus;

- (BOOL) hasLocalDataUrl;
- (NSString*) localDataUrl;
- (PBOpus_Builder*) setLocalDataUrl:(NSString*) value;
- (PBOpus_Builder*) clearLocalDataUrl;

- (BOOL) hasLocalImageUrl;
- (NSString*) localImageUrl;
- (PBOpus_Builder*) setLocalImageUrl:(NSString*) value;
- (PBOpus_Builder*) clearLocalImageUrl;

- (BOOL) hasLocalThumbImageUrl;
- (NSString*) localThumbImageUrl;
- (PBOpus_Builder*) setLocalThumbImageUrl:(NSString*) value;
- (PBOpus_Builder*) clearLocalThumbImageUrl;

- (BOOL) hasIsRecovery;
- (BOOL) isRecovery;
- (PBOpus_Builder*) setIsRecovery:(BOOL) value;
- (PBOpus_Builder*) clearIsRecovery;

- (BOOL) hasStoreType;
- (PBOpusStoreType) storeType;
- (PBOpus_Builder*) setStoreType:(PBOpusStoreType) value;
- (PBOpus_Builder*) clearStoreType;

- (BOOL) hasGuessInfo;
- (PBOpusGuess*) guessInfo;
- (PBOpus_Builder*) setGuessInfo:(PBOpusGuess*) value;
- (PBOpus_Builder*) setGuessInfoBuilder:(PBOpusGuess_Builder*) builderForValue;
- (PBOpus_Builder*) mergeGuessInfo:(PBOpusGuess*) value;
- (PBOpus_Builder*) clearGuessInfo;
@end

@interface PBOpusList : PBGeneratedMessage {
@private
  NSMutableArray* mutableOpusesList;
}
- (NSArray*) opusesList;
- (PBOpus*) opusesAtIndex:(int32_t) index;

+ (PBOpusList*) defaultInstance;
- (PBOpusList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusList_Builder*) builder;
+ (PBOpusList_Builder*) builder;
+ (PBOpusList_Builder*) builderWithPrototype:(PBOpusList*) prototype;

+ (PBOpusList*) parseFromData:(NSData*) data;
+ (PBOpusList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusList*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpusList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpusList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusList_Builder : PBGeneratedMessage_Builder {
@private
  PBOpusList* result;
}

- (PBOpusList*) defaultInstance;

- (PBOpusList_Builder*) clear;
- (PBOpusList_Builder*) clone;

- (PBOpusList*) build;
- (PBOpusList*) buildPartial;

- (PBOpusList_Builder*) mergeFrom:(PBOpusList*) other;
- (PBOpusList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) opusesList;
- (PBOpus*) opusesAtIndex:(int32_t) index;
- (PBOpusList_Builder*) replaceOpusesAtIndex:(int32_t) index with:(PBOpus*) value;
- (PBOpusList_Builder*) addOpuses:(PBOpus*) value;
- (PBOpusList_Builder*) addAllOpuses:(NSArray*) values;
- (PBOpusList_Builder*) clearOpusesList;
@end

@interface PBOpusGuess : PBGeneratedMessage {
@private
  BOOL hasIsCorrect_:1;
  BOOL isCorrect_:1;
}
- (BOOL) hasIsCorrect;
- (BOOL) isCorrect;

+ (PBOpusGuess*) defaultInstance;
- (PBOpusGuess*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOpusGuess_Builder*) builder;
+ (PBOpusGuess_Builder*) builder;
+ (PBOpusGuess_Builder*) builderWithPrototype:(PBOpusGuess*) prototype;

+ (PBOpusGuess*) parseFromData:(NSData*) data;
+ (PBOpusGuess*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusGuess*) parseFromInputStream:(NSInputStream*) input;
+ (PBOpusGuess*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOpusGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOpusGuess*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOpusGuess_Builder : PBGeneratedMessage_Builder {
@private
  PBOpusGuess* result;
}

- (PBOpusGuess*) defaultInstance;

- (PBOpusGuess_Builder*) clear;
- (PBOpusGuess_Builder*) clone;

- (PBOpusGuess*) build;
- (PBOpusGuess*) buildPartial;

- (PBOpusGuess_Builder*) mergeFrom:(PBOpusGuess*) other;
- (PBOpusGuess_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOpusGuess_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIsCorrect;
- (BOOL) isCorrect;
- (PBOpusGuess_Builder*) setIsCorrect:(BOOL) value;
- (PBOpusGuess_Builder*) clearIsCorrect;
@end

@interface PBGuessRank : PBGeneratedMessage {
@private
  BOOL hasGuess_:1;
  BOOL hasPass_:1;
  BOOL hasSpendTime_:1;
  BOOL hasEarn_:1;
  BOOL hasLead_:1;
  BOOL hasStartTime_:1;
  BOOL hasEndTime_:1;
  BOOL hasUser_:1;
  BOOL hasCurrency_:1;
  int32_t guess;
  int32_t pass;
  int32_t spendTime;
  int32_t earn;
  int32_t lead;
  int32_t startTime;
  int32_t endTime;
  PBGameUser* user;
  PBGameCurrency currency;
}
- (BOOL) hasUser;
- (BOOL) hasGuess;
- (BOOL) hasPass;
- (BOOL) hasSpendTime;
- (BOOL) hasEarn;
- (BOOL) hasCurrency;
- (BOOL) hasLead;
- (BOOL) hasStartTime;
- (BOOL) hasEndTime;
@property (readonly, retain) PBGameUser* user;
@property (readonly) int32_t guess;
@property (readonly) int32_t pass;
@property (readonly) int32_t spendTime;
@property (readonly) int32_t earn;
@property (readonly) PBGameCurrency currency;
@property (readonly) int32_t lead;
@property (readonly) int32_t startTime;
@property (readonly) int32_t endTime;

+ (PBGuessRank*) defaultInstance;
- (PBGuessRank*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGuessRank_Builder*) builder;
+ (PBGuessRank_Builder*) builder;
+ (PBGuessRank_Builder*) builderWithPrototype:(PBGuessRank*) prototype;

+ (PBGuessRank*) parseFromData:(NSData*) data;
+ (PBGuessRank*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessRank*) parseFromInputStream:(NSInputStream*) input;
+ (PBGuessRank*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessRank*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGuessRank*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGuessRank_Builder : PBGeneratedMessage_Builder {
@private
  PBGuessRank* result;
}

- (PBGuessRank*) defaultInstance;

- (PBGuessRank_Builder*) clear;
- (PBGuessRank_Builder*) clone;

- (PBGuessRank*) build;
- (PBGuessRank*) buildPartial;

- (PBGuessRank_Builder*) mergeFrom:(PBGuessRank*) other;
- (PBGuessRank_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGuessRank_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUser;
- (PBGameUser*) user;
- (PBGuessRank_Builder*) setUser:(PBGameUser*) value;
- (PBGuessRank_Builder*) setUserBuilder:(PBGameUser_Builder*) builderForValue;
- (PBGuessRank_Builder*) mergeUser:(PBGameUser*) value;
- (PBGuessRank_Builder*) clearUser;

- (BOOL) hasGuess;
- (int32_t) guess;
- (PBGuessRank_Builder*) setGuess:(int32_t) value;
- (PBGuessRank_Builder*) clearGuess;

- (BOOL) hasPass;
- (int32_t) pass;
- (PBGuessRank_Builder*) setPass:(int32_t) value;
- (PBGuessRank_Builder*) clearPass;

- (BOOL) hasSpendTime;
- (int32_t) spendTime;
- (PBGuessRank_Builder*) setSpendTime:(int32_t) value;
- (PBGuessRank_Builder*) clearSpendTime;

- (BOOL) hasEarn;
- (int32_t) earn;
- (PBGuessRank_Builder*) setEarn:(int32_t) value;
- (PBGuessRank_Builder*) clearEarn;

- (BOOL) hasCurrency;
- (PBGameCurrency) currency;
- (PBGuessRank_Builder*) setCurrency:(PBGameCurrency) value;
- (PBGuessRank_Builder*) clearCurrency;

- (BOOL) hasLead;
- (int32_t) lead;
- (PBGuessRank_Builder*) setLead:(int32_t) value;
- (PBGuessRank_Builder*) clearLead;

- (BOOL) hasStartTime;
- (int32_t) startTime;
- (PBGuessRank_Builder*) setStartTime:(int32_t) value;
- (PBGuessRank_Builder*) clearStartTime;

- (BOOL) hasEndTime;
- (int32_t) endTime;
- (PBGuessRank_Builder*) setEndTime:(int32_t) value;
- (PBGuessRank_Builder*) clearEndTime;
@end

@interface PBGuessContest : PBGeneratedMessage {
@private
  BOOL hasState_:1;
  BOOL hasStartTime_:1;
  BOOL hasEndTime_:1;
  BOOL hasContestId_:1;
  BOOL hasName_:1;
  int32_t state;
  int32_t startTime;
  int32_t endTime;
  NSString* contestId;
  NSString* name;
}
- (BOOL) hasContestId;
- (BOOL) hasName;
- (BOOL) hasState;
- (BOOL) hasStartTime;
- (BOOL) hasEndTime;
@property (readonly, retain) NSString* contestId;
@property (readonly, retain) NSString* name;
@property (readonly) int32_t state;
@property (readonly) int32_t startTime;
@property (readonly) int32_t endTime;

+ (PBGuessContest*) defaultInstance;
- (PBGuessContest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBGuessContest_Builder*) builder;
+ (PBGuessContest_Builder*) builder;
+ (PBGuessContest_Builder*) builderWithPrototype:(PBGuessContest*) prototype;

+ (PBGuessContest*) parseFromData:(NSData*) data;
+ (PBGuessContest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessContest*) parseFromInputStream:(NSInputStream*) input;
+ (PBGuessContest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBGuessContest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBGuessContest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBGuessContest_Builder : PBGeneratedMessage_Builder {
@private
  PBGuessContest* result;
}

- (PBGuessContest*) defaultInstance;

- (PBGuessContest_Builder*) clear;
- (PBGuessContest_Builder*) clone;

- (PBGuessContest*) build;
- (PBGuessContest*) buildPartial;

- (PBGuessContest_Builder*) mergeFrom:(PBGuessContest*) other;
- (PBGuessContest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBGuessContest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasContestId;
- (NSString*) contestId;
- (PBGuessContest_Builder*) setContestId:(NSString*) value;
- (PBGuessContest_Builder*) clearContestId;

- (BOOL) hasName;
- (NSString*) name;
- (PBGuessContest_Builder*) setName:(NSString*) value;
- (PBGuessContest_Builder*) clearName;

- (BOOL) hasState;
- (int32_t) state;
- (PBGuessContest_Builder*) setState:(int32_t) value;
- (PBGuessContest_Builder*) clearState;

- (BOOL) hasStartTime;
- (int32_t) startTime;
- (PBGuessContest_Builder*) setStartTime:(int32_t) value;
- (PBGuessContest_Builder*) clearStartTime;

- (BOOL) hasEndTime;
- (int32_t) endTime;
- (PBGuessContest_Builder*) setEndTime:(int32_t) value;
- (PBGuessContest_Builder*) clearEndTime;
@end

