// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "GameMessage.pb.h"

@implementation GameMessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GameMessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [GameBasicRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface JoinGameRequest ()
@property (retain) NSString* userId;
@property (retain) NSString* gameId;
@property int32_t autoNew;
@end

@implementation JoinGameRequest

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasAutoNew {
  return !!hasAutoNew_;
}
- (void) setHasAutoNew:(BOOL) value {
  hasAutoNew_ = !!value;
}
@synthesize autoNew;
- (void) dealloc {
  self.userId = nil;
  self.gameId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.gameId = @"";
    self.autoNew = 0;
  }
  return self;
}
static JoinGameRequest* defaultJoinGameRequestInstance = nil;
+ (void) initialize {
  if (self == [JoinGameRequest class]) {
    defaultJoinGameRequestInstance = [[JoinGameRequest alloc] init];
  }
}
+ (JoinGameRequest*) defaultInstance {
  return defaultJoinGameRequestInstance;
}
- (JoinGameRequest*) defaultInstance {
  return defaultJoinGameRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasGameId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasGameId) {
    [output writeString:2 value:self.gameId];
  }
  if (self.hasAutoNew) {
    [output writeInt32:3 value:self.autoNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeStringSize(1, self.userId);
  }
  if (self.hasGameId) {
    size += computeStringSize(2, self.gameId);
  }
  if (self.hasAutoNew) {
    size += computeInt32Size(3, self.autoNew);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (JoinGameRequest*) parseFromData:(NSData*) data {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromData:data] build];
}
+ (JoinGameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromInputStream:input] build];
}
+ (JoinGameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromCodedInputStream:input] build];
}
+ (JoinGameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameRequest*)[[[JoinGameRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGameRequest_Builder*) builder {
  return [[[JoinGameRequest_Builder alloc] init] autorelease];
}
+ (JoinGameRequest_Builder*) builderWithPrototype:(JoinGameRequest*) prototype {
  return [[JoinGameRequest builder] mergeFrom:prototype];
}
- (JoinGameRequest_Builder*) builder {
  return [JoinGameRequest builder];
}
@end

@interface JoinGameRequest_Builder()
@property (retain) JoinGameRequest* result;
@end

@implementation JoinGameRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[JoinGameRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (JoinGameRequest_Builder*) clear {
  self.result = [[[JoinGameRequest alloc] init] autorelease];
  return self;
}
- (JoinGameRequest_Builder*) clone {
  return [JoinGameRequest builderWithPrototype:result];
}
- (JoinGameRequest*) defaultInstance {
  return [JoinGameRequest defaultInstance];
}
- (JoinGameRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JoinGameRequest*) buildPartial {
  JoinGameRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (JoinGameRequest_Builder*) mergeFrom:(JoinGameRequest*) other {
  if (other == [JoinGameRequest defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasAutoNew) {
    [self setAutoNew:other.autoNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JoinGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JoinGameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setGameId:[input readString]];
        break;
      }
      case 24: {
        [self setAutoNew:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (JoinGameRequest_Builder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (JoinGameRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (JoinGameRequest_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (JoinGameRequest_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasAutoNew {
  return result.hasAutoNew;
}
- (int32_t) autoNew {
  return result.autoNew;
}
- (JoinGameRequest_Builder*) setAutoNew:(int32_t) value {
  result.hasAutoNew = YES;
  result.autoNew = value;
  return self;
}
- (JoinGameRequest_Builder*) clearAutoNew {
  result.hasAutoNew = NO;
  result.autoNew = 0;
  return self;
}
@end

@interface JoinGameResponse ()
@property (retain) PBGameSession* gameSession;
@end

@implementation JoinGameResponse

- (BOOL) hasGameSession {
  return !!hasGameSession_;
}
- (void) setHasGameSession:(BOOL) value {
  hasGameSession_ = !!value;
}
@synthesize gameSession;
- (void) dealloc {
  self.gameSession = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameSession = [PBGameSession defaultInstance];
  }
  return self;
}
static JoinGameResponse* defaultJoinGameResponseInstance = nil;
+ (void) initialize {
  if (self == [JoinGameResponse class]) {
    defaultJoinGameResponseInstance = [[JoinGameResponse alloc] init];
  }
}
+ (JoinGameResponse*) defaultInstance {
  return defaultJoinGameResponseInstance;
}
- (JoinGameResponse*) defaultInstance {
  return defaultJoinGameResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGameSession) {
    return NO;
  }
  if (!self.gameSession.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameSession) {
    [output writeMessage:1 value:self.gameSession];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGameSession) {
    size += computeMessageSize(1, self.gameSession);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (JoinGameResponse*) parseFromData:(NSData*) data {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromData:data] build];
}
+ (JoinGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromInputStream:input] build];
}
+ (JoinGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromCodedInputStream:input] build];
}
+ (JoinGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGameResponse*)[[[JoinGameResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGameResponse_Builder*) builder {
  return [[[JoinGameResponse_Builder alloc] init] autorelease];
}
+ (JoinGameResponse_Builder*) builderWithPrototype:(JoinGameResponse*) prototype {
  return [[JoinGameResponse builder] mergeFrom:prototype];
}
- (JoinGameResponse_Builder*) builder {
  return [JoinGameResponse builder];
}
@end

@interface JoinGameResponse_Builder()
@property (retain) JoinGameResponse* result;
@end

@implementation JoinGameResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[JoinGameResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (JoinGameResponse_Builder*) clear {
  self.result = [[[JoinGameResponse alloc] init] autorelease];
  return self;
}
- (JoinGameResponse_Builder*) clone {
  return [JoinGameResponse builderWithPrototype:result];
}
- (JoinGameResponse*) defaultInstance {
  return [JoinGameResponse defaultInstance];
}
- (JoinGameResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JoinGameResponse*) buildPartial {
  JoinGameResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (JoinGameResponse_Builder*) mergeFrom:(JoinGameResponse*) other {
  if (other == [JoinGameResponse defaultInstance]) {
    return self;
  }
  if (other.hasGameSession) {
    [self mergeGameSession:other.gameSession];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JoinGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JoinGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGameSession_Builder* subBuilder = [PBGameSession builder];
        if (self.hasGameSession) {
          [subBuilder mergeFrom:self.gameSession];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGameSession:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGameSession {
  return result.hasGameSession;
}
- (PBGameSession*) gameSession {
  return result.gameSession;
}
- (JoinGameResponse_Builder*) setGameSession:(PBGameSession*) value {
  result.hasGameSession = YES;
  result.gameSession = value;
  return self;
}
- (JoinGameResponse_Builder*) setGameSessionBuilder:(PBGameSession_Builder*) builderForValue {
  return [self setGameSession:[builderForValue build]];
}
- (JoinGameResponse_Builder*) mergeGameSession:(PBGameSession*) value {
  if (result.hasGameSession &&
      result.gameSession != [PBGameSession defaultInstance]) {
    result.gameSession =
      [[[PBGameSession builderWithPrototype:result.gameSession] mergeFrom:value] buildPartial];
  } else {
    result.gameSession = value;
  }
  result.hasGameSession = YES;
  return self;
}
- (JoinGameResponse_Builder*) clearGameSession {
  result.hasGameSession = NO;
  result.gameSession = [PBGameSession defaultInstance];
  return self;
}
@end

@interface GameRequest ()
@property GameRequest_CommandType command;
@property int32_t messageId;
@property (retain) JoinGameRequest* joinGameRequest;
@end

@implementation GameRequest

- (BOOL) hasCommand {
  return !!hasCommand_;
}
- (void) setHasCommand:(BOOL) value {
  hasCommand_ = !!value;
}
@synthesize command;
- (BOOL) hasMessageId {
  return !!hasMessageId_;
}
- (void) setHasMessageId:(BOOL) value {
  hasMessageId_ = !!value;
}
@synthesize messageId;
- (BOOL) hasJoinGameRequest {
  return !!hasJoinGameRequest_;
}
- (void) setHasJoinGameRequest:(BOOL) value {
  hasJoinGameRequest_ = !!value;
}
@synthesize joinGameRequest;
- (void) dealloc {
  self.joinGameRequest = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.command = GameRequest_CommandTypeJoinGame;
    self.messageId = 0;
    self.joinGameRequest = [JoinGameRequest defaultInstance];
  }
  return self;
}
static GameRequest* defaultGameRequestInstance = nil;
+ (void) initialize {
  if (self == [GameRequest class]) {
    defaultGameRequestInstance = [[GameRequest alloc] init];
  }
}
+ (GameRequest*) defaultInstance {
  return defaultGameRequestInstance;
}
- (GameRequest*) defaultInstance {
  return defaultGameRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommand) {
    return NO;
  }
  if (!self.hasMessageId) {
    return NO;
  }
  if (self.hasJoinGameRequest) {
    if (!self.joinGameRequest.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommand) {
    [output writeEnum:1 value:self.command];
  }
  if (self.hasMessageId) {
    [output writeInt32:2 value:self.messageId];
  }
  if (self.hasJoinGameRequest) {
    [output writeMessage:11 value:self.joinGameRequest];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommand) {
    size += computeEnumSize(1, self.command);
  }
  if (self.hasMessageId) {
    size += computeInt32Size(2, self.messageId);
  }
  if (self.hasJoinGameRequest) {
    size += computeMessageSize(11, self.joinGameRequest);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GameRequest*) parseFromData:(NSData*) data {
  return (GameRequest*)[[[GameRequest builder] mergeFromData:data] build];
}
+ (GameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameRequest*)[[[GameRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameRequest*) parseFromInputStream:(NSInputStream*) input {
  return (GameRequest*)[[[GameRequest builder] mergeFromInputStream:input] build];
}
+ (GameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameRequest*)[[[GameRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameRequest*)[[[GameRequest builder] mergeFromCodedInputStream:input] build];
}
+ (GameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameRequest*)[[[GameRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameRequest_Builder*) builder {
  return [[[GameRequest_Builder alloc] init] autorelease];
}
+ (GameRequest_Builder*) builderWithPrototype:(GameRequest*) prototype {
  return [[GameRequest builder] mergeFrom:prototype];
}
- (GameRequest_Builder*) builder {
  return [GameRequest builder];
}
@end

BOOL GameRequest_CommandTypeIsValidValue(GameRequest_CommandType value) {
  switch (value) {
    case GameRequest_CommandTypeJoinGame:
      return YES;
    default:
      return NO;
  }
}
@interface GameRequest_Builder()
@property (retain) GameRequest* result;
@end

@implementation GameRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameRequest_Builder*) clear {
  self.result = [[[GameRequest alloc] init] autorelease];
  return self;
}
- (GameRequest_Builder*) clone {
  return [GameRequest builderWithPrototype:result];
}
- (GameRequest*) defaultInstance {
  return [GameRequest defaultInstance];
}
- (GameRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameRequest*) buildPartial {
  GameRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameRequest_Builder*) mergeFrom:(GameRequest*) other {
  if (other == [GameRequest defaultInstance]) {
    return self;
  }
  if (other.hasCommand) {
    [self setCommand:other.command];
  }
  if (other.hasMessageId) {
    [self setMessageId:other.messageId];
  }
  if (other.hasJoinGameRequest) {
    [self mergeJoinGameRequest:other.joinGameRequest];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (GameRequest_CommandTypeIsValidValue(value)) {
          [self setCommand:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setMessageId:[input readInt32]];
        break;
      }
      case 90: {
        JoinGameRequest_Builder* subBuilder = [JoinGameRequest builder];
        if (self.hasJoinGameRequest) {
          [subBuilder mergeFrom:self.joinGameRequest];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setJoinGameRequest:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCommand {
  return result.hasCommand;
}
- (GameRequest_CommandType) command {
  return result.command;
}
- (GameRequest_Builder*) setCommand:(GameRequest_CommandType) value {
  result.hasCommand = YES;
  result.command = value;
  return self;
}
- (GameRequest_Builder*) clearCommand {
  result.hasCommand = NO;
  result.command = GameRequest_CommandTypeJoinGame;
  return self;
}
- (BOOL) hasMessageId {
  return result.hasMessageId;
}
- (int32_t) messageId {
  return result.messageId;
}
- (GameRequest_Builder*) setMessageId:(int32_t) value {
  result.hasMessageId = YES;
  result.messageId = value;
  return self;
}
- (GameRequest_Builder*) clearMessageId {
  result.hasMessageId = NO;
  result.messageId = 0;
  return self;
}
- (BOOL) hasJoinGameRequest {
  return result.hasJoinGameRequest;
}
- (JoinGameRequest*) joinGameRequest {
  return result.joinGameRequest;
}
- (GameRequest_Builder*) setJoinGameRequest:(JoinGameRequest*) value {
  result.hasJoinGameRequest = YES;
  result.joinGameRequest = value;
  return self;
}
- (GameRequest_Builder*) setJoinGameRequestBuilder:(JoinGameRequest_Builder*) builderForValue {
  return [self setJoinGameRequest:[builderForValue build]];
}
- (GameRequest_Builder*) mergeJoinGameRequest:(JoinGameRequest*) value {
  if (result.hasJoinGameRequest &&
      result.joinGameRequest != [JoinGameRequest defaultInstance]) {
    result.joinGameRequest =
      [[[JoinGameRequest builderWithPrototype:result.joinGameRequest] mergeFrom:value] buildPartial];
  } else {
    result.joinGameRequest = value;
  }
  result.hasJoinGameRequest = YES;
  return self;
}
- (GameRequest_Builder*) clearJoinGameRequest {
  result.hasJoinGameRequest = NO;
  result.joinGameRequest = [JoinGameRequest defaultInstance];
  return self;
}
@end

@interface GameResponse ()
@property int32_t messageId;
@property int32_t resultCode;
@property (retain) JoinGameResponse* joinGameResponse;
@end

@implementation GameResponse

- (BOOL) hasMessageId {
  return !!hasMessageId_;
}
- (void) setHasMessageId:(BOOL) value {
  hasMessageId_ = !!value;
}
@synthesize messageId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) value {
  hasResultCode_ = !!value;
}
@synthesize resultCode;
- (BOOL) hasJoinGameResponse {
  return !!hasJoinGameResponse_;
}
- (void) setHasJoinGameResponse:(BOOL) value {
  hasJoinGameResponse_ = !!value;
}
@synthesize joinGameResponse;
- (void) dealloc {
  self.joinGameResponse = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.messageId = 0;
    self.resultCode = 0;
    self.joinGameResponse = [JoinGameResponse defaultInstance];
  }
  return self;
}
static GameResponse* defaultGameResponseInstance = nil;
+ (void) initialize {
  if (self == [GameResponse class]) {
    defaultGameResponseInstance = [[GameResponse alloc] init];
  }
}
+ (GameResponse*) defaultInstance {
  return defaultGameResponseInstance;
}
- (GameResponse*) defaultInstance {
  return defaultGameResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMessageId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  if (self.hasJoinGameResponse) {
    if (!self.joinGameResponse.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMessageId) {
    [output writeInt32:1 value:self.messageId];
  }
  if (self.hasResultCode) {
    [output writeInt32:2 value:self.resultCode];
  }
  if (self.hasJoinGameResponse) {
    [output writeMessage:11 value:self.joinGameResponse];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMessageId) {
    size += computeInt32Size(1, self.messageId);
  }
  if (self.hasResultCode) {
    size += computeInt32Size(2, self.resultCode);
  }
  if (self.hasJoinGameResponse) {
    size += computeMessageSize(11, self.joinGameResponse);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GameResponse*) parseFromData:(NSData*) data {
  return (GameResponse*)[[[GameResponse builder] mergeFromData:data] build];
}
+ (GameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameResponse*)[[[GameResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GameResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GameResponse*)[[[GameResponse builder] mergeFromInputStream:input] build];
}
+ (GameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameResponse*)[[[GameResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GameResponse*)[[[GameResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GameResponse*)[[[GameResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GameResponse_Builder*) builder {
  return [[[GameResponse_Builder alloc] init] autorelease];
}
+ (GameResponse_Builder*) builderWithPrototype:(GameResponse*) prototype {
  return [[GameResponse builder] mergeFrom:prototype];
}
- (GameResponse_Builder*) builder {
  return [GameResponse builder];
}
@end

@interface GameResponse_Builder()
@property (retain) GameResponse* result;
@end

@implementation GameResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GameResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GameResponse_Builder*) clear {
  self.result = [[[GameResponse alloc] init] autorelease];
  return self;
}
- (GameResponse_Builder*) clone {
  return [GameResponse builderWithPrototype:result];
}
- (GameResponse*) defaultInstance {
  return [GameResponse defaultInstance];
}
- (GameResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GameResponse*) buildPartial {
  GameResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GameResponse_Builder*) mergeFrom:(GameResponse*) other {
  if (other == [GameResponse defaultInstance]) {
    return self;
  }
  if (other.hasMessageId) {
    [self setMessageId:other.messageId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  if (other.hasJoinGameResponse) {
    [self mergeJoinGameResponse:other.joinGameResponse];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMessageId:[input readInt32]];
        break;
      }
      case 16: {
        [self setResultCode:[input readInt32]];
        break;
      }
      case 90: {
        JoinGameResponse_Builder* subBuilder = [JoinGameResponse builder];
        if (self.hasJoinGameResponse) {
          [subBuilder mergeFrom:self.joinGameResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setJoinGameResponse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageId {
  return result.hasMessageId;
}
- (int32_t) messageId {
  return result.messageId;
}
- (GameResponse_Builder*) setMessageId:(int32_t) value {
  result.hasMessageId = YES;
  result.messageId = value;
  return self;
}
- (GameResponse_Builder*) clearMessageId {
  result.hasMessageId = NO;
  result.messageId = 0;
  return self;
}
- (BOOL) hasResultCode {
  return result.hasResultCode;
}
- (int32_t) resultCode {
  return result.resultCode;
}
- (GameResponse_Builder*) setResultCode:(int32_t) value {
  result.hasResultCode = YES;
  result.resultCode = value;
  return self;
}
- (GameResponse_Builder*) clearResultCode {
  result.hasResultCode = NO;
  result.resultCode = 0;
  return self;
}
- (BOOL) hasJoinGameResponse {
  return result.hasJoinGameResponse;
}
- (JoinGameResponse*) joinGameResponse {
  return result.joinGameResponse;
}
- (GameResponse_Builder*) setJoinGameResponse:(JoinGameResponse*) value {
  result.hasJoinGameResponse = YES;
  result.joinGameResponse = value;
  return self;
}
- (GameResponse_Builder*) setJoinGameResponseBuilder:(JoinGameResponse_Builder*) builderForValue {
  return [self setJoinGameResponse:[builderForValue build]];
}
- (GameResponse_Builder*) mergeJoinGameResponse:(JoinGameResponse*) value {
  if (result.hasJoinGameResponse &&
      result.joinGameResponse != [JoinGameResponse defaultInstance]) {
    result.joinGameResponse =
      [[[JoinGameResponse builderWithPrototype:result.joinGameResponse] mergeFrom:value] buildPartial];
  } else {
    result.joinGameResponse = value;
  }
  result.hasJoinGameResponse = YES;
  return self;
}
- (GameResponse_Builder*) clearJoinGameResponse {
  result.hasJoinGameResponse = NO;
  result.joinGameResponse = [JoinGameResponse defaultInstance];
  return self;
}
@end

