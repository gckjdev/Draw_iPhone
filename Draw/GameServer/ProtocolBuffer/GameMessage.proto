
import "GameBasic.proto";
import "Draw.proto";
import "Dice.proto";
import "GameConstants.proto";

package game;

option java_package = "com.orange.network.game.protocol.message";
option java_outer_classname = "GameMessageProtos";
  

message GetRoomsRequest {
  required string gameId = 2;                   // 游戏ID，比如你画我猜为：draw
  optional int32 roomType = 3;                  // 0表示所有房间，1表示好友房间
}

message GetRoomsResponse {
  repeated PBGameSession sessions = 1;     
}

message CreateRoomRequest {
  required string gameId = 1;                   // 游戏ID，比如你画我猜为：draw
  required PBGameUser user = 2;
  required string roomName = 3;                 // 房间名
}

message CreateRoomResponse {
}

message EnterRoomRequest {
  required PBGameUser user = 1;
}

message EnterRoomResponse {
  required PBGameSession gameSession = 1;
}

message RegisterRoomsNotificationRequest {
  required int32 userId = 1;
  repeated int32 sessionIds = 2[packed=true];
}

message RegisterRoomsNotificationResponse {

}

message UnRegisterRoomsNotificationRequest {
  required int32 userId = 1;
  repeated int32 sessionIds = 2[packed=true];     //　数组为空表示取消所有注册
}

message UnRegisterRoomsNotificationResponse {

}


message CallDiceRequest {
  optional int32 num = 10;                     
  optional int32 dice = 11;                     
}

message CallDiceResponse {
}

message OpenDiceRequest {
}

message OpenDiceResponse {
}

message UseItemRequest {
  required PBGameItem item = 10;                // 使用的道具
}

message UserItemResponse {
}


message JoinGameRequest {
  required string userId = 1;                    // 用户ID
  required string gameId = 2;                    // 游戏ID，比如你画我猜为：draw    
  
  optional int32  autoNew=3 [default=0];         // 没有合适的游戏加入，则自动创建一个新的
  required string nickName = 4;                  // 用户在游戏中的昵称
  optional string avatar = 5;
  repeated int64 excludeSessionId = 6;         
  optional int64 sessionToBeChange = 7;
  optional bool gender = 8;
  optional bool isRobot = 9;                     // 是否是机器人用户
  optional int32 targetSessionId = 10;           // 指定加入的Session ID
  optional int32 guessDifficultLevel = 11;       // 猜词难度，默认为1
  optional string roomId = 12;                   // 请求加入的好友房间ID
  optional string roomName = 13;                 // 请求加入的好友房间名称
  repeated PBSNSUser snsUsers = 14;              // 用户社交网络信息  
  optional string location = 15;
  optional int32 userLevel = 16;

  optional PBGameUser user = 100;          // 统一协议接口
}

message JoinGameResponse {
  required PBGameSession gameSession = 1;
}

//message ChangeRoomRequest {                     // 更换房间请求
//  repeated int64 excludeSessionId = 1;
//}
//
//message ChangeRoomResponse {
//  required PBGameSession gameSession = 1;
//}

message StartGameRequest {                     // 开始游戏请求
}

message StartGameResponse {                    // 开始游戏响应
  optional string currentPlayUserId = 5;       // 当前轮到的用户（如画画的用户）
  optional string nextPlayUserId = 6;          // 下一个要轮到的用户（如画画的用户）
}


message RoomNotificationRequest {
  repeated PBGameSessionChanged sessionsChanged = 1;
  repeated PBGameSession sessionsAdded = 2;
  repeated int32 sessionIdsDeleted = 3;
}

message RoomNotificationResponse{
}


message RollDiceBeginNotificationRequest {
  
}   

message RollDiceBeginNotificationResponse {
}

message RollDiceEndNotificationRequest{
  repeated PBUserDice userDice = 1;
} 

message RollDiceEndNotificationResponse{
  
} 

message NextPlayerStartNotificationRequest {
  required string currentPlayUserId = 1;
  required string nextPlayUserId = 2;
}

message NextPlayerStartNotificationResponse {
}

message GameOverNotificationRequest {
  optional PBDiceGameResult gameResult = 1;
} 
  
message GameOverNotificationResponse{
}                        

message GameChatRequest{
  repeated string toUserId = 1;                 // 对谁说，默认对所有
  optional string content = 2;                  // 说的内容  
  optional int32  chatType = 3 [default=0];     // 聊天类型：0：群聊；1：私聊
}

message GameChatResponse{
}

message SendDrawDataRequest {
  optional string word = 10;
  optional int32 level = 11;
  optional int32 language = 12;                 // 1 Chinese, 2 English

  repeated int32 points = 1 [packed=true];
  optional float width = 22;
  optional int32 color = 23;
  optional int32 penType = 24;
  
  optional string guessWord = 41;
  optional string guessUserId = 42;
  optional bool guessCorrect = 43;  
}

message SendDrawDataResponse{
}

//message GameStartNotification{                 // 游戏开始通知，用于服务器通知所有同一个会话里面的用户
//  required int64 sessionId = 1;                // 游戏会话ID
//  optional string userId = 2;                  // 接受请求的用户ID
//  required string userSequence = 3;            // 用户游戏顺序
//}

message GeneralNotification{                 

  optional string sessionHost = 3;                     // 房间主人
  optional int32  sessionStatus = 4;                   // 会话状态
  optional string currentPlayUserId = 5;               // 当前轮到的用户（如画画的用户）
  optional string nextPlayUserId = 6;                  // 下一个要轮到的用户（如画画的用户）
  optional string newUserId = 7;
  optional string quitUserId = 8;
  optional string nickName = 9;
  optional string userAvatar = 10;
  optional bool   userGender = 11;
  repeated PBSNSUser snsUsers = 12;                    // 用户社交网络信息    
  optional string location = 13;
  optional int32 userLevel = 14;
  
  // draw data
  repeated int32 points = 21 [packed=true];
  optional float width = 22;
  optional int32 color = 23;
  optional int32 penType = 24;
  
  // word data
  optional string word = 31;
  optional int32 level = 32;
  optional int32 round = 33;
  optional int32 language = 34;
  
  // guess data
  optional string guessWord = 41;
  optional string guessUserId = 42;
  optional bool guessCorrect = 43;
  optional int32 guessGainCoins = 44;
  
  // chat
  repeated string chatToUserId = 51;                 // 对谁说，默认对所有
  optional string chatContent = 52;                  // 说的内容
  optional int32  chatType = 53;                     // 说的类型
  
  // game turn result points
  optional int32 turnGainCoins = 61;
}

message FacetimeChatRequest {    
  required PBGameUser user = 1;
  optional bool chatGender = 2;
}

message FacetimeChatResponse {    
  repeated PBGameUser user = 1;
  required bool  chosenToInitiate = 2; 	// 是否能主动发起聊天
}

message GameMessage {
  required GameCommandType command = 1;
  required int32 messageId = 2;                             // 和请求消息对应的消息ID
  optional GameResultCode resultCode = 3 [default=SUCCESS]; // 响应结果，用于响应消息，0为成功
  
  optional string userId = 4;                               // 消息来自哪个用户
  optional int64  sessionId = 5 [default=0];
  optional int32  round = 6;
  optional GameCompleteReason completeReason = 7;
  optional int32  onlineUserCount = 8;
  optional string toUserId = 9;                             // 消息要发给哪个用户
  optional string currentPlayUserId = 10;                   // 当前游戏轮到的用户
  
  optional JoinGameRequest joinGameRequest = 11;
  optional JoinGameResponse joinGameResponse = 12;
  
  optional StartGameRequest startGameRequest = 13;
  optional StartGameResponse startGameResponse = 14;
  
  optional SendDrawDataRequest sendDrawDataRequest = 21;
  optional SendDrawDataResponse sendDrawDataResponse = 22;
    
  optional GameChatRequest chatRequest = 23;
  optional GameChatResponse chatResponse = 24;

  optional FacetimeChatRequest facetimeChatRequest = 31;
  optional FacetimeChatResponse facetimeChatResponse = 32;
  
  optional GeneralNotification notification = 51;
  
  optional GetRoomsRequest getRoomsRequest = 101;
  optional GetRoomsResponse getRoomsResponse = 102;
  
  optional CreateRoomRequest createRoomRequest= 103;
  optional CreateRoomResponse createRoomResponse= 104;
  
  optional EnterRoomRequest enterRoomRequest= 105;
  optional EnterRoomResponse enterRoomResponse= 106;
  
  optional RoomNotificationRequest roomNotificationRequest = 107;
  
  optional RollDiceEndNotificationRequest rollDiceEndNotificationRequest = 109;
}

message DataQueryResponse {
  required int32 resultCode = 1;
  optional int32 totalCount = 2;

  // for draw data
  repeated PBDraw drawData = 21;

  // for message
  repeated PBMessage message = 32;
  repeated PBMessageStat messageStat = 33;
  
  // for user feed
  repeated PBFeed feed = 41;
}
